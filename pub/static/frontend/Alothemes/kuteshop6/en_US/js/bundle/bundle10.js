require.config({"config": {
        "jsbuild":{"Magento_Tinymce3/tiny_mce/classes/xml/Parser.js":"/**\n * Parser.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function() {\n\t/**\n\t * XML Parser class. This class is only available for the dev version of TinyMCE.\n\t */\n\ttinymce.create('tinymce.xml.Parser', {\n\t\t/**\n\t\t * Constucts a new XML parser instance.\n\t\t *\n\t\t * @param {Object} Optional settings object.\n\t\t */\n\t\tParser : function(s) {\n\t\t\tthis.settings = tinymce.extend({\n\t\t\t\tasync : true\n\t\t\t}, s);\n\t\t},\n\n\t\t/**\n\t\t * Parses the specified document and executed the callback ones it's parsed.\n\t\t *\n\t\t * @param {String} u URL to XML file to parse.\n\t\t * @param {function} cb Optional callback to execute ones the XML file is loaded.\n\t\t * @param {Object} s Optional scope for the callback execution.\n\t\t */\n\t\tload : function(u, cb, s) {\n\t\t\tvar doc, t, w = window, c = 0;\n\n\t\t\ts = s || this;\n\n\t\t\t// Explorer, use XMLDOM since it can be used on local fs\n\t\t\tif (window.ActiveXObject) {\n\t\t\t\tdoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\tdoc.async = this.settings.async;\n\n\t\t\t\t// Wait for response\n\t\t\t\tif (doc.async) {\n\t\t\t\t\tfunction check() {\n\t\t\t\t\t\tif (doc.readyState == 4 || c++ > 10000)\n\t\t\t\t\t\t\treturn cb.call(s, doc);\n\n\t\t\t\t\t\tw.setTimeout(check, 10);\n\t\t\t\t\t};\n\n\t\t\t\t\tt = w.setTimeout(check, 10);\n\t\t\t\t}\n\n\t\t\t\tdoc.load(u);\n\n\t\t\t\tif (!doc.async)\n\t\t\t\t\tcb.call(s, doc);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// W3C using XMLHttpRequest\n\t\t\tif (window.XMLHttpRequest) {\n\t\t\t\ttry {\n\t\t\t\t\tdoc = new window.XMLHttpRequest();\n\t\t\t\t\tdoc.open('GET', u, this.settings.async);\n\t\t\t\t\tdoc.async = this.settings.async;\n\n\t\t\t\t\tdoc.onload = function() {\n\t\t\t\t\t\tcb.call(s, doc.responseXML);\n\t\t\t\t\t};\n\n\t\t\t\t\tdoc.send('');\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tcb.call(s, null, ex);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Parses the specified XML string.\n\t\t *\n\t\t * @param {String} xml XML String to parse.\n\t\t * @return {Document} XML Document instance.\n\t\t */\n\t\tloadXML : function(xml) {\n\t\t\tvar doc;\n\n\t\t\t// W3C\n\t\t\tif (window.DOMParser)\n\t\t\t\treturn new DOMParser().parseFromString(xml, \"text/xml\");\n\n\t\t\t// Explorer\n\t\t\tif (window.ActiveXObject) {\n\t\t\t\tdoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\tdoc.async = \"false\";\n\t\t\t\tdoc.loadXML(xml);\n\n\t\t\t\treturn doc;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns all string contents of a element concated together.\n\t\t *\n\t\t * @param {XMLNode} el XML element to retrieve text from.\n\t\t * @return {string} XML element text contents.\n\t\t */\n\t\tgetText : function(el) {\n\t\t\tvar o = '';\n\n\t\t\tif (!el)\n\t\t\t\treturn '';\n\n\t\t\tif (el.hasChildNodes()) {\n\t\t\t\tel = el.firstChild;\n\n\t\t\t\tdo {\n\t\t\t\t\tif (el.nodeType == 3 || el.nodeType == 4)\n\t\t\t\t\t\to += el.nodeValue;\n\t\t\t\t} while(el = el.nextSibling);\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t});\n})();\n","Magento_Tinymce3/tiny_mce/classes/adapter/prototype/adapter.js":"/**\n * adapter.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n// #ifdef prototype_adapter\n\n(function() {\n\tif (!window.Prototype)\n\t\treturn alert(\"Load prototype first!\");\n\n\t// Patch in core NS functions\n\ttinymce.extend(tinymce, {\n\t\ttrim : function(s) {return s ? s.strip() : '';},\n\t\tinArray : function(a, v) {return a && a.indexOf ? a.indexOf(v) : -1;}\n\t});\n\n\t// Patch in functions in various clases\n\t// Add a \"#ifndefjquery\" statement around each core API function you add below\n\tvar patches = {\n\t\t'tinymce.util.JSON' : {\n\t\t\t/*serialize : function(o) {\n\t\t\t\treturn o.toJSON();\n\t\t\t}*/\n\t\t},\n\t};\n\n\t// Patch functions after a class is created\n\ttinymce.onCreate = function(ty, c, p) {\n\t\ttinymce.extend(p, patches[c]);\n\t};\n})();\n\n// #endif\n","Magento_Tinymce3/tiny_mce/classes/adapter/jquery/adapter.js":"/**\n * adapter.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n// #ifdef jquery_adapter\n\n(function($, tinymce) {\n\tvar is = tinymce.is, attrRegExp = /^(href|src|style)$/i, undefined;\n\n\t// jQuery is undefined\n\tif (!$ && window.console) {\n\t\treturn console.log(\"Load jQuery first!\");\n\t}\n\n\t// Stick jQuery into the tinymce namespace\n\ttinymce.$ = $;\n\n\t// Setup adapter\n\ttinymce.adapter = {\n\t\tpatchEditor : function(editor) {\n\t\t\tvar fn = $.fn;\n\n\t\t\t// Adapt the css function to make sure that the data-mce-style\n\t\t\t// attribute gets updated with the new style information\n\t\t\tfunction css(name, value) {\n\t\t\t\tvar self = this;\n\n\t\t\t\t// Remove data-mce-style when set operation occurs\n\t\t\t\tif (value)\n\t\t\t\t\tself.removeAttr('data-mce-style');\n\n\t\t\t\treturn fn.css.apply(self, arguments);\n\t\t\t};\n\n\t\t\t// Apapt the attr function to make sure that it uses the data-mce- prefixed variants\n\t\t\tfunction attr(name, value) {\n\t\t\t\tvar self = this;\n\n\t\t\t\t// Update/retrieve data-mce- attribute variants\n\t\t\t\tif (attrRegExp.test(name)) {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t// Use TinyMCE behavior when setting the specifc attributes\n\t\t\t\t\t\tself.each(function(i, node) {\n\t\t\t\t\t\t\teditor.dom.setAttrib(node, name, value);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn self;\n\t\t\t\t\t} else\n\t\t\t\t\t\treturn self.attr('data-mce-' + name);\n\t\t\t\t}\n\n\t\t\t\t// Default behavior\n\t\t\t\treturn fn.attr.apply(self, arguments);\n\t\t\t};\n\n\t\t\tfunction htmlPatchFunc(func) {\n\t\t\t\t// Returns a modified function that processes\n\t\t\t\t// the HTML before executing the action this makes sure\n\t\t\t\t// that href/src etc gets moved into the data-mce- variants\n\t\t\t\treturn function(content) {\n\t\t\t\t\tif (content)\n\t\t\t\t\t\tcontent = editor.dom.processHTML(content);\n\n\t\t\t\t\treturn func.call(this, content);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t// Patch various jQuery functions to handle tinymce specific attribute and content behavior\n\t\t\t// we don't patch the jQuery.fn directly since it will most likely break compatibility\n\t\t\t// with other jQuery logic on the page. Only instances created by TinyMCE should be patched.\n\t\t\tfunction patch(jq) {\n\t\t\t\t// Patch some functions, only patch the object once\n\t\t\t\tif (jq.css !== css) {\n\t\t\t\t\t// Patch css/attr to use the data-mce- prefixed attribute variants\n\t\t\t\t\tjq.css = css;\n\t\t\t\t\tjq.attr = attr;\n\n\t\t\t\t\t// Patch HTML functions to use the DOMUtils.processHTML filter logic\n\t\t\t\t\tjq.html = htmlPatchFunc(fn.html);\n\t\t\t\t\tjq.append = htmlPatchFunc(fn.append);\n\t\t\t\t\tjq.prepend = htmlPatchFunc(fn.prepend);\n\t\t\t\t\tjq.after = htmlPatchFunc(fn.after);\n\t\t\t\t\tjq.before = htmlPatchFunc(fn.before);\n\t\t\t\t\tjq.replaceWith = htmlPatchFunc(fn.replaceWith);\n\t\t\t\t\tjq.tinymce = editor;\n\n\t\t\t\t\t// Each pushed jQuery instance needs to be patched\n\t\t\t\t\t// as well for example when traversing the DOM\n\t\t\t\t\tjq.pushStack = function() {\n\t\t\t\t\t\treturn patch(fn.pushStack.apply(this, arguments));\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn jq;\n\t\t\t};\n\n\t\t\t// Add a $ function on each editor instance this one is scoped for the editor document object\n\t\t\t// this way you can do chaining like this tinymce.get(0).$('p').append('text').css('color', 'red');\n\t\t\teditor.$ = function(selector, scope) {\n\t\t\t\tvar doc = editor.getDoc();\n\n\t\t\t\treturn patch($(selector || doc, doc || scope));\n\t\t\t};\n\t\t}\n\t};\n\n\t// Patch in core NS functions\n\ttinymce.extend = $.extend;\n\ttinymce.extend(tinymce, {\n\t\tmap : $.map,\n\t\tgrep : function(a, f) {return $.grep(a, f || function(){return 1;});},\n\t\tinArray : function(a, v) {return $.inArray(v, a || []);}\n\n\t\t/* Didn't iterate stylesheets\n\t\teach : function(o, cb, s) {\n\t\t\tif (!o)\n\t\t\t\treturn 0;\n\n\t\t\tvar r = 1;\n\n\t\t\t$.each(o, function(nr, el){\n\t\t\t\tif (cb.call(s, el, nr, o) === false) {\n\t\t\t\t\tr = 0;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn r;\n\t\t}*/\n\t});\n\n\t// Patch in functions in various clases\n\t// Add a \"#ifndefjquery\" statement around each core API function you add below\n\tvar patches = {\n\t\t'tinymce.dom.DOMUtils' : {\n\t\t\t/*\n\t\t\taddClass : function(e, c) {\n\t\t\t\tif (is(e, 'array') && is(e[0], 'string'))\n\t\t\t\t\te = e.join(',#');\n\t\t\t\treturn (e && $(is(e, 'string') ? '#' + e : e)\n\t\t\t\t\t.addClass(c)\n\t\t\t\t\t.attr('class')) || false;\n\t\t\t},\n\n\t\t\thasClass : function(n, c) {\n\t\t\t\treturn $(is(n, 'string') ? '#' + n : n).hasClass(c);\n\t\t\t},\n\n\t\t\tremoveClass : function(e, c) {\n\t\t\t\tif (!e)\n\t\t\t\t\treturn false;\n\n\t\t\t\tvar r = [];\n\n\t\t\t\t$(is(e, 'string') ? '#' + e : e)\n\t\t\t\t\t.removeClass(c)\n\t\t\t\t\t.each(function(){\n\t\t\t\t\t\tr.push(this.className);\n\t\t\t\t\t});\n\n\t\t\t\treturn r.length == 1 ? r[0] : r;\n\t\t\t},\n\t\t\t*/\n\n\t\t\tselect : function(pattern, scope) {\n\t\t\t\tvar t = this;\n\n\t\t\t\treturn $.find(pattern, t.get(scope) || t.get(t.settings.root_element) || t.doc, []);\n\t\t\t},\n\n\t\t\tis : function(n, patt) {\n\t\t\t\treturn $(this.get(n)).is(patt);\n\t\t\t}\n\n\t\t\t/*\n\t\t\tshow : function(e) {\n\t\t\t\tif (is(e, 'array') && is(e[0], 'string'))\n\t\t\t\t\te = e.join(',#');\n\n\t\t\t\t$(is(e, 'string') ? '#' + e : e).css('display', 'block');\n\t\t\t},\n\n\t\t\thide : function(e) {\n\t\t\t\tif (is(e, 'array') && is(e[0], 'string'))\n\t\t\t\t\te = e.join(',#');\n\n\t\t\t\t$(is(e, 'string') ? '#' + e : e).css('display', 'none');\n\t\t\t},\n\n\t\t\tisHidden : function(e) {\n\t\t\t\treturn $(is(e, 'string') ? '#' + e : e).is(':hidden');\n\t\t\t},\n\n\t\t\tinsertAfter : function(n, e) {\n\t\t\t\treturn $(is(e, 'string') ? '#' + e : e).after(n);\n\t\t\t},\n\n\t\t\treplace : function(o, n, k) {\n\t\t\t\tn = $(is(n, 'string') ? '#' + n : n);\n\n\t\t\t\tif (k)\n\t\t\t\t\tn.children().appendTo(o);\n\n\t\t\t\tn.replaceWith(o);\n\t\t\t},\n\n\t\t\tsetStyle : function(n, na, v) {\n\t\t\t\tif (is(n, 'array') && is(n[0], 'string'))\n\t\t\t\t\tn = n.join(',#');\n\n\t\t\t\t$(is(n, 'string') ? '#' + n : n).css(na, v);\n\t\t\t},\n\n\t\t\tgetStyle : function(n, na, c) {\n\t\t\t\treturn $(is(n, 'string') ? '#' + n : n).css(na);\n\t\t\t},\n\n\t\t\tsetStyles : function(e, o) {\n\t\t\t\tif (is(e, 'array') && is(e[0], 'string'))\n\t\t\t\t\te = e.join(',#');\n\t\t\t\t$(is(e, 'string') ? '#' + e : e).css(o);\n\t\t\t},\n\n\t\t\tsetAttrib : function(e, n, v) {\n\t\t\t\tvar t = this, s = t.settings;\n\n\t\t\t\tif (is(e, 'array') && is(e[0], 'string'))\n\t\t\t\t\te = e.join(',#');\n\n\t\t\t\te = $(is(e, 'string') ? '#' + e : e);\n\n\t\t\t\tswitch (n) {\n\t\t\t\t\tcase \"style\":\n\t\t\t\t\t\te.each(function(i, v){\n\t\t\t\t\t\t\tif (s.keep_values)\n\t\t\t\t\t\t\t\t$(v).attr('data-mce-style', v);\n\n\t\t\t\t\t\t\tv.style.cssText = v;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"class\":\n\t\t\t\t\t\te.each(function(){\n\t\t\t\t\t\t\tthis.className = v;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"src\":\n\t\t\t\t\tcase \"href\":\n\t\t\t\t\t\te.each(function(i, v){\n\t\t\t\t\t\t\tif (s.keep_values) {\n\t\t\t\t\t\t\t\tif (s.url_converter)\n\t\t\t\t\t\t\t\t\tv = s.url_converter.call(s.url_converter_scope || t, v, n, v);\n\n\t\t\t\t\t\t\t\tt.setAttrib(v, 'data-mce-' + n, v);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (v !== null && v.length !== 0)\n\t\t\t\t\te.attr(n, '' + v);\n\t\t\t\telse\n\t\t\t\t\te.removeAttr(n);\n\t\t\t},\n\n\t\t\tsetAttribs : function(e, o) {\n\t\t\t\tvar t = this;\n\n\t\t\t\t$.each(o, function(n, v){\n\t\t\t\t\tt.setAttrib(e,n,v);\n\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n/*\n\t\t'tinymce.dom.Event' : {\n\t\t\tadd : function (o, n, f, s) {\n\t\t\t\tvar lo, cb;\n\n\t\t\t\tcb = function(e) {\n\t\t\t\t\te.target = e.target || this;\n\t\t\t\t\tf.call(s || this, e);\n\t\t\t\t};\n\n\t\t\t\tif (is(o, 'array') && is(o[0], 'string'))\n\t\t\t\t\to = o.join(',#');\n\t\t\t\to = $(is(o, 'string') ? '#' + o : o);\n\t\t\t\tif (n == 'init') {\n\t\t\t\t\to.ready(cb, s);\n\t\t\t\t} else {\n\t\t\t\t\tif (s) {\n\t\t\t\t\t\to.bind(n, s, cb);\n\t\t\t\t\t} else {\n\t\t\t\t\t\to.bind(n, cb);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlo = this._jqLookup || (this._jqLookup = []);\n\t\t\t\tlo.push({func : f, cfunc : cb});\n\n\t\t\t\treturn cb;\n\t\t\t},\n\n\t\t\tremove : function(o, n, f) {\n\t\t\t\t// Find cfunc\n\t\t\t\t$(this._jqLookup).each(function() {\n\t\t\t\t\tif (this.func === f)\n\t\t\t\t\t\tf = this.cfunc;\n\t\t\t\t});\n\n\t\t\t\tif (is(o, 'array') && is(o[0], 'string'))\n\t\t\t\t\to = o.join(',#');\n\n\t\t\t\t$(is(o, 'string') ? '#' + o : o).unbind(n,f);\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n*/\n\t};\n\n\t// Patch functions after a class is created\n\ttinymce.onCreate = function(ty, c, p) {\n\t\ttinymce.extend(p, patches[c]);\n\t};\n})(window.jQuery, tinymce);\n\n// #endif\n","Magento_Tinymce3/tiny_mce/classes/adapter/jquery/jquery.tinymce.js":"/**\n * jquery.tinymce.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function($) {\n\tvar undefined,\n\t\tlazyLoading,\n\t\tdelayedInits = [],\n\t\twin = window;\n\n\t$.fn.tinymce = function(settings) {\n\t\tvar self = this, url, ed, base, pos, lang, query = \"\", suffix = \"\";\n\n\t\t// No match then just ignore the call\n\t\tif (!self.length)\n\t\t\treturn self;\n\n\t\t// Get editor instance\n\t\tif (!settings)\n\t\t\treturn tinyMCE.get(self[0].id);\n\n\t\tself.css('visibility', 'hidden'); // Hide textarea to avoid flicker\n\n\t\tfunction init() {\n\t\t\tvar editors = [], initCount = 0;\n\n\t\t\t// Apply patches to the jQuery object, only once\n\t\t\tif (applyPatch) {\n\t\t\t\tapplyPatch();\n\t\t\t\tapplyPatch = null;\n\t\t\t}\n\n\t\t\t// Create an editor instance for each matched node\n\t\t\tself.each(function(i, node) {\n\t\t\t\tvar ed, id = node.id, oninit = settings.oninit;\n\n\t\t\t\t// Generate unique id for target element if needed\n\t\t\t\tif (!id)\n\t\t\t\t\tnode.id = id = tinymce.DOM.uniqueId();\n\n\t\t\t\t// Create editor instance and render it\n\t\t\t\ted = new tinymce.Editor(id, settings);\n\t\t\t\teditors.push(ed);\n\n\t\t\t\ted.onInit.add(function() {\n\t\t\t\t\tvar scope, func = oninit;\n\n\t\t\t\t\tself.css('visibility', '');\n\n\t\t\t\t\t// Run this if the oninit setting is defined\n\t\t\t\t\t// this logic will fire the oninit callback ones each\n\t\t\t\t\t// matched editor instance is initialized\n\t\t\t\t\tif (oninit) {\n\t\t\t\t\t\t// Fire the oninit event ones each editor instance is initialized\n\t\t\t\t\t\tif (++initCount == editors.length) {\n\t\t\t\t\t\t\tif (tinymce.is(func, \"string\")) {\n\t\t\t\t\t\t\t\tscope = (func.indexOf(\".\") === -1) ? null : tinymce.resolve(func.replace(/\\.\\w+$/, \"\"));\n\t\t\t\t\t\t\t\tfunc = tinymce.resolve(func);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Call the oninit function with the object\n\t\t\t\t\t\t\tfunc.apply(scope || tinymce, editors);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Render the editor instances in a separate loop since we\n\t\t\t// need to have the full editors array used in the onInit calls\n\t\t\t$.each(editors, function(i, ed) {\n\t\t\t\ted.render();\n\t\t\t});\n\t\t}\n\n\t\t// Load TinyMCE on demand, if we need to\n\t\tif (!win[\"tinymce\"] && !lazyLoading && (url = settings.script_url)) {\n\t\t\tlazyLoading = 1;\n\t\t\tbase = url.substring(0, url.lastIndexOf(\"/\"));\n\n\t\t\t// Check if it's a dev/src version they want to load then\n\t\t\t// make sure that all plugins, themes etc are loaded in source mode aswell\n\t\t\tif (/_(src|dev)\\.js/g.test(url))\n\t\t\t\tsuffix = \"_src\";\n\n\t\t\t// Parse out query part, this will be appended to all scripts, css etc to clear browser cache\n\t\t\tpos = url.lastIndexOf(\"?\");\n\t\t\tif (pos != -1)\n\t\t\t\tquery = url.substring(pos + 1);\n\n\t\t\t// Setup tinyMCEPreInit object this will later be used by the TinyMCE\n\t\t\t// core script to locate other resources like CSS files, dialogs etc\n\t\t\t// You can also predefined a tinyMCEPreInit object and then it will use that instead\n\t\t\twin.tinyMCEPreInit = win.tinyMCEPreInit || {\n\t\t\t\tbase : base,\n\t\t\t\tsuffix : suffix,\n\t\t\t\tquery : query\n\t\t\t};\n\n\t\t\t// url contains gzip then we assume it's a compressor\n\t\t\tif (url.indexOf('gzip') != -1) {\n\t\t\t\tlang = settings.language || \"en\";\n\t\t\t\turl = url + (/\\?/.test(url) ? '&' : '?') + \"js=true&core=true&suffix=\" + escape(suffix) + \"&themes=\" + escape(settings.theme) + \"&plugins=\" + escape(settings.plugins) + \"&languages=\" + lang;\n\n\t\t\t\t// Check if compressor script is already loaded otherwise setup a basic one\n\t\t\t\tif (!win[\"tinyMCE_GZ\"]) {\n\t\t\t\t\ttinyMCE_GZ = {\n\t\t\t\t\t\tstart : function() {\n\t\t\t\t\t\t\ttinymce.suffix = suffix;\n\n\t\t\t\t\t\t\tfunction load(url) {\n\t\t\t\t\t\t\t\ttinymce.ScriptLoader.markDone(tinyMCE.baseURI.toAbsolute(url));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Add core languages\n\t\t\t\t\t\t\tload(\"langs/\" + lang + \".js\");\n\n\t\t\t\t\t\t\t// Add themes with languages\n\t\t\t\t\t\t\tload(\"themes/\" + settings.theme + \"/editor_template\" + suffix + \".js\");\n\t\t\t\t\t\t\tload(\"themes/\" + settings.theme + \"/langs/\" + lang + \".js\");\n\n\t\t\t\t\t\t\t// Add plugins with languages\n\t\t\t\t\t\t\t$.each(settings.plugins.split(\",\"), function(i, name) {\n\t\t\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\t\t\tload(\"plugins/\" + name + \"/editor_plugin\" + suffix + \".js\");\n\t\t\t\t\t\t\t\t\tload(\"plugins/\" + name + \"/langs/\" + lang + \".js\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tend : function() {\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Load the script cached and execute the inits once it's done\n\t\t\t$.ajax({\n\t\t\t\ttype : \"GET\",\n\t\t\t\turl : url,\n\t\t\t\tdataType : \"script\",\n\t\t\t\tcache : true,\n\t\t\t\tsuccess : function() {\n\t\t\t\t\ttinymce.dom.Event.domLoaded = 1;\n\t\t\t\t\tlazyLoading = 2;\n\n\t\t\t\t\t// Execute callback after mainscript has been loaded and before the initialization occurs\n\t\t\t\t\tif (settings.script_loaded)\n\t\t\t\t\t\tsettings.script_loaded();\n\n\t\t\t\t\tinit();\n\n\t\t\t\t\t$.each(delayedInits, function(i, init) {\n\t\t\t\t\t\tinit();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// Delay the init call until tinymce is loaded\n\t\t\tif (lazyLoading === 1)\n\t\t\t\tdelayedInits.push(init);\n\t\t\telse\n\t\t\t\tinit();\n\t\t}\n\n\t\treturn self;\n\t};\n\n\t// Add :tinymce psuedo selector this will select elements that has been converted into editor instances\n\t// it's now possible to use things like $('*:tinymce') to get all TinyMCE bound elements.\n\t$.extend($.expr[\":\"], {\n\t\ttinymce : function(e) {\n\t\t\treturn e.id && !!tinyMCE.get(e.id);\n\t\t}\n\t});\n\n\t// This function patches internal jQuery functions so that if\n\t// you for example remove an div element containing an editor it's\n\t// automatically destroyed by the TinyMCE API\n\tfunction applyPatch() {\n\t\t// Removes any child editor instances by looking for editor wrapper elements\n\t\tfunction removeEditors(name) {\n\t\t\t// If the function is remove\n\t\t\tif (name === \"remove\") {\n\t\t\t\tthis.each(function(i, node) {\n\t\t\t\t\tvar ed = tinyMCEInstance(node);\n\n\t\t\t\t\tif (ed)\n\t\t\t\t\t\ted.remove();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.find(\"span.mceEditor,div.mceEditor\").each(function(i, node) {\n\t\t\t\tvar ed = tinyMCE.get(node.id.replace(/_parent$/, \"\"));\n\n\t\t\t\tif (ed)\n\t\t\t\t\ted.remove();\n\t\t\t});\n\t\t}\n\n\t\t// Loads or saves contents from/to textarea if the value\n\t\t// argument is defined it will set the TinyMCE internal contents\n\t\tfunction loadOrSave(value) {\n\t\t\tvar self = this, ed;\n\n\t\t\t// Handle set value\n\t\t\tif (value !== undefined) {\n\t\t\t\tremoveEditors.call(self);\n\n\t\t\t\t// Saves the contents before get/set value of textarea/div\n\t\t\t\tself.each(function(i, node) {\n\t\t\t\t\tvar ed;\n\n\t\t\t\t\tif (ed = tinyMCE.get(node.id))\n\t\t\t\t\t\ted.setContent(value);\n\t\t\t\t});\n\t\t\t} else if (self.length > 0) {\n\t\t\t\t// Handle get value\n\t\t\t\tif (ed = tinyMCE.get(self[0].id))\n\t\t\t\t\treturn ed.getContent();\n\t\t\t}\n\t\t}\n\n\t\t// Returns tinymce instance for the specified element or null if it wasn't found\n\t\tfunction tinyMCEInstance(element) {\n\t\t\tvar ed = null;\n\n\t\t\t(element) && (element.id) && (win[\"tinymce\"]) && (ed = tinyMCE.get(element.id));\n\n\t\t\treturn ed;\n\t\t}\n\n\t\t// Checks if the specified set contains tinymce instances\n\t\tfunction containsTinyMCE(matchedSet) {\n\t\t\treturn !!((matchedSet) && (matchedSet.length) && (win[\"tinymce\"]) && (matchedSet.is(\":tinymce\")));\n\t\t}\n\n\t\t// Patch various jQuery functions\n\t\tvar jQueryFn = {};\n\n\t\t// Patch some setter/getter functions these will\n\t\t// now be able to set/get the contents of editor instances for\n\t\t// example $('#editorid').html('Content'); will update the TinyMCE iframe instance\n\t\t$.each([\"text\", \"html\", \"val\"], function(i, name) {\n\t\t\tvar origFn = jQueryFn[name] = $.fn[name],\n\t\t\t\ttextProc = (name === \"text\");\n\n\t\t\t $.fn[name] = function(value) {\n\t\t\t\tvar self = this;\n\n\t\t\t\tif (!containsTinyMCE(self))\n\t\t\t\t\treturn origFn.apply(self, arguments);\n\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tloadOrSave.call(self.filter(\":tinymce\"), value);\n\t\t\t\t\torigFn.apply(self.not(\":tinymce\"), arguments);\n\n\t\t\t\t\treturn self; // return original set for chaining\n\t\t\t\t} else {\n\t\t\t\t\tvar ret = \"\";\n\t\t\t\t\tvar args = arguments;\n\t\t\t\t\t\n\t\t\t\t\t(textProc ? self : self.eq(0)).each(function(i, node) {\n\t\t\t\t\t\tvar ed = tinyMCEInstance(node);\n\n\t\t\t\t\t\tret += ed ? (textProc ? ed.getContent().replace(/<(?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g, \"\") : ed.getContent()) : origFn.apply($(node), args);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t };\n\t\t});\n\n\t\t// Makes it possible to use $('#id').append(\"content\"); to append contents to the TinyMCE editor iframe\n\t\t$.each([\"append\", \"prepend\"], function(i, name) {\n\t\t\tvar origFn = jQueryFn[name] = $.fn[name],\n\t\t\t\tprepend = (name === \"prepend\");\n\n\t\t\t $.fn[name] = function(value) {\n\t\t\t\tvar self = this;\n\n\t\t\t\tif (!containsTinyMCE(self))\n\t\t\t\t\treturn origFn.apply(self, arguments);\n\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tself.filter(\":tinymce\").each(function(i, node) {\n\t\t\t\t\t\tvar ed = tinyMCEInstance(node);\n\n\t\t\t\t\t\ted && ed.setContent(prepend ? value + ed.getContent() : ed.getContent() + value);\n\t\t\t\t\t});\n\n\t\t\t\t\torigFn.apply(self.not(\":tinymce\"), arguments);\n\n\t\t\t\t\treturn self; // return original set for chaining\n\t\t\t\t}\n\t\t\t };\n\t\t});\n\n\t\t// Makes sure that the editor instance gets properly destroyed when the parent element is removed\n\t\t$.each([\"remove\", \"replaceWith\", \"replaceAll\", \"empty\"], function(i, name) {\n\t\t\tvar origFn = jQueryFn[name] = $.fn[name];\n\n\t\t\t$.fn[name] = function() {\n\t\t\t\tremoveEditors.call(this, name);\n\n\t\t\t\treturn origFn.apply(this, arguments);\n\t\t\t};\n\t\t});\n\n\t\tjQueryFn.attr = $.fn.attr;\n\n\t\t// Makes sure that $('#tinymce_id').attr('value') gets the editors current HTML contents\n\t\t$.fn.attr = function(name, value, type) {\n\t\t\tvar self = this;\n\n\t\t\tif ((!name) || (name !== \"value\") || (!containsTinyMCE(self)))\n\t\t\t\treturn jQueryFn.attr.call(self, name, value, type);\n\n\t\t\tif (value !== undefined) {\n\t\t\t\tloadOrSave.call(self.filter(\":tinymce\"), value);\n\t\t\t\tjQueryFn.attr.call(self.not(\":tinymce\"), name, value, type);\n\n\t\t\t\treturn self; // return original set for chaining\n\t\t\t} else {\n\t\t\t\tvar node = self[0], ed = tinyMCEInstance(node);\n\n\t\t\t\treturn ed ? ed.getContent() : jQueryFn.attr.call($(node), name, value, type);\n\t\t\t}\n\t\t};\n\t}\n})(jQuery);","Magento_Tinymce3/tiny_mce/classes/firebug/firebug-lite.js":"var firebug = {\n  version:[1.23,20090309],\n  el:{}, \n  env:{ \n    \"cache\":{},\n    \"extConsole\":null,\n    \"css\":\"http://getfirebug.com/releases/lite/1.2/firebug-lite.css\", \n    \"debug\":true,\n    \"detectFirebug\":true,\n    \"dIndex\":\"console\", \n    \"height\":295,\n    \"hideDOMFunctions\":false,\n    \"init\":false, \n    \"isPopup\":false,\n    \"liteFilename\":\"firebug-lite.js\",\n    \"minimized\":false,\n    \"openInPopup\": false,\n    \"override\":true,\n    \"ml\":false,\n    \"popupWin\":null,\n    \"showIconWhenHidden\":true,\n    \"targetWindow\":undefined,\n    \"popupTop\":1,\n    \"popupLeft\":1,\n    \"popupWidth\":undefined,\n    \"popupHeight\":undefined\n  },\n  initConsole:function(){\n    /* \n     * initialize the console - user defined values are not available within this method because FBLite is not yet initialized\n     */\n    var command;\n    try{\n      if((!window.console || (window.console && !window.console.firebug)) || (firebug.env.override && !(/Firefox\\/3/i.test(navigator.userAgent)))){\n        window.console = { \"provider\":\"Firebug Lite\" };\n\n        for(command in firebug.d.console.cmd){\n          window.console[command] = firebug.lib.util.Curry(firebug.d.console.run,window,command);\n        };\n      }\n      /*window.onerror = function(_message,_file,_line){\n        firebug.d.console.run('error',firebug.lib.util.String.format('{0} ({1},{2})',_message,firebug.getFileName(_file),_line));\n      };*/\n      } catch(e){}\n  },\n  overrideConsole:function(){\n    with (firebug){\n      env.override=true;\n      try{\n        env.extConsole=window.console;\n      } catch(e){}\n      initConsole();\n    }\n  },\n  restoreConsole:function(){\n    with(firebug){\n      if(env.extConsole){\n        env.override=false;\n        try{\n          window.console=env.extConsole;\n        } catch(e){}\n        env.extConsole=null;\n      }\n    }\n  },\n  init:function(_css){\n    var iconTitle = \"Click here or press F12, (CTRL|CMD)+SHIFT+L or SHIFT+ENTER to show Firebug Lite. CTRL|CMD click this icon to hide it.\";\n  \n    with(firebug){\n      if(document.getElementsByTagName('html')[0].attributes.getNamedItem('debug')){\n        env.debug = document.getElementsByTagName('html')[0].attributes.getNamedItem('debug').nodeValue !== \"false\";\n      }\n            \n      if(env.isPopup) {\n        env.openInPopup = false;\n        env.targetWindow = window.opener;\n        env.popupWidth = window.opener.firebug.env.popupWidth || window.opener.firebug.lib.util.GetViewport().width;\n        env.popupHeight = window.opener.firebug.env.popupHeight || window.opener.firebug.lib.util.GetViewport().height;\n      } else {\n        env.targetWindow = window;\n        env.popupWidth = env.popupWidth || lib.util.GetViewport().width;\n        env.popupHeight = env.popupHeight || lib.util.GetViewport().height;\n      }\n\n      settings.readCookie();\n      \n      if(env.init || (env.detectFirebug && window.console && window.console.firebug)) {\n        return;\n      }\n\n      document.getElementsByTagName(\"head\")[0].appendChild(\n        new lib.element(\"link\").attribute.set(\"rel\",\"stylesheet\").attribute.set(\"type\",\"text/css\").attribute.set(\"href\",env.css).element\n      );\n\n      if(env.override){\n        overrideConsole();\n      }\n      \n      /* \n       * Firebug Icon\n       */\n      el.firebugIcon = new lib.element(\"div\").attribute.set(\"id\",\"firebugIconDiv\").attribute.set(\"title\",iconTitle).attribute.set(\"alt\",iconTitle).event.addListener(\"mousedown\",win.iconClicked).insert(document.body);\n      \n      /* \n       * main interface\n       */\n      el.content = {};\n      el.mainiframe = new lib.element(\"IFRAME\").attribute.set(\"id\",\"FirebugIFrame\").environment.addStyle({ \"display\":\"none\", \"width\":lib.util.GetViewport().width+\"px\" }).insert(document.body);\n      el.main = new lib.element(\"DIV\").attribute.set(\"id\",\"Firebug\").environment.addStyle({ \"display\":\"none\", \"width\":lib.util.GetViewport().width+\"px\" }).insert(document.body);\n      if(!env.isPopup){\n        el.resizer = new lib.element(\"DIV\").attribute.addClass(\"Resizer\").event.addListener(\"mousedown\",win.resizer.start).insert(el.main);\n      }\n      el.header = new lib.element(\"DIV\").attribute.addClass(\"Header\").insert(el.main);\n      el.left = {};\n      el.left.container = new lib.element(\"DIV\").attribute.addClass(\"Left\").insert(el.main);\n      el.right = {};\n      el.right.container = new lib.element(\"DIV\").attribute.addClass(\"Right\").insert(el.main);\n      el.main.child.add(new lib.element(\"DIV\").attribute.addClass('Clear'));\n\n      /*\n       * buttons\n       */\n      el.button = {};\n      el.button.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonContainer\").insert(el.header);\n      el.button.logo = new lib.element(\"A\").attribute.set(\"title\",\"Firebug Lite\").attribute.set(\"target\",\"_blank\").attribute.set(\"href\",\"http://getfirebug.com/lite.html\").update(\"&nbsp;\").attribute.addClass(\"Button Logo\").insert(el.button.container);\n      el.button.inspect = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",env.targetWindow.firebug.d.inspector.toggle).update(\"Inspect\").insert(el.button.container);\n      el.button.dock = new lib.element(\"A\").attribute.addClass(\"Button Dock\").event.addListener(\"click\", win.dock).insert(el.button.container);\n      el.button.newWindow = new lib.element(\"A\").attribute.addClass(\"Button NewWindow\").event.addListener(\"click\", win.newWindow).insert(el.button.container);\n\n      if(!env.isPopup){\n        el.button.maximize = new lib.element(\"A\").attribute.addClass(\"Button Maximize\").event.addListener(\"click\",win.maximize).insert(el.button.container);\n        el.button.minimize = new lib.element(\"A\").attribute.addClass(\"Button Minimize\").event.addListener(\"click\",win.minimize).insert(el.button.container);\n        el.button.close = new lib.element(\"A\").attribute.addClass(\"Button Close\").event.addListener(\"click\",win.hide).insert(el.button.container);\n      }\n\n      if(lib.env.ie||lib.env.webkit){\n        el.button.container.environment.addStyle({ \"paddingTop\":\"12px\" });\n      }\n\n      /*\n       * navigation\n       */\n      el.nav = {};\n      el.nav.container = new lib.element(\"DIV\").attribute.addClass(\"Nav\").insert(el.left.container);\n      el.nav.console = new lib.element(\"A\").attribute.addClass(\"Tab Selected\").event.addListener(\"click\",lib.util.Curry(d.navigate,window,\"console\")).update(\"Console\").insert(el.nav.container);\n      el.nav.html = new lib.element(\"A\").attribute.addClass(\"Tab\").update(\"HTML\").event.addListener(\"click\",lib.util.Curry(d.navigate,window,\"html\")).insert(el.nav.container);\n      el.nav.css = new lib.element(\"A\").attribute.addClass(\"Tab\").update(\"CSS\").event.addListener(\"click\",lib.util.Curry(d.navigate,window,\"css\")).insert(el.nav.container);\n      if(!env.isPopup){\n        el.nav.scripts = new lib.element(\"A\").attribute.addClass(\"Tab\").update(\"Script\").event.addListener(\"click\",lib.util.Curry(d.navigate,window,\"scripts\")).insert(el.nav.container);\n      }\n      el.nav.dom = new lib.element(\"A\").attribute.addClass(\"Tab\").update(\"DOM\").event.addListener(\"click\",lib.util.Curry(d.navigate,env.targetWindow,\"dom\")).insert(el.nav.container);\n      el.nav.xhr = new lib.element(\"A\").attribute.addClass(\"Tab\").update(\"XHR\").event.addListener(\"click\",lib.util.Curry(d.navigate,window,\"xhr\")).insert(el.nav.container);\n      el.nav.optionsdiv = new lib.element(\"DIV\").attribute.addClass(\"Settings\").insert(el.nav.container);\n      el.nav.options = new lib.element(\"A\").attribute.addClass(\"Tab\").update(\"Options&nbsp;&or;\").event.addListener(\"click\", settings.toggle).insert(el.nav.optionsdiv);\n      \n      /*\n       * inspector\n       */\n      el.borderInspector = new lib.element(\"DIV\").attribute.set(\"id\",\"FirebugBorderInspector\").event.addListener(\"click\",listen.inspector).insert(document.body);\n      el.bgInspector = new lib.element(\"DIV\").attribute.set(\"id\",\"FirebugBGInspector\").insert(document.body);\n\n      /*\n       * console\n       */\n      el.left.console = {};\n      el.left.console.container = new lib.element(\"DIV\").attribute.addClass(\"Console\").insert(el.left.container);\n      el.left.console.mlButton = new lib.element(\"A\").attribute.addClass(\"MLButton\").event.addListener(\"click\",d.console.toggleML).insert(el.left.console.container);\n      el.left.console.monitor = new lib.element(\"DIV\").insert(\n          new lib.element(\"DIV\").attribute.addClass(\"Monitor\").insert(el.left.console.container)\n      );\n      el.left.console.container.child.add(\n          new lib.element(\"DIV\").attribute.addClass(\"InputArrow\").update(\">>>\")\n      );\n      el.left.console.input = new lib.element(\"INPUT\").attribute.set(\"type\",\"text\").attribute.addClass(\"Input\").event.addListener(\"keydown\",listen.consoleTextbox).insert(\n          new lib.element(\"DIV\").attribute.addClass(\"InputContainer\").insert(el.left.console.container)\n      );\n\n      el.right.console = {};\n      el.right.console.container = new lib.element(\"DIV\").attribute.addClass(\"Console Container\").insert(el.right.container);\n      el.right.console.mlButton = new lib.element(\"A\").attribute.addClass(\"MLButton CloseML\").event.addListener(\"click\",d.console.toggleML).insert(el.right.console.container);\n      el.right.console.input = new lib.element(\"TEXTAREA\").attribute.addClass(\"Input\").insert(el.right.console.container);\n      el.right.console.input.event.addListener(\"keydown\",lib.util.Curry(tab,window,el.right.console.input.element));\n      el.right.console.run = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",listen.runMultiline).update(\"Run\").insert(el.right.console.container);\n      el.right.console.clear = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",lib.util.Curry(d.clean,window,el.right.console.input)).update(\"Clear\").insert(el.right.console.container);\n\n      el.button.console = {};\n      el.button.console.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonSet\").insert(el.button.container);\n      el.button.console.clear = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",d.console.clear).update(\"Clear\").insert(el.button.console.container);\n\n      /*\n       * html\n       */\n\n      el.left.html = {};\n      el.left.html.container = new lib.element(\"DIV\").attribute.addClass(\"HTML\").insert(el.left.container);\n\n      el.right.html = {};\n      el.right.html.container = new lib.element(\"DIV\").attribute.addClass(\"HTML Container\").insert(el.right.container);\n\n      el.right.html.nav = {};\n      el.right.html.nav.container = new lib.element(\"DIV\").attribute.addClass(\"Nav\").insert(el.right.html.container);\n      el.right.html.nav.computedStyle = new lib.element(\"A\").attribute.addClass(\"Tab Selected\").event.addListener(\"click\",lib.util.Curry(d.html.navigate,firebug,\"computedStyle\")).update(\"Computed Style\").insert(el.right.html.nav.container);\n      el.right.html.nav.dom = new lib.element(\"A\").attribute.addClass(\"Tab\").event.addListener(\"click\",lib.util.Curry(d.html.navigate,firebug,\"dom\")).update(\"DOM\").insert(el.right.html.nav.container);\n\n      el.right.html.content = new lib.element(\"DIV\").attribute.addClass(\"Content\").insert(el.right.html.container);\n\n      el.button.html = {};\n      el.button.html.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonSet HTML\").insert(el.button.container);\n\n      /*\n       * css\n       */\n\n      el.left.css = {};\n      el.left.css.container = new lib.element(\"DIV\").attribute.addClass(\"CSS\").insert(el.left.container);\n\n      el.right.css = {};\n      el.right.css.container = new lib.element(\"DIV\").attribute.addClass(\"CSS Container\").insert(el.right.container);\n\n      el.right.css.nav = {};\n      el.right.css.nav.container = new lib.element(\"DIV\").attribute.addClass(\"Nav\").insert(el.right.css.container);\n      el.right.css.nav.runCSS = new lib.element(\"A\").attribute.addClass(\"Tab Selected\").update(\"Run CSS\").insert(el.right.css.nav.container);\n\n      el.right.css.mlButton = new lib.element(\"A\").attribute.addClass(\"MLButton CloseML\").event.addListener(\"click\",d.console.toggleML).insert(el.right.css.container);\n      el.right.css.input = new lib.element(\"TEXTAREA\").attribute.addClass(\"Input\").insert(el.right.css.container);\n      el.right.css.input.event.addListener(\"keydown\",lib.util.Curry(firebug.tab,window,el.right.css.input.element));\n      el.right.css.run = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",listen.runCSS).update(\"Run\").insert(el.right.css.container);\n      el.right.css.clear = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",lib.util.Curry(d.clean,window,el.right.css.input)).update(\"Clear\").insert(el.right.css.container);\n\n      el.button.css = {};\n      el.button.css.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonSet CSS\").insert(el.button.container);\n      el.button.css.selectbox = new lib.element(\"SELECT\").event.addListener(\"change\",listen.cssSelectbox).insert(el.button.css.container);\n\n      /*\n       * scripts\n       */\n\n      el.left.scripts = {};\n      el.left.scripts.container = new lib.element(\"DIV\").attribute.addClass(\"Scripts\").insert(el.left.container);\n\n      el.right.scripts = {};\n      el.right.scripts.container = new lib.element(\"DIV\").attribute.addClass(\"Scripts Container\").insert(el.right.container);\n\n      el.button.scripts = {};\n      el.button.scripts.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonSet Scripts\").insert(el.button.container);\n      el.button.scripts.selectbox = new lib.element(\"SELECT\").event.addListener(\"change\",listen.scriptsSelectbox).insert(el.button.scripts.container);\n      el.button.scripts.lineNumbers = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",d.scripts.toggleLineNumbers).update(\"Show Line Numbers\").insert(el.button.scripts.container);\n\n      /*\n       * dom\n       */\n\n      el.left.dom = {};\n      el.left.dom.container = new lib.element(\"DIV\").attribute.addClass(\"DOM\").insert(el.left.container);\n\n      el.right.dom = {};\n      el.right.dom.container = new lib.element(\"DIV\").attribute.addClass(\"DOM Container\").insert(el.right.container);\n\n      el.button.dom = {};\n      el.button.dom.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonSet DOM\").insert(el.button.container);\n      el.button.dom.label = new lib.element(\"LABEL\").update(\"Object Path:\").insert(el.button.dom.container);\n      el.button.dom.textbox = new lib.element(\"INPUT\").event.addListener(\"keydown\",listen.domTextbox).update(env.isPopup?\"window.opener\":\"window\").insert(el.button.dom.container);\n\n      /*\n       * str\n       */\n      el.left.str = {};\n      el.left.str.container = new lib.element(\"DIV\").attribute.addClass(\"STR\").insert(el.left.container);\n\n      el.right.str = {};\n      el.right.str.container = new lib.element(\"DIV\").attribute.addClass(\"STR\").insert(el.left.container);\n\n      el.button.str = {};\n      el.button.str.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonSet XHR\").insert(el.button.container);\n      el.button.str.watch = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",lib.util.Curry(d.navigate,window,\"xhr\")).update(\"Back\").insert(el.button.str.container);\n\n      /*\n       * xhr\n       */\n      el.left.xhr = {};\n      el.left.xhr.container = new lib.element(\"DIV\").attribute.addClass(\"XHR\").insert(el.left.container);\n\n      el.right.xhr = {};\n      el.right.xhr.container = new lib.element(\"DIV\").attribute.addClass(\"XHR\").insert(el.left.container);\n\n\n      el.button.xhr = {};\n      el.button.xhr.container = new lib.element(\"DIV\").attribute.addClass(\"ButtonSet XHR\").insert(el.button.container);\n      el.button.xhr.label = new lib.element(\"LABEL\").update(\"XHR Path:\").insert(el.button.xhr.container);\n      el.button.xhr.textbox = new lib.element(\"INPUT\").event.addListener(\"keydown\",listen.xhrTextbox).insert(el.button.xhr.container);\n      el.button.xhr.watch = new lib.element(\"A\").attribute.addClass(\"Button\").event.addListener(\"click\",listen.addXhrObject).update(\"Watch\").insert(el.button.xhr.container);\n\n      /*\n       * settings\n       */\n      el.settings = {};\n      el.settings.container = new lib.element(\"DIV\").child.add(\n        new lib.element(\"DIV\").attribute.addClass(\"Header\").child.add(\n          new lib.element().attribute.addClass(\"Title\").update('Firebug Lite Settings')\n        )\n      ).attribute.addClass(\"SettingsDiv\").insert(el.main);\n      el.settings.content = new lib.element(\"DIV\").attribute.addClass(\"Content\").insert(el.settings.container);\n      el.settings.progressDiv = new lib.element(\"DIV\").attribute.addClass(\"ProgressDiv\").insert(el.settings.content);\n      el.settings.progress = new lib.element(\"DIV\").attribute.addClass(\"Progress\").insert(el.settings.progressDiv);\n      el.settings.cbxDebug = new lib.element(\"INPUT\").attribute.set(\"type\",\"checkbox\").attribute.addClass(\"SettingsCBX\").insert(el.settings.content);\n      el.settings.content.child.add(document.createTextNode(\"Start visible\"));\n      new lib.element(\"BR\").insert(el.settings.content);\n      el.settings.cbxDetectFirebug = new lib.element(\"INPUT\").attribute.set(\"type\",\"checkbox\").attribute.addClass(\"SettingsCBX\").insert(el.settings.content);\n      el.settings.content.child.add(document.createTextNode(\"Hide when Firebug active\"));\n      new lib.element(\"BR\").insert(el.settings.content);\n      el.settings.cbxHideDOMFunctions = new lib.element(\"INPUT\").attribute.set(\"type\",\"checkbox\").attribute.addClass(\"SettingsCBX\").insert(el.settings.content);\n      el.settings.content.child.add(document.createTextNode(\"Hide DOM functions\"));\n      new lib.element(\"BR\").insert(el.settings.content);\n      el.settings.cbxOverride = new lib.element(\"INPUT\").attribute.set(\"type\",\"checkbox\").attribute.addClass(\"SettingsCBX\").insert(el.settings.content);\n      el.settings.content.child.add(document.createTextNode(\"Override window.console\"));\n      new lib.element(\"BR\").insert(el.settings.content);\n      el.settings.cbxShowIcon = new lib.element(\"INPUT\").attribute.set(\"type\",\"checkbox\").attribute.addClass(\"SettingsCBX\").insert(el.settings.content);\n      el.settings.content.child.add(document.createTextNode(\"Show icon when hidden\"));\n      new lib.element(\"BR\").insert(el.settings.content);\n      el.settings.cbxOpenInPopup = new lib.element(\"INPUT\").attribute.set(\"type\",\"checkbox\").attribute.addClass(\"SettingsCBX\").insert(el.settings.content);\n      el.settings.content.child.add(document.createTextNode(\"Open in popup\"));\n      el.settings.buttonDiv = new lib.element(\"DIV\").insert(el.settings.content);\n      el.settings.buttonLeftDiv = new lib.element(\"DIV\").attribute.addClass(\"ButtonsLeft\").insert(el.settings.buttonDiv);\n      el.settings.resetButton = new lib.element(\"INPUT\").attribute.set(\"type\",\"button\").update(\"Reset\").event.addListener(\"click\",settings.reset).insert(el.settings.buttonLeftDiv);\n      el.settings.buttonRightDiv = new lib.element(\"DIV\").attribute.addClass(\"ButtonsRight\").insert(el.settings.buttonDiv);\n      el.settings.cancelButton = new lib.element(\"INPUT\").attribute.set(\"type\",\"button\").update(\"Cancel\").event.addListener(\"click\",settings.hide).insert(el.settings.buttonRightDiv);\n      el.settings.buttonRightDiv.child.add(document.createTextNode(\" \"));\n      el.settings.saveButton = new lib.element(\"INPUT\").attribute.set(\"type\",\"button\").update(\"Save\").event.addListener(\"click\",settings.saveClicked).insert(el.settings.buttonRightDiv);\n\n      lib.util.AddEvent(document,\"mousemove\",listen.mouse)(\"mousemove\",win.resizer.resize)(\"mouseup\",win.resizer.stop)(\"keydown\",listen.keyboard);\n\n      env.init = true;\n\n      for(var i=0, len=d.console.cache.length; i<len; i++){\n        var item = d.console.cache[i];\n        d.console.cmd[item.command].apply(window,item.arg);\n      };\n\n      if(lib.env.ie6){\n        window.onscroll = lib.util.Curry(win.setVerticalPosition,window,null);\n        var buttons = [\n          el.button.inspect,\n          el.button.close,\n          el.button.inspect,\n          el.button.console.clear,\n          el.right.console.run,\n          el.right.console.clear,\n          el.right.css.run,\n          el.right.css.clear\n          ];\n        for(var i=0, len=buttons.length; i<len; i++)\n          buttons[i].attribute.set(\"href\",\"#\");\n        win.refreshSize();\n      }\n     \n      if(env.showIconWhenHidden) {\n        if(!env.popupWin) {\n          el.firebugIcon.environment.addStyle({ \"display\": env.debug&&'none'||'block' });\n        }\n      }\n\n      lib.util.AddEvent(window, \"unload\", win.unload);\n\n      if (env.isPopup) {\n        env.height=lib.util.GetViewport().height;\n        lib.util.AddEvent(window, \"resize\", win.fitToPopup);\n        win.fitToPopup();\n      } else {\n        lib.util.AddEvent(window, \"resize\", win.refreshSize);\n      }\n\n      win.setHeight(env.height);\n\n      if(env.openInPopup&&!env.isPopup) {\n        win.newWindow();\n      } else {\n        el.main.environment.addStyle({ \"display\":env.debug&&'block'||'none' });\n        el.mainiframe.environment.addStyle({ \"display\":env.debug&&'block'||'none' });\n      }\n    }  \n  },\n  inspect:function(){\n    return firebug.d.html.inspect.apply(window,arguments);\n  },\n  watchXHR:function(){\n    with(firebug){\n      d.xhr.addObject.apply(window,arguments);\n      if(env.dIndex!=\"xhr\"){\n        d.navigate(\"xhr\");\n      }\n    }\n  },\n  settings:{\n    isVisible:false,\n    show: function() {\n      with(firebug){\n        var posXY=lib.util.Element.getPosition(firebug.el.nav.options.element);\n        settings.refreshForm();\n\n        el.settings.container.environment.addStyle({\n          \"display\": \"block\",\n          \"left\": (posXY.offsetLeft-125)+\"px\"\n        });\n        el.settings.progressDiv.environment.addStyle({\n          \"display\": \"none\"\n        });\n        firebug.settings.isVisible = true;\n      }\n    },\n    hide: function() {\n      with(firebug){\n        firebug.el.settings.container.environment.addStyle({\n          \"display\": \"none\"\n        });\n        firebug.settings.isVisible = false;\n      }\n    },\n    toggle: function(){\n      with(firebug){\n        settings[!settings.isVisible && 'show' || 'hide']();\n      }\n    },\n    saveClicked: function() {\n      firebug.el.settings.progressDiv.environment.addStyle({\n        \"display\": \"block\"\n      });\n      setTimeout(firebug.settings.formToSettings,0);\n    },\n    formToSettings: function() {\n      var fe=firebug.env,\n        ofe,\n        elSet=firebug.el.settings,\n        exdate;\n\n      fe.debug=elSet.cbxDebug.element.checked;\n      fe.detectFirebug=elSet.cbxDetectFirebug.element.checked;\n      fe.hideDOMFunctions=elSet.cbxHideDOMFunctions.element.checked;\n      fe.override=elSet.cbxOverride.element.checked;\n      fe.showIconWhenHidden=elSet.cbxShowIcon.element.checked;\n      fe.openInPopup=elSet.cbxOpenInPopup.element.checked;\n\n      if(fe.isPopup) {\n        ofe=window.opener.firebug.env;\n        ofe.debug=fe.debug;\n        ofe.detectFirebug=fe.detectFirebug;\n        ofe.hideDOMFunctions=fe.hideDOMFunctions;\n        ofe.override=fe.override;\n        ofe.showIconWhenHidden=fe.showIconWhenHidden;\n        ofe.openInPopup=fe.openInPopup;\n        ofe.popupTop=fe.popupTop;\n        ofe.popupLeft=fe.popupLeft;\n        ofe.popupWidth=fe.popupWidth;\n        ofe.popupHeight=fe.popupHeight;\n      }\n\n      with(firebug) {\n        settings.writeCookie();\n        settings.hide();\n        win.refreshDOM();\n      }\n    },\n    reset: function() {\n      var exdate=new Date();\n\n      exdate.setTime(exdate.getTime()-1);\n      document.cookie='FBLiteSettings=;expires='+exdate.toUTCString();\n      location.reload(true);\n    },\n    readCookie: function() {\n      var i,cookieArr,valueArr,item,value;\n\n      with(firebug.env){\n        if(targetWindow.document.cookie.length>0) {\n          cookieArr=targetWindow.document.cookie.split('; ');\n          \n          for(i=0;i<cookieArr.length;i++) {\n            if(cookieArr[i].split('=')[0]=='FBLiteSettings') {\n              valueArr=cookieArr[i].split('=')[1].split(',');\n            }\n          }\n\n          if(valueArr) {\n            for(i=0;i<valueArr.length;i++) {\n              item=valueArr[i].split(':')[0];\n              value=valueArr[i].split(':')[1];\n              \n              switch(item) {\n                case 'debug':\n                  debug=value==\"true\";\n                  break;\n                case 'detectFirebug':\n                  detectFirebug=value==\"true\";\n                  break;\n                case 'hideDOMFunctions':\n                  hideDOMFunctions=value==\"true\";\n                  break;\n                case 'override':\n                  override=value==\"true\";\n                  break;\n                case 'showIconWhenHidden':\n                  showIconWhenHidden=value==\"true\";\n                  break;\n                case 'openInPopup':\n                  openInPopup=value==\"true\";\n                  break;\n                case 'popupTop':\n                  popupTop=parseInt(value,10);\n                  break;\n                case 'popupLeft':\n                  popupLeft=parseInt(value,10);\n                  break;\n                case 'popupWidth':\n                  popupWidth=parseInt(value,10);\n                  break;\n                case 'popupHeight':\n                  popupHeight=parseInt(value,10);\n                  break;\n                case 'height':\n                  height=parseInt(value,10);\n                  break;\n              }\n            }\n          }\n        }\n      }\n    },\n    writeCookie: function() {\n      var values;\n      \n      with(firebug.env){\n        values='debug:'+debug+',';\n        values+='detectFirebug:'+detectFirebug+',';\n        values+='hideDOMFunctions:'+hideDOMFunctions+',';\n        values+='override:'+override+',';\n        values+='showIconWhenHidden:'+showIconWhenHidden+',';\n        values+='openInPopup:'+openInPopup+',';\n\n        if(isPopup) {\n          if(window.outerWidth===undefined) {\n            values+='popupTop:'+(window.screenTop-56)+',';\n            values+='popupLeft:'+(window.screenLeft-8)+',';\n            values+='popupWidth:'+document.body.clientWidth+',';\n            values+='popupHeight:'+document.body.clientHeight+',';\n          } else {\n            values+='popupTop:'+window.screenY+',';\n            values+='popupLeft:'+window.screenX+',';\n            values+='popupWidth:'+window.outerWidth+',';\n            values+='popupHeight:'+window.outerHeight+',';\n          }\n        } else {\n          values+='popupTop:'+popupTop+',';\n          values+='popupLeft:'+popupLeft+',';\n          values+='popupWidth:'+popupWidth+',';\n          values+='popupHeight:'+popupHeight+',';\n        }\n        \n        values+='height:'+(parseInt(targetWindow.firebug.el.main.element.style.height.replace(/px/,''),10)-38);\n\n        exdate=new Date();\n        exdate.setDate(exdate.getDate()+365);\n        targetWindow.document.cookie='FBLiteSettings='+values+';expires='+exdate.toUTCString();\n      }\n    },\n    refreshForm: function() {\n      var fe=firebug.env,\n          elSet=firebug.el.settings;\n\n      elSet.cbxDebug.element.checked=fe.debug;\n      elSet.cbxDetectFirebug.element.checked=fe.detectFirebug;\n      elSet.cbxHideDOMFunctions.element.checked=fe.hideDOMFunctions;\n      elSet.cbxOverride.element.checked=fe.override;\n      elSet.cbxShowIcon.element.checked=fe.showIconWhenHidden;\n      elSet.cbxOpenInPopup.element.checked=fe.openInPopup;\n    }\n  },\n  win:{\n    hide:function(){\n      with(firebug){\n        el.main.environment.addStyle({\n          \"display\": \"none\"\n        });\n        el.mainiframe.environment.addStyle({\n          \"display\": \"none\"\n        });\n        if(env.showIconWhenHidden) {\n          el.firebugIcon.environment.addStyle({\n            \"display\": \"block\"\n          });\n        }\n      }\n    },\n    show:function(){\n      with(firebug){\n        el.main.environment.addStyle({\n          \"display\": \"block\"\n        });\n        el.mainiframe.environment.addStyle({\n          \"display\": \"block\"\n        });\n        if(env.showIconWhenHidden) {\n          el.firebugIcon.environment.addStyle({\n            \"display\": \"none\"\n          });\n        }\n      }\n    },\n    iconClicked:function(_event) {\n        with(firebug) {\n            if(_event.ctrlKey==true||_event.metaKey==true) {\n                el.firebugIcon.environment.addStyle({ \"display\": \"none\" });\n                env.showIconWhenHidden=false;\n            } else {\n                win.show();\n            }\n        }\n    },\n    minimize:function(){\n      with(firebug){\n        env.minimized=true;\n        el.main.environment.addStyle({ \"height\":\"35px\" });\n        el.mainiframe.environment.addStyle({ \"height\":\"35px\" });\n        el.button.maximize.environment.addStyle({ \"display\":\"block\" });\n        el.button.minimize.environment.addStyle({ \"display\":\"none\" });\n        win.refreshSize();\n      }\n    },\n    maximize:function(){\n      with(firebug){\n        env.minimized=false;\n        el.button.minimize.environment.addStyle({ \"display\":\"block\" });\n        el.button.maximize.environment.addStyle({ \"display\":\"none\" });\n        win.setHeight(env.height);\n      }\n    },\n    newWindow: function() {\n      var interval,scripts,script,scriptPath,\n          fe=firebug.env;\n\n      if (!fe.popupWin) {\n        scripts = document.getElementsByTagName('script');\n        \n        fe.popupWin = window.open(\"\", \"_firebug\", \n          \"status=0,menubar=0,resizable=1,top=\"+fe.popupTop+\",left=\"+fe.popupLeft+\",width=\" + fe.popupWidth + \n          \",height=\" + fe.popupHeight + \",scrollbars=0,addressbar=0,outerWidth=\"+fe.popupWidth+\",outerHeight=\"+fe.popupHeight+\n          \"toolbar=0,location=0,directories=0,dialog=0\");\n        \n        if(!fe.popupWin) {\n          alert(\"Firebug Lite could not open a pop-up window, most likely because of a popup blocker.\\nPlease enable popups for this domain\");\n        } else {\n          firebug.settings.hide();\n        \n          for (i=0,len=scripts.length; i<len; i++) {\n            if (scripts[i].src.indexOf(fe.liteFilename) > -1) {\n              scriptPath = scripts[i].src;\n              break;\n            }\n          }\n\n          if (scriptPath) {\n            script = fe.popupWin.document.createElement('script'), done = false;\n            script.type = 'text/javascript';\n            script.src = scriptPath;\n\n            script[firebug.lib.env.ie?\"onreadystatechange\":\"onload\"] = function(){\n              if(!done && (!firebug.lib.env.ie || this.readyState == \"complete\" || this.readyState==\"loaded\")){\n                done = true;\n                if(fe.popupWin.firebug) {\n                  with(fe.popupWin.firebug) {\n                    env.isPopup = true;\n                    env.css = fe.css;\n                    init();\n                    el.button.dock.environment.addStyle({ \"display\": \"block\"});\n                    el.button.newWindow.environment.addStyle({ \"display\": \"none\"});\n                  }\n                }\n              }\n            };\n\n            if (!done && firebug.lib.env.webkit) {\n              fe.popupWin.document.write('<html><head></head><body></body></html>');\n              interval = setInterval(function() {\n                if (fe.popupWin.firebug) {\n                  clearInterval(interval);\n                  done = true;\n                  with(fe.popupWin.firebug) {\n                    env.isPopup = true;\n                    env.css = fe.css;\n                    init();\n                    el.button.dock.environment.addStyle({ \"display\": \"block\"});\n                    el.button.newWindow.environment.addStyle({ \"display\": \"none\"});\n                  }\n                }\n              }, 10);\n            };\n\n            if (!done) {\n              fe.popupWin.document.getElementsByTagName('head')[0].appendChild(script);\n              firebug.el.main.environment.addStyle({\"display\": \"none\"});\n              firebug.el.mainiframe.environment.addStyle({\"display\": \"none\"});\n            }\n          } else {\n            alert(\"Unable to detect the following script \\\"\" + fe.liteFilename +\n                  \"\\\" ... if the script has been renamed then please set the value of firebug.env.liteFilename to reflect this change\");\n            fe.popupWin.close();\n            fe.popupWin=null;\n          }\n        }\n      }\n    },\n    dock: function() {\n      with(opener.firebug) {\n        env.popupWin = null;\n        el.main.environment.addStyle({\n          \"display\": \"block\"\n        });\n        el.mainiframe.environment.addStyle({\n          \"display\": \"block\"\n        });\n        settings.readCookie();\n        window.close();\n      };\n    },\n    unload: function() {\n      with(firebug){\n        if(env.isPopup) {\n          win.dock();\n        } else if(env.popupWin) {\n          env.popupWin.close();\n        }\n      }\n    },\n    fitToPopup: function() {\n      with(firebug) {\n        var viewport = lib.util.GetViewport(window);\n        win.setHeight((window.innerHeight||viewport.height) - 38);\n        el.main.environment.addStyle({\n          \"width\": (viewport.width) + \"px\"\n        });\n        el.mainiframe.environment.addStyle({\n          \"width\": (viewport.width) + \"px\"\n        });\n      }\n    },\n    resizer:{\n      y:[], enabled:false,\n      start:function(_event){\n        with(firebug){\n          if(env.minimized)return;\n          win.resizer.y=[el.main.element.offsetHeight,_event.clientY];\n          if(lib.env.ie6){\n            win.resizer.y[3]=parseInt(el.main.environment.getPosition().top);\n          }\n          win.resizer.enabled=true;\n        }\n      },\n      resize:function(_event){\n        with(firebug){\n          if(!win.resizer.enabled)return;\n          win.resizer.y[2]=(win.resizer.y[0]+(win.resizer.y[1]-_event.clientY));\n          el.main.environment.addStyle({ \"height\":win.resizer.y[2]+\"px\" });\n          el.mainiframe.environment.addStyle({ \"height\":win.resizer.y[2]+\"px\" });\n          if(lib.env.ie6){\n            el.main.environment.addStyle({ \"top\":win.resizer.y[3]-(win.resizer.y[1]-_event.clientY)+\"px\" });\n            el.mainiframe.environment.addStyle({ \"top\":win.resizer.y[3]-(win.resizer.y[1]-_event.clientY)+\"px\" });\n          }\n        }\n      },\n      stop:function(_event){\n        with(firebug){\n          if(win.resizer.enabled){\n            win.resizer.enabled=false;\n            win.setHeight(win.resizer.y[2]-35);\n          }\n        }\n      }\n    },\n    setHeight:function(_height){\n      with(firebug){\n        env.height=_height;\n\n        el.left.container.environment.addStyle({ \"height\":_height+\"px\" });\n        el.right.container.environment.addStyle({ \"height\":_height+\"px\" });\n        el.main.environment.addStyle({ \"height\":_height+38+\"px\" });\n        el.mainiframe.environment.addStyle({ \"height\":_height+38+\"px\" });\n\n        win.refreshSize();\n\n        // console\n        el.left.console.monitor.element.parentNode.style.height=_height-47+\"px\";\n        el.left.console.mlButton.environment.addStyle({ \"top\":_height+19+\"px\" });\n        el.right.console.mlButton.environment.addStyle({ \"top\":_height+19+\"px\" });\n        el.right.console.input.environment.addStyle({ \"height\":_height-29+\"px\" });\n\n        // html\n        el.left.html.container.environment.addStyle({\"height\":_height-23+\"px\"});\n        el.right.html.content.environment.addStyle({\"height\":_height-23+\"px\"});\n\n        // css\n        el.left.css.container.environment.addStyle({\"height\":_height-33+\"px\"});\n        el.right.css.input.environment.addStyle({ \"height\":_height-55+\"px\" });\n\n        // script\n        el.left.scripts.container.environment.addStyle({\"height\":_height-23+\"px\"});\n\n        // dom\n        el.left.dom.container.environment.addStyle({\"height\":_height-31+\"px\"});\n\n        // xhr\n        el.left.xhr.container.environment.addStyle({\"height\":_height-32+\"px\"});\n\n        // string\n        el.left.str.container.environment.addStyle({\"height\":_height-32+\"px\"});\n      }\n    },\n    refreshDOM:function(){\n      with(firebug){\n        d.dom.open(eval(el.button.dom.textbox.environment.getElement().value),el.left.dom.container);\n        if(d.html.nIndex==\"dom\"){\n          firebug.d.html.navigate(\"dom\")\n        }\n      }\n    },\n    refreshSize:function(){\n      with(firebug){\n        if(!env.init)\n          return;\n\n        var dim = lib.util.GetViewport();\n        el.main.environment.addStyle({ \"width\":dim.width+\"px\"});\n        el.mainiframe.environment.addStyle({ \"width\":dim.width+\"px\"});\n        if(lib.env.ie6)\n          win.setVerticalPosition(dim);\n      }\n    },\n    setVerticalPosition:function(_dim,_event){\n      with(firebug){\n        var dim = _dim||lib.util.GetViewport();\n        el.main.environment.addStyle({ \"top\":dim.height-el.main.environment.getSize().offsetHeight+Math.max(document.documentElement.scrollTop,document.body.scrollTop)+\"px\" });\n        el.mainiframe.environment.addStyle({ \"top\":dim.height-el.main.environment.getSize().offsetHeight+Math.max(document.documentElement.scrollTop,document.body.scrollTop)+\"px\" });\n      }\n    }\n  },\n  d: {\n    clean:function(_element){\n      with(firebug){\n        _element.update(\"\");\n      }\n    },\n    console:{\n      addLine:function(){\n        with (firebug) {\n          return new lib.element(\"DIV\").attribute.addClass(\"Row\").insert(el.left.console.monitor);\n        }\n      },\n      cache:[],\n      clear:function(){\n        with(firebug){\n          d.clean(el.left.console.monitor);\n          d.console.cache = [];\n        }\n      },\n      formatArgs:function(){\n        with(firebug){\n          var content = [];\n          for(var i=0, len=arguments.length; i<len; i++){\n            content.push( d.highlight(arguments[i],false,false,true) );\n          }\n          return content.join(\" \");\n        }\n      },\n      history:[], historyIndex:0,\n      openObject:function(_index){\n        with (firebug) {\n          d.dom.open(d.console.cache[_index], el.left.dom.container, lib.env.ie);\n          d.navigate(\"dom\");\n        }\n      },\n      print: function(_cmd,_text){\n        with (firebug){\n          d.console.addLine().attribute.addClass(\"Arrow\").update(\">>> \"+_cmd);\n          d.console.addLine().update(d.highlight(_text,false,false,true));\n          d.console.scroll();\n        }\n      },\n      printException: function(_exception){\n        with(firebug){\n          var message = _exception.description||_exception.message||_exception;\n          if(_exception.fileName){\n            message+=' ('+(_exception.name&&(_exception.name+', ')||'')+getFileName(_exception.fileName)+', '+_exception.lineNumber+')';\n          }\n          d.console.addLine().attribute.addClass(\"Error\").update(\"<strong>Error: </strong>\"+message,true);\n        }\n      },\n      eval:function(_cmd){\n        var result;\n        with(firebug){\n          if(_cmd.length==0)\n            return;\n\n          el.left.console.input.environment.getElement().value = \"\";\n          d.console.historyIndex = d.console.history.push(_cmd);\n\n          try {\n            if(_cmd==='console.firebug') {\n              d.console.addLine().attribute.addClass(\"Arrow\").update(firebug.version);\n            } else {  \n              result = eval.call(window,_cmd);\n              d.console.print(_cmd,result);\n            }\n          } catch(e){\n            d.console.addLine().attribute.addClass(\"Arrow\").update(\">>> \"+_cmd);\n            d.console.printException(e);\n          }\n          d.console.scroll();\n        }\n      },\n      scroll:function(){\n        with(firebug){\n          el.left.console.monitor.environment.getElement().parentNode.scrollTop = Math.abs(el.left.console.monitor.environment.getSize().offsetHeight-(el.left.console.monitor.element.parentNode.offsetHeight-11));\n        }\n      },\n      run:function(_command){\n        with(firebug){\n          if(!env.init){\n            d.console.cache.push({ \"command\":_command, \"arg\":Array.prototype.slice.call(arguments,1) });\n          } else {\n            d.console.cmd[_command].apply(window,Array.prototype.slice.call(arguments,1));\n          }\n        }\n      },\n      toggleML:function(){\n        with(firebug){\n          var open = !env.ml;\n          env.ml = !env.ml;\n          d.navigateRightColumn(\"console\",open);\n          el[open?\"left\":\"right\"].console.mlButton.environment.addStyle({ display:\"none\" });\n          el[!open?\"left\":\"right\"].console.mlButton.environment.addStyle({ display:\"block\" });\n          el.left.console.mlButton.attribute[(open?\"add\":\"remove\")+\"Class\"](\"CloseML\");\n        }\n      },\n      countMap:{}, timeMap: {},\n      cmd:{\n        log: function(_value){\n          with(firebug){\n            var args = d.console.formatArgs.apply(window,arguments);\n            d.console.addLine().attribute.addClass(\"Log\").update(args);\n            d.console.scroll();\n          }\n        },\n        warn: function(_value){\n          with(firebug){\n            var args = d.console.formatArgs.apply(window,arguments);\n            d.console.addLine().attribute.addClass(\"Warn\").update(args);\n            d.console.scroll();\n          }\n        },\n        info: function(_value){\n          with(firebug){\n            var args = d.console.formatArgs.apply(window,arguments);\n            d.console.addLine().attribute.addClass(\"Info\").update(args);\n            d.console.scroll();\n          }\n        },\n        debug: function(_value){\n          with(firebug){\n            var args = d.console.formatArgs.apply(window,arguments);\n            d.console.addLine().attribute.addClass(\"Debug\").update(args);\n            d.console.scroll();\n          }\n        },\n        error: function(_value){\n          with(firebug){\n            var args = d.console.formatArgs.apply(window,arguments);\n            d.console.addLine().attribute.addClass(\"Error\").update(args);\n            d.console.scroll();\n          }\n        },\n        trace: function(_value){\n          with(firebug){\n            var stackAmt = 3, f = arguments.caller, isArray = lib.util.IsArray(f); //function that called trace\n\n            if((!isArray&&f)||(isArray&&f.length>0)){\n              d.console.addLine().attribute.addClass(\"Arrow\").update(\">>> console.trace(stack)\");\n              for(var i=0;i<stackAmt;i++){\n                var func = f.toString(), args = f.arguments;\n                d.dom.open({\"function\":func, \"arguments\":args},d.console.addLine());\n                f = f.caller;\n              }\n            }\n          }\n        },\n        dir:function(_value){\n          with(firebug){\n            d.console.addLine().attribute.addClass(\"Arrow\").update(\">>> console.dir(\"+_value+\")\");\n            d.dom.open(_value,d.console.addLine());\n          }\n        },\n        dirxml: function(){\n          with(firebug){\n            d.console.cmd.log.apply(this, arguments);\n          }\n        },\n        time: function(_name){\n          with(firebug){\n            d.console.timeMap[_name] = new Date().getTime();\n          }\n        },\n        timeEnd: function(_name){\n          with(firebug){\n            if(_name in d.console.timeMap){\n              var delta = new Date().getTime() - d.console.timeMap[_name],\n              args = d.console.formatArgs.apply(window,[_name+\":\", delta+\"ms\"]);\n              d.console.addLine().attribute.addClass(\"log\").update(args);\n              delete d.console.timeMap[_name];\n            }\n          }\n        },\n        count: function(_name){\n          with(firebug){\n            if(!d.console.countMap[_name])\n              d.console.countMap[_name] = 0;\n            d.console.countMap[_name]++;\n            d.console.cmd.log.apply(window, [_name, d.console.countMap[_name]]);\n          }\n        },\n        group:function(){\n          with(firebug){\n            d.console.cmd.log.apply(this, [\"console.group is not supported\"]);\n          }\n        },\n        groupEnd:function(){\n          with(firebug){\n            d.console.cmd.log.apply(this, [\"console.groupEnd is not supported\"]);\n          }\n        },\n        profile:function(){\n          with(firebug){\n            d.console.cmd.log.apply(this, [\"console.profile is not supported\"]);\n          }\n        },\n        profileEnd:function(){\n          with(firebug){\n            d.console.cmd.log.apply(this, [\"console.profileEnd is not supported\"]);\n          }\n        }\n      }\n    },\n    css:{\n      index:-1,\n      open:function(_index){\n        with (firebug) {\n          var item = env.targetWindow.document.styleSheets[_index],\n          uri = item.href;\n          try {\n            var rules = item[lib.env.ie ? \"rules\" : \"cssRules\"], str = \"\";\n            for (var i=0; i<rules.length; i++) {\n              var item = rules[i];\n              var selector = item.selectorText;\n              var cssText = lib.env.ie?item.style.cssText:item.cssText.match(/\\{(.*)\\}/)[1];\n              str+=d.css.printRule(selector, cssText.split(\";\"), el.left.css.container);\n            }\n          } catch(e) {\n            str=\"<em>Access to restricted URI denied</em>\";\n          }\n          el.left.css.container.update(str);\n        }\n      },\n      printRule:function(_selector,_css,_layer){\n        with(firebug){\n          var str = \"<div class='Selector'>\"+_selector+\" {</div>\";\n          for(var i=0,len=_css.length; i<len; i++){\n            var item = _css[i];\n            str += \"<div class='CSSText'>\"+item.replace(/(.+\\:)(.+)/,\"<span class='CSSProperty'>$1</span><span class='CSSValue'>$2;</span>\")+\"</div>\";\n          }\n          str+=\"<div class='Selector'>}</div>\";\n          return str;\n        }\n      },\n      refresh:function(){\n        with(firebug){\n          el.button.css.selectbox.update(\"\");\n          var collection = env.targetWindow.document.styleSheets;\n          for(var i=0,len=collection.length; i<len; i++){\n            var uri = getFileName(collection[i].href);\n            d.css.index=d.css.index<0?i:d.css.index;\n            el.button.css.selectbox.child.add(\n                new lib.element(\"OPTION\").attribute.set(\"value\",i).update(uri)\n            )\n          };\n          d.css.open(d.css.index);\n        }\n      }\n    },\n    dom: {\n      open: function(_object,_layer){\n        with (firebug) {\n          _layer.clean();\n          var container = new lib.element(\"DIV\").attribute.addClass(\"DOMContent\").insert(_layer);\n          d.dom.print(_object, container);\n        }\n      },\n      print:function(_object,_parent, _inTree){\n        with (firebug) {\n          var obj = _object || window, parentElement = _parent;\n          parentElement.update(\"\");\n\n          if(parentElement.opened&&parentElement!=el.left.dom.container){\n            parentElement.environment.getParent().lib.child.get()[0].lib.child.get()[0].lib.attribute.removeClass(\"Opened\");\n            parentElement.opened = false;\n            parentElement.environment.addStyle({ \"display\":\"none\" });\n            return;\n          }\n          if(_inTree)\n            parentElement.environment.getParent().lib.child.get()[0].lib.child.get()[0].lib.attribute.addClass(\"Opened\");\n          parentElement.opened = true;\n\n          for (var key in obj) {\n            try {\n              if (env.hideDOMFunctions && typeof(obj[key]) == \"function\") continue;\n              var value = obj[key], property = key, container = new lib.element(\"DIV\").attribute.addClass(\"DOMRow\").insert(parentElement),\n              left = new lib.element(\"DIV\").attribute.addClass(\"DOMRowLeft\").insert(container), right = new lib.element(\"DIV\").attribute.addClass(\"DOMRowRight\").insert(container);\n\n              container.child.add(\n                  new lib.element(\"DIV\").attribute.addClass('Clear')\n              );\n\n              var link = new lib.element(\"A\").attribute.addClass(\n                  typeof value==\"object\"&&Boolean(value)?\"Property Object\":\"Property\"\n              ).update(property).insert(left);\n\n              right.update(d.highlight(value,false,true));\n\n              var subContainer = new lib.element(\"DIV\").attribute.addClass(\"DOMRowSubContainer\").insert(container);\n\n              if(typeof value!=\"object\"||Boolean(value)==false)\n                continue;\n\n              link.event.addListener(\"click\",lib.util.Curry(d.dom.print,window,value, subContainer, true));\n            }catch(e){\n            }\n          }\n          parentElement.environment.addStyle({ \"display\":\"block\" });\n        }\n      }\n    },\n    highlight:function(_value,_inObject,_inArray,_link){\n      with(firebug){\n        var isArray = false, isHash, isElement = false, vtype=typeof _value, result=[];\n        \n        if(vtype==\"object\"){\n          if(Object.prototype.toString.call(_value) === \"[object Date]\"){\n            vtype = \"date\";\n          } else if(Object.prototype.toString.call(_value) === \"[object String]\"){\n            vtype = \"string\";\n          } else if(Object.prototype.toString.call(_value) === \"[object Boolean]\"){\n            vtype = \"boolean\";\n          } else if(Object.prototype.toString.call(_value) === \"[object RegExp]\"){\n            vtype = \"regexp\";\n          }\n        }\n        \n        try {\n          isArray = lib.util.IsArray(_value);\n          isHash = lib.util.IsHash(_value);\n          isElement = _value!=undefined&&Boolean(_value.nodeName)&&Boolean(_value.nodeType);\n\n          // number, string, boolean, null, function\n          if(_value==null||vtype==\"number\"||vtype==\"string\"||vtype==\"boolean\"||vtype==\"function\"||vtype==\"regexp\"||vtype==\"date\"){\n            if(_value==null){\n              result.push(\"<span class='Null'>null</span>\");\n            }else if (vtype==\"regexp\") {\n              result.push(\"<span class='Maroon'>\" + _value + \"</span>\");\n            }else if (vtype==\"date\") {\n              result.push(\"<span class='DarkBlue'>'\" + _value + \"'</span>\");\n            } else if (vtype==\"boolean\"||vtype==\"number\") {\n              result.push(\"<span class='DarkBlue'>\" + _value + \"</span>\");\n            } else if(vtype==\"function\"){\n              result.push(\"<span class='\"+(_inObject?\"Italic Gray\":\"Green\")+\"'>function()</span>\");\n            } else {\n              result.push(\"<span class='Red'>\\\"\"+( !_inObject&&!_inArray?_value : _value.substring(0,35)+(_value.length>35?\" ...\":\"\") ).replace(/\\n/g,\"\\\\n\").replace(/\\s/g,\"&nbsp;\").replace(/>/g,\"&#62;\").replace(/</g,\"&#60;\")+\"\\\"</span>\");\n            }\n          }\n          // element\n          else if(isElement){\n\n            if(_value.nodeType==3)\n              result.push(d.highlight(_value.nodeValue));\n            else if(_inObject){\n              result.push(\"<span class='Gray Italic'>\"+_value.nodeName.toLowerCase()+\"</span>\");\n            } else {\n              result.push(\"<span class='Blue\"+ ( !_link?\"'\":\" ObjectLink' onmouseover='this.className=this.className.replace(\\\"ObjectLink\\\",\\\"ObjectLinkHover\\\")' onmouseout='this.className=this.className.replace(\\\"ObjectLinkHover\\\",\\\"ObjectLink\\\")' onclick='firebug.d.html.inspect(firebug.d.console.cache[\" +( d.console.cache.push( _value ) -1 )+\"])'\" ) + \"'>\");\n\n              if(_inArray){\n                result.push(_value.nodeName.toLowerCase());\n                if(_value.getAttribute){\n                  if(_value.getAttribute&&_value.getAttribute(\"id\"))\n                    result.push(\"<span class='DarkBlue'>#\"+_value.getAttribute(\"id\")+\"</span>\");\n                  var elClass = _value.getAttribute(lib.env.ie&&!lib.env.ie8?\"className\":\"class\")||\"\";\n                  result.push(!elClass?\"\":\"<span class='Red'>.\"+elClass.split(\" \")[0]+\"</span>\");\n                }\n                result.push(\"</span>\");\n              } else {\n                result.push(\"<span class='DarkBlue'>&#60;<span class='Blue TagName'>\"+ _value.nodeName.toLowerCase());\n\n                if(_value.attributes){\n                  for(var i=0,len=_value.attributes.length; i<len; i++){\n                    var item = _value.attributes[i];\n\n                    if(!lib.env.ie||item.nodeValue)\n                      result.push(\" <span class='DarkBlue'>\"+item.nodeName+\"=\\\"<span class='Red'>\"+item.nodeValue+\"</span>\\\"</span>\");\n                  }\n                }\n\n                result.push(\"</span>&#62;</span>\");\n              }\n            }\n          } \n          // array, hash\n          else if(isArray||isHash){\n            if(isArray){\n              if(_inObject){\n                result.push(\"<span class='Gray Italic'>[\"+_value.length+\"]</span>\");\n              } else {\n                result.push(\"<span class='Strong'>[ \");\n\n                for(var i=0,len=_value.length; i<len; i++){\n                  if((_inObject||_inArray)&&i>3){\n                    result.push(\", <span class='Strong Gray'>\"+(len-4)+\" More...</span>\");\n                    break;\n                  }\n                  result.push( (i > 0 ? \", \" : \"\") + d.highlight(_value[i], false, true, true) );\n                }\n\n                result.push(\" ]</span>\");\n              }\n            } else if(_inObject){\n              result.push(\"<span class='Gray Italic'>Object</span>\");\n            } else {  \n              result.push(\"<span class='Strong Green\"+ ( !_link?\"'\":\" ObjectLink' onmouseover='this.className=this.className.replace(\\\"ObjectLink\\\",\\\"ObjectLinkHover\\\")' onmouseout='this.className=this.className.replace(\\\"ObjectLinkHover\\\",\\\"ObjectLink\\\")' onclick='firebug.d.console.openObject(\" +( d.console.cache.push( _value ) -1 )+\")'\" ) + \">Object\");\n              var i=0;\n              for(var key in _value){\n                var value = _value[key];\n                if((_inObject||_inArray)&&i>3){\n                  result.push(\" <span class='Strong Gray'>More...</span>\");\n                  break;\n                }\n                result.push(\" \"+key+\"=\"+d.highlight(value,true));\n                i++;\n              }\n              result.push(\"</span>\");\n            } \n          } else {\n            result.push([\"<span class'Gray Italic'>\"+_value+\"</span>\"]);\n          }\n        } catch(e){\n          result.push(\"..\"); \n        }\n        return result.join(\"\");\n      }\n    },\n    html:{\n      nIndex:\"computedStyle\",\n      current:null,\n      highlight:function(_element,_clear,_event){\n        with(firebug){\n          if(_element.firebugElement){\n            return;\n          }\n          if(_clear){\n            env.targetWindow.firebug.el.bgInspector.environment.addStyle({ \"display\":\"none\" });\n            return;\n          }\n          d.inspector.inspect(_element,true);\n        }\n      },\n      inspect:function(_element){\n        var map = [],\n        parentLayer,\n        t,\n        tagName,\n        parent = _element;\n        while (parent) {\n          map.push(parent);\n          if (parent == firebug.env.targetWindow.document.body) break;\n          parent = parent.parentNode;\n        }\n        map = map.reverse();\n        with(firebug) {\n          if (env.dIndex != \"html\") {\n            env.targetWindow.firebug.d.navigate(\"html\");\n          }\n\n          env.targetWindow.firebug.d.inspector.toggle(false);\n\n          for (t = 0; t < el.left.html.container.child.get().length; t++) {\n            if (el.left.html.container.child.get()[t].childNodes[0].childNodes[1].childNodes[0].childNodes[0]) {\n              if (el.left.html.container.child.get()[t].childNodes[0].childNodes[1].childNodes[0].childNodes[0].innerText) {\n                tagName = el.left.html.container.child.get()[t].childNodes[0].childNodes[1].childNodes[0].childNodes[0].innerText;\n              } else {\n                tagName = el.left.html.container.child.get()[t].childNodes[0].childNodes[1].childNodes[0].childNodes[0].textContent;\n              }\n\n              if (/<body/i.test(tagName)) {\n                parentLayer = el.left.html.container.child.get()[t].childNodes[1].lib;\n                break;\n              }\n            }\n          }\n\n          if (!parentLayer) {\n            parentLayer = el.left.html.container.child.get()[3].childNodes[1].lib;\n          }\n\n          for (t = 0, len = map.length; map[t]; t++) {\n            if (t == len - 1) {\n              var link = parentLayer.environment.getElement().previousSibling.lib;\n              link.attribute.addClass(\"Selected\");\n\n              if (d.html.current) {\n                d.html.current[1].attribute.removeClass(\"Selected\");\n              }\n              d.html.current = [_element, link];\n              return;\n            }\n            parentLayer = d.html.openHtmlTree(map[t], parentLayer, map[t + 1]);\n          }\n        }\n      },\n      navigate:function(_index,_element){\n        with(firebug){\n          el.right.html.nav[d.html.nIndex].attribute.removeClass(\"Selected\");\n          el.right.html.nav[_index].attribute.addClass(\"Selected\");\n          d.html.nIndex = _index;\n          d.html.openProperties();\n        }\n      },\n      openHtmlTree:function(_element,_parent,_returnParentElementByElement,_event){\n        with(firebug){\n          var element = _element || env.targetWindow.document.documentElement, \n              parent = _parent || el.left.html.container, \n              returnParentEl = _returnParentElementByElement || null, \n              returnParentVal = null,\n              len = element.childNodes.length,\n              nodeLink;\n\n          if(parent!=el.left.html.container){\n            nodeLink = parent.environment.getParent().lib.child.get()[0].lib;\n            if (d.html.current) {\n              d.html.current[1].attribute.removeClass(\"Selected\");\n            }\n            nodeLink.attribute.addClass(\"Selected\");\n\n            d.html.current = [_element,nodeLink];\n            d.html.openProperties();\n          };\n\n          if(element.childNodes&&(len==0||(len==1&&element.childNodes[0].nodeType==3)))return;\n          parent.clean();\n\n          if(parent.opened&&Boolean(_returnParentElementByElement)==false){\n            parent.opened = false;\n            parent.element.previousSibling.lib.attribute.removeClass(\"Open\");\n            parent.element.lib.attribute.removeClass(\"OpenSubContainer\");\n            return;\n          };\n\n          if (parent != el.left.html.container) {\n            parent.element.previousSibling.lib.attribute.addClass(\"Open\");\n            parent.element.lib.attribute.addClass(\"OpenSubContainer\");\n            parent.opened = true;\n          };\n\n          if(element==document.documentElement){\n            new lib.element(\"A\").attribute.addClass(\"Block\").update(\"<span class='DarkBlue'>&#60;<span class='Blue'>html</span>&#62;\").insert(parent);\n          };\n\n          for(var i=0; i<=len; i++){\n            if(i==len){\n              new lib.element(\"A\").attribute.addClass(\"Block\").update(\"<span class='DarkBlue'>&#60;/<span class='Blue'>\"+element.nodeName.toLowerCase()+\"</span>&#62;\").insert(container);\n              break;\n            } \n            var item = element.childNodes[i];\n\n            if (item.nodeType != 3){\n              var container = new lib.element().attribute.addClass(\"Block\").insert(parent), \n              link = new lib.element(\"A\").attribute.addClass(\"Link\").insert(container), \n              spacer = new lib.element(\"SPAN\").attribute.addClass(\"Spacer\").update(\"&nbsp;\").insert(link),\n              html = new lib.element(\"SPAN\").attribute.addClass(\"Content\").update(d.highlight(item)).insert(link),\n              subContainer = new lib.element(\"DIV\").attribute.addClass(\"SubContainer\").insert(container),\n              view = lib.util.Element.getView(item);\n\n              link.event.addListener(\"click\", lib.util.Curry(d.html.openHtmlTree, window, item, subContainer, false));\n              link.event.addListener(\"mouseover\", lib.util.Curry(d.html.highlight, window, item, false));\n              link.event.addListener(\"mouseout\", lib.util.Curry(d.html.highlight, window, item, true));\n\n              returnParentVal = returnParentEl == item ? subContainer : returnParentVal;\n\n              if(d.html.current==null&&item==document.body){\n                link.attribute.addClass(\"Selected\");\n                d.html.current = [item,link];\n                d.html.openHtmlTree(item,subContainer);\n              }\n\n              if(element.nodeName!=\"HEAD\"&&element!=document.documentElement&&(view.visibility==\"hidden\"||view.display==\"none\")){\n                container.attribute.addClass(\"Unvisible\");\n              };\n\n              if (item.childNodes){\n                var childLen = item.childNodes.length;\n                if (childLen == 1 && item.childNodes[0].nodeType == 3) {\n                  html.child.add(document.createTextNode(item.childNodes[0].nodeValue.substring(0, 50)));\n                  html.child.add(document.createTextNode(\"</\"));\n                  html.child.add(new lib.element(\"span\").attribute.addClass(\"Blue\").update(item.nodeName.toLowerCase()).environment.getElement());\n                  html.child.add(document.createTextNode(\">\"));\n                  continue;\n                }\n                else \n                  if (childLen > 0) {\n                    link.attribute.addClass(\"Parent\");\n                  }\n              }\n            }\n          };\n          return returnParentVal;\n        }\n      },\n      openProperties:function(){\n        with(firebug){\n          var index = d.html.nIndex;\n          var node = d.html.current[0];\n          d.clean(el.right.html.content);\n          var str = \"\";\n          switch(index){\n            case \"computedStyle\":\n              var property = [\"opacity\",\"filter\",\"azimuth\",\"background\",\"backgroundAttachment\",\"backgroundColor\",\"backgroundImage\",\"backgroundPosition\",\"backgroundRepeat\",\"border\",\"borderCollapse\",\"borderColor\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderRight\",\"borderBottom\",\"borderLeft\",\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\",\"borderTopStyle\",\"borderRightStyle\",\"borderBottomStyle\",\"borderLeftStyle\",\"borderTopWidth\",\"borderRightWidth\",\"borderBottomWidth\",\"borderLeftWidth\",\"borderWidth\",\"bottom\",\"captionSide\",\"clear\",\"clip\",\"color\",\"content\",\"counterIncrement\",\"counterReset\",\"cue\",\"cueAfter\",\"cueBefore\",\"cursor\",\"direction\",\"display\",\"elevation\",\"emptyCells\",\"cssFloat\",\"font\",\"fontFamily\",\"fontSize\",\"fontSizeAdjust\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontWeight\",\"height\",\"left\",\"letterSpacing\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginTop\",\"marginRight\",\"marginBottom\",\"marginLeft\",\"markerOffset\",\"marks\",\"maxHeight\",\"maxWidth\",\"minHeight\",\"minWidth\",\"orphans\",\"outline\",\"outlineColor\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"padding\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"pause\",\"pauseAfter\",\"pauseBefore\",\"pitch\",\"pitchRange\",\"playDuring\",\"position\",\"quotes\",\"richness\",\"right\",\"size\",\"speak\",\"speakHeader\",\"speakNumeral\",\"speakPunctuation\",\"speechRate\",\"stress\",\"tableLayout\",\"textAlign\",\"textDecoration\",\"textIndent\",\"textShadow\",\"textTransform\",\"top\",\"unicodeBidi\",\"verticalAlign\",\"visibility\",\"voiceFamily\",\"volume\",\"whiteSpace\",\"widows\",\"width\",\"wordSpacing\",\"zIndex\"].sort();\n              var view = document.defaultView?document.defaultView.getComputedStyle(node,null):node.currentStyle;\n              for(var i=0,len=property.length; i<len; i++){\n                var item = property[i];\n                if(!view[item])continue;\n                str+=\"<div class='CSSItem'><div class='CSSProperty'>\"+item+\"</div><div class='CSSValue'>\"+d.highlight(view[item])+\"</div></div>\";\n              }\n              el.right.html.content.update(str);\n              break;\n            case \"dom\":\n              d.dom.open(node,el.right.html.content,lib.env.ie);\n              break;\n          }\n        }\n      }\n    },\n    inspector:{\n      enabled:false,\n      el:null,\n      inspect:function(_element,_bgInspector){\n        with(firebug){\n          var pos = env.targetWindow.firebug.lib.util.Element.getPosition(_element);\n\n          env.targetWindow.firebug.el[_bgInspector&&\"bgInspector\"||\"borderInspector\"].environment.addStyle({ \n            \"width\":_element.offsetWidth+\"px\", \"height\":_element.offsetHeight+\"px\",\n            \"top\":pos.offsetTop-(_bgInspector?0:2)+\"px\", \"left\":pos.offsetLeft-(_bgInspector?0:2)+\"px\",\n            \"display\":\"block\"\n          });\n9\n          if(!_bgInspector){\n            d.inspector.el = _element;\n          }\n        };\n      },\n      toggle:function(_absoluteValue,_event){\n        with (firebug) {\n          if(_absoluteValue==d.inspector.enabled)\n            return;\n          d.inspector.enabled = _absoluteValue!=undefined&&!_absoluteValue.clientX?_absoluteValue:!d.inspector.enabled;\n          el.button.inspect.attribute[(d.inspector.enabled ? \"add\" : \"remove\") + \"Class\"](\"Enabled\");\n          if(d.inspector.enabled==false){\n            el.borderInspector.environment.addStyle({ \"display\":\"none\" });\n            d.inspector.el = null;\n          } else if(lib.env.dIndex!=\"html\") {\n            if (env.popupWin) {\n              env.popupWin.firebug.d.navigate(\"html\");\n            } else {\n              d.navigate(\"html\");\n            }\n          }\n        }\n      }\n    },\n    scripts:{\n      index:-1,\n      lineNumbers:false,\n      open:function(_index){\n        with(firebug){\n          d.scripts.index = _index;\n          el.left.scripts.container.update(\"\");\n          var script = document.getElementsByTagName(\"script\")[_index],uri = script.src||document.location.href,source;\n          try {\n            if(uri!=document.location.href){\n              source = env.cache[uri]||lib.xhr.get(uri).responseText;\n              env.cache[uri] = source;\n            } else {\n              source = script.innerHTML;\n            }\n            source = source.replace(/<|>/g,function(_ch){\n              return ({\"<\":\"&#60;\",\">\":\"&#62;\"})[_ch];\n            });\n          \n            if(!d.scripts.lineNumbers) \n              el.left.scripts.container.child.add(\n                  new lib.element(\"DIV\").attribute.addClass(\"CodeContainer\").update(source)\n              );\n            else {\n              source = source.split(\"<br />\");\n              for (var i = 0; i < source.length; i++) {\n                el.left.scripts.container.child.add(new lib.element(\"DIV\").child.add(new lib.element(\"DIV\").attribute.addClass(\"LineNumber\").update(i + 1), new lib.element(\"DIV\").attribute.addClass(\"Code\").update(\"&nbsp;\" + source[i]), new lib.element(\"DIV\").attribute.addClass('Clear')));\n              };\n            };\n          } catch(e){\n            el.left.scripts.container.child.add(\n              new lib.element(\"DIV\").attribute.addClass(\"CodeContainer\").update(\"<em>Access to restricted URI denied</em>\")\n            );\n          }\n        }\n      },\n      toggleLineNumbers:function(){\n        with(firebug){\n          d.scripts.lineNumbers = !d.scripts.lineNumbers;\n          el.button.scripts.lineNumbers.attribute[(d.scripts.lineNumbers ? \"add\" : \"remove\") + \"Class\"](\"Enabled\");\n          d.scripts.open( d.scripts.index );\n        }\n      },\n      refresh:function(){\n        with(firebug){\n          el.button.scripts.selectbox.clean();\n          var collection = env.targetWindow.document.getElementsByTagName(\"script\");\n          for(var i=0,len=collection.length; i<len; i++){\n            var item = collection[i],\n            fileName = getFileName(item.src||item.baseURI||\"..\");\n            d.scripts.index=d.scripts.index<0?i:d.scripts.index;\n            el.button.scripts.selectbox.child.add(\n                new lib.element(\"OPTION\").attribute.set(\"value\",i).update(fileName)\n            );\n          }\n          d.scripts.open( d.scripts.index );\n        }\n      }\n    },\n    str: {\n      open:function(_str){\n        with(firebug){\n          d.navigate(\"str\");\n          el.left.str.container.update(_str.replace(/\\n/g,\"<br />\"))\n        }\n      }\n    },\n    xhr:{\n      objects:[],\n      addObject:function(){\n        with(firebug){\n          for(var i=0,len=arguments.length; i<len; i++){\n            try {\n              var item = arguments[i],\n                  val = env.targetWindow.eval(item);\n              d.xhr.objects.push([item, val]);\n            } catch(e){\n              continue;\n            }\n          }\n        }\n      },\n      open:function(){\n        with(firebug){\n          el.left.xhr.container.update(\"\");\n          el.left.xhr.name = new lib.element(\"DIV\").attribute.addClass(\"BlockContent\").insert(new lib.element(\"DIV\").attribute.addClass(\"Block\").environment.addStyle({ \"width\":\"20%\" }).insert(el.left.xhr.container));\n          el.left.xhr.nameTitle = new lib.element(\"STRONG\").update(\"Object Name:\").insert(el.left.xhr.name);\n          el.left.xhr.nameContent = new lib.element(\"DIV\").insert(el.left.xhr.name);\n          el.left.xhr.status = new lib.element(\"DIV\").attribute.addClass(\"BlockContent\").insert(new lib.element(\"DIV\").attribute.addClass(\"Block\").environment.addStyle({ \"width\":\"10%\" }).insert(el.left.xhr.container));\n          el.left.xhr.statusTitle = new lib.element(\"STRONG\").update(\"Status:\").insert(el.left.xhr.status);\n          el.left.xhr.statusContent = new lib.element(\"DIV\").insert(el.left.xhr.status);\n          el.left.xhr.readystate = new lib.element(\"DIV\").attribute.addClass(\"BlockContent\").insert(new lib.element(\"DIV\").environment.addStyle({ \"width\":\"15%\" }).attribute.addClass(\"Block\").insert(el.left.xhr.container));\n          el.left.xhr.readystateTitle =el.left.xhr.nameTitle = new lib.element(\"STRONG\").update(\"Ready State:\").insert(el.left.xhr.readystate);\n          el.left.xhr.readystateContent = new lib.element(\"DIV\").insert(el.left.xhr.readystate);\n          el.left.xhr.response = new lib.element(\"DIV\").attribute.addClass(\"BlockContent\").insert(new lib.element(\"DIV\").environment.addStyle({ \"width\":(lib.env.ie?\"50\":\"55\")+\"%\" }).attribute.addClass(\"Block\").insert(el.left.xhr.container));\n          el.left.xhr.responseTitle = new lib.element(\"STRONG\").update(\"Response:\").insert(el.left.xhr.response);\n          el.left.xhr.responseContent = new lib.element(\"DIV\").insert(el.left.xhr.response);\n          setTimeout(d.xhr.refresh,500);\n        }\n      },\n      refresh:function(){\n        with(firebug){\n          el.left.xhr.nameContent.update(\"\");\n          el.left.xhr.statusContent.update(\"\");\n          el.left.xhr.readystateContent.update(\"\");\n          el.left.xhr.responseContent.update(\"\");\n          for(var i=0,len=d.xhr.objects.length; i<len; i++){\n            var item = d.xhr.objects[i],\n                response = item[1].responseText;\n            if(Boolean(item[1])==false)continue;\n            el.left.xhr.nameContent.child.add(new lib.element(\"span\").update(item[0]));\n            try {\n              el.left.xhr.statusContent.child.add(new lib.element(\"span\").update(item[1].status));\n            } catch(e){ el.left.xhr.statusContent.child.add(new lib.element(\"span\").update(\"&nbsp;\")); }\n            el.left.xhr.readystateContent.child.add(new lib.element(\"span\").update(item[1].readyState));\n\n            el.left.xhr.responseContent.child.add(new lib.element(\"span\").child.add(\n                new lib.element(\"A\").event.addListener(\"click\",lib.util.Curry(d.str.open,window,response)).update(\"&nbsp;\"+response.substring(0,50))\n            ));\n          };\n          if(env.dIndex==\"xhr\")\n            setTimeout(d.xhr.refresh,500);\n        }\n      }\n    },\n    navigateRightColumn:function(_index,_open){\n      with(firebug){\n        el.left.container.environment.addStyle({ \"width\":_open?\"70%\":\"100%\" });\n        el.right.container.environment.addStyle({ \"display\":_open?\"block\":\"none\" });\n      }\n    },\n    navigate:function(_index){\n      with(firebug){\n        var open = _index, close = env.dIndex;\n        env.dIndex = open;\n\n        settings.hide();\n\n        el.button[close].container.environment.addStyle({ \"display\":\"none\" });\n        el.left[close].container.environment.addStyle({ \"display\":\"none\" });\n        el.right[close].container.environment.addStyle({ \"display\":\"none\" });\n\n        el.button[open].container.environment.addStyle({ \"display\":\"inline\" });\n        el.left[open].container.environment.addStyle({ \"display\":\"block\" });\n        el.right[open].container.environment.addStyle({ \"display\":\"block\" });\n\n        if(el.nav[close])\n          el.nav[close].attribute.removeClass(\"Selected\");\n        if(el.nav[open])\n          el.nav[open].attribute.addClass(\"Selected\");\n\n        switch(open){\n          case \"console\":\n            d.navigateRightColumn(_index);\n            break;\n          case \"html\":\n            d.navigateRightColumn(_index,true);\n            if(!d.html.current){\n              var t=Number(new Date);\n              d.html.openHtmlTree();\n            }\n            break;\n          case \"css\":\n            d.navigateRightColumn(_index,true);\n            d.css.refresh();\n            break;\n          case \"scripts\":\n            d.navigateRightColumn(_index);\n            d.scripts.refresh();\n            break;\n          case \"dom\":\n            d.navigateRightColumn(_index);\n            if(el.left.dom.container.environment.getElement().innerHTML==\"\"){\n              var t=Number(new Date);\n              d.dom.open(eval(el.button.dom.textbox.environment.getElement().value),el.left.dom.container);\n            }\n            break;\n          case \"xhr\":\n            d.navigateRightColumn(_index);\n            d.xhr.open();\n            break;\n        }\n      }\n    }\n  },\n  getFileName:function(_path){\n    var match = _path&&_path.match(/[\\w\\-\\.\\?\\=\\&]+$/);\n    return match&&match[0]||_path;\n  },\n  cancelEvent:function(_event){\n    if(_event.stopPropagation)\n      _event.stopPropagation();\n    if(_event.preventDefault)\n      _event.preventDefault();\n  },\n  getSelection:function(_el){\n    with(firebug){\n      if(lib.env.ie){\n        var range = document.selection.createRange(),stored = range.duplicate();\n        stored.moveToElementText(_el);\n        stored.setEndPoint('EndToEnd', range);\n        _el.selectionStart = stored.text.length - range.text.length;\n        _el.selectionEnd = _el.selectionStart + range.text.length;\n      }\n      return {\n        start:_el.selectionStart,\n        length:_el.selectionEnd-_el.selectionStart\n      }\n    }\n  },\n  tab:function(_el,_event){\n    with(firebug){\n      if(_event.keyCode==9){\n        if(_el.setSelectionRange){\n          var position = firebug.getSelection(_el);\n          _el.value = _el.value.substring(0,position.start) + String.fromCharCode(9) + _el.value.substring(position.start+position.length,_el.value.length);\n          _el.setSelectionRange(position.start+1,position.start+1);\n        } else if(document.selection) {  \n          var range = document.selection.createRange(), isCollapsed = range.text == '';\n          range.text = String.fromCharCode(9);\n          range.moveStart('character', -1);\n        }\n        firebug.cancelEvent(_event);\n        if(lib.env.ie)\n          setTimeout(_el.focus,100);\n      };\n    }\n  },\n  listen: {\n    addXhrObject:function(){\n      with(firebug){\n        d.xhr.addObject.apply(env.targetWindow, el.button.xhr.textbox.environment.getElement().value.split(\",\"));\n      }\n    },\n    consoleTextbox:function(_event){\n      with(firebug){\n        if(_event.keyCode==13&&(env.multilinemode==false||_event.shiftKey==false)){\n          d.console.historyIndex = d.console.history.length;\n          d.console.eval(el.left.console.input.environment.getElement().value);\n          return false;\n        }\n\n        switch(_event.keyCode){\n          case 40:\n            if(d.console.history[d.console.historyIndex+1]){\n              d.console.historyIndex+=1;\n              el.left.console.input.update( d.console.history[d.console.historyIndex] );\n            }\n            break;\n          case 38:\n            if(d.console.history[d.console.historyIndex-1]){\n              d.console.historyIndex-=1;\n              el.left.console.input.update( d.console.history[d.console.historyIndex] );\n            }\n            break;\n        }\n      }\n    },\n    cssSelectbox:function(){\n      with(firebug){\n        d.css.open(el.button.css.selectbox.environment.getElement().selectedIndex);\n      }\n    },\n    domTextbox:function(_event){\n      with(firebug){\n        if(_event.keyCode==13){\n          d.dom.open(eval(el.button.dom.textbox.environment.getElement().value),el.left.dom.container);\n        }\n      }\n    },\n    inspector:function(){\n      with(firebug){\n        if (env.popupWin) {\n          env.popupWin.firebug.d.html.inspect(firebug.d.inspector.el);\n        } else {\n          firebug.d.html.inspect(firebug.d.inspector.el);\n        }\n      }\n    },\n    keyboard:function(_event){\n      with(firebug){\n        if(_event.keyCode==27 && d.inspector.enabled){\n          d.inspector.toggle();\n        } else if(_event.keyCode === 123 && _event.ctrlKey || _event.metaKey) {\n          if(env.isPopup){\n            win.dock();\n          }else {\n            win.newWindow();\n          }\n        } else if(\n            (_event.keyCode === 123 && !_event.ctrlKey && !_event.metaKey) || \n            (_event.keyCode === 76 && (_event.ctrlKey || _event.metaKey) && _event.shiftKey) ||\n            (_event.keyCode === 13 && _event.shiftKey)) {\n\n          if(env.isPopup){\n            win.dock();\n          } else if (el.main.environment.getStyle(\"display\") === 'none') {\n            win.show();\n          } else {\n            win.hide();\n          }\n        }\n      }\n    },\n    mouse:function(_event){\n      with(firebug){\n        var target;\n        \n        if(document.elementFromPoint) {\n          target = document.elementFromPoint(_event.clientX, _event.clientY);\n        } else {\n          if(lib.env.ie) {\n            target = _event.srcElement;\n          } else {\n            target = _event.explicitOriginalTarget || _event.target;\n          }\n        }\n        \n        if( d.inspector.enabled&&\n          target!=document.body&&\n          target!=document.firstChild&&\n          target!=document.childNodes[1]&&\n          target!=el.borderInspector.environment.getElement()&&\n          target!=el.main.environment.getElement()&&\n          target.offsetParent!=el.main.environment.getElement() ) {\n            d.inspector.inspect(target);\n        }\n      }\n    },\n    runMultiline:function(){\n      with(firebug){\n        d.console.eval.call(window,el.right.console.input.environment.getElement().value);\n      }\n    },\n    runCSS:function(){\n      with(firebug){\n        var source = el.right.css.input.environment.getElement().value.replace(/\\n|\\t/g,\"\").split(\"}\");\n        for(var i=0, len=source.length; i<len; i++){\n          var item = source[i]+\"}\", rule = !lib.env.ie?item:item.split(/{|}/),\n              styleSheet = document.styleSheets[0];\n          console.log(rule);\n          if(item.match(/.+\\{.+\\}/)){\n            if(lib.env.ie)\n              styleSheet.addRule(rule[0],rule[1]);\n            else\n              styleSheet.insertRule( rule, styleSheet.cssRules.length );\n          }\n        }\n      }\n    },\n    scriptsSelectbox:function(){\n      with(firebug){\n        d.scripts.open(parseInt(el.button.scripts.selectbox.environment.getElement().value));\n      }\n    },\n    xhrTextbox:function(_event){\n      with(firebug){\n        if(_event.keyCode==13){\n          d.xhr.addObject.apply(env.targetWindow, el.button.xhr.textbox.environment.getElement().value.split(\",\"));\n        }\n      }\n    }\n  }\n};\n\n(function(_scope){\n  _scope.lib = {};\n  var pi  = _scope.lib; pi.version = [1.1,2008091000];\n\n  pi.env = {\n    ie: /MSIE/i.test(navigator.userAgent),\n    ie6: /MSIE 6/i.test(navigator.userAgent),\n    ie7: /MSIE 7/i.test(navigator.userAgent),\n    ie8: /MSIE 8/i.test(navigator.userAgent),\n    firefox: /Firefox/i.test(navigator.userAgent),\n    opera: /Opera/i.test(navigator.userAgent),\n    webkit: /Webkit/i.test(navigator.userAgent),\n    camino: /Camino/i.test(navigator.userAgent)\n  };\n\n  pi.get = function(){\n    return document.getElementById(arguments[0]);\n  };\n  pi.get.byTag = function(){\n    return document.getElementsByTagName(arguments[0]);\n  };\n  pi.get.byClass = function(){ return document.getElementsByClassName.apply(document,arguments); };\n\n  pi.util = {\n    Array:{\n      clone:function(_array,_undeep){\n        var tmp = [];\n        Array.prototype.push.apply(tmp,_array);\n        pi.util.Array.forEach(tmp,function(_item,_index,_source){\n          if(_item instanceof Array&&!_undeep)\n            _source[_index] = pi.util.Array.clone(_source[_index]);\n        });\n        return tmp;\n      },\n      count:function(_array,_value){\n        var count = 0;\n        pi.util.Array.forEach(_array,function(){\n          count+=Number(arguments[0]==_value);\n        });\n        return count;\n      },\n      forEach:function(_array,_function){\n        if(_array.forEach)\n          return _array.forEach(_function);\n        for(var i=0,len=_array.length; i<len; i++)\n          _function.apply(_array,[_array[i],i,_array]);   \n      },\n      getLatest:function(_array){\n        return _array[_array.length-1];\n      },\n      indexOf:function(_array,_value){\n        if(!pi.env.ie){\n          return _array.indexOf(_value);\n        };\n\n        var index = -1;\n        for(var i=0, len=_array.length; i<len; i++){\n          if(_array[i]==_value){\n            index = i;\n            break;\n          }\n        }\n        return index;\n      },\n      remove:function(_array,_index){\n        var result = _array.slice(0,_index);\n        _array = Array.prototype.push.apply(result,_array.slice(_index+1));\n        return result;\n      }\n    },\n    Curry:function(_fn,_scope){\n      var fn = _fn, scope = _scope||window, args = Array.prototype.slice.call(arguments,2);\n      return function(){ \n        return fn.apply(scope,args.concat( Array.prototype.slice.call(arguments,0) )); \n      };\n    },\n    Extend:function(_superClass,_prototype,_skipClonning){\n      var object = new pi.base;\n      if(_prototype[\"$Init\"]){\n        object.init = _prototype[\"$Init\"];\n        delete _prototype[\"$Init\"];\n      };\n\n      object.body = _superClass==pi.base?_prototype:pi.util.Hash.merge(_prototype,_superClass.prototype);\n      object.init=object.init||function(){\n        if(_superClass!=pi.base)\n          _superClass.apply(this,arguments);\n      };\n\n      return object.build(_skipClonning);\n    },\n    IsArray:function(_object){\n      if(_object===null){\n        return false;\n      }\n      if(window.NodeList&&window.NamedNodeMap&&!pi.env.ie8){\n        if(_object instanceof Array||_object instanceof NodeList||_object instanceof NamedNodeMap||(window.HTMLCollection&&_object instanceof HTMLCollection))\n          return true;\n      };\n      if(!_object||_object==window||typeof _object==\"function\"||typeof _object==\"string\"||typeof _object.length!=\"number\"){\n        return false\n      };\n      var len = _object.length;\n      if(len>0&&_object[0]!=undefined&&_object[len-1]!=undefined){\n        return true;\n      } else {\n        for(var key in _object){\n          if(key!=\"item\"&&key!=\"length\"&&key!=\"setNamedItemNS\"&&key!=\"setNamedItem\"&&key!=\"getNamedItem\"&&key!=\"removeNamedItem\"&&key!=\"getNamedItemNS\"&&key!=\"removeNamedItemNS\"&&key!=\"tags\"){\n            return false;\n          }\n        }\n        return true\n      };\n    },\n    IsHash:function(_object){\n      return _object && typeof _object==\"object\"&&(_object==window||_object instanceof Object)&&!_object.nodeName&&!pi.util.IsArray(_object)\n    },\n    Init:[],\n    AddEvent: function(_element,_eventName,_fn,_useCapture){\n      _element[pi.env.ie?\"attachEvent\":\"addEventListener\"]((pi.env.ie?\"on\":\"\")+_eventName,_fn,_useCapture||false);\n      return pi.util.Curry(pi.util.AddEvent,this,_element);\n    },\n    RemoveEvent: function(_element,_eventName,_fn,_useCapture){\n      _element[pi.env.ie?\"detachEvent\":\"removeEventListener\"]((pi.env.ie?\"on\":\"\")+_eventName,_fn,_useCapture||false);\n      return pi.util.Curry(pi.util.RemoveEvent,this,_element);\n    },\n    Element:{\n      addClass:function(_element,_class){\n        if( !pi.util.Element.hasClass(_element,_class) )\n          pi.util.Element.setClass(_element, pi.util.Element.getClass(_element) + \" \" + _class );\n      },\n      getClass:function(_element){\n        return _element.getAttribute(pi.env.ie&&!pi.env.ie8?\"className\":\"class\")||\"\";\n      },\n      hasClass:function(_element,_class){\n        return pi.util.Array.indexOf(pi.util.Element.getClass(_element).split(\" \"),_class)>-1;\n      },\n      removeClass:function(_element,_class){\n        if( pi.util.Element.hasClass(_element,_class) ){\n          var names = pi.util.Element.getClass(_element,_class).split(\" \");\n          pi.util.Element.setClass(\n              _element, \n              pi.util.Array.remove(names,pi.util.Array.indexOf(names,_class)).join(\" \")\n          );\n        }\n      },\n      setClass:function(_element,_value){\n        if(pi.env.ie8){\n          _element.setAttribute(\"className\", _value );\n          _element.setAttribute(\"class\", _value );\n        } else {\n          _element.setAttribute(pi.env.ie?\"className\":\"class\", _value );\n        }\n      },\n      toggleClass:function(){\n        if(pi.util.Element.hasClass.apply(this,arguments))\n          pi.util.Element.removeClass.apply(this,arguments);\n        else\n          pi.util.Element.addClass.apply(this,arguments);\n      },\n      getOpacity:function(_styleObject){\n        var styleObject = _styleObject;\n        if(!pi.env.ie)\n          return styleObject[\"opacity\"];\n\n        var alpha = styleObject[\"filter\"].match(/opacity\\=(\\d+)/i);\n        return alpha?alpha[1]/100:1;\n      },\n      setOpacity:function(_element,_value){\n        if(!pi.env.ie)\n          return pi.util.Element.addStyle(_element,{ \"opacity\":_value });\n        _value*=100;\n        pi.util.Element.addStyle(_element,{ \"filter\":\"alpha(opacity=\"+_value+\")\" });\n        return this._parent_;\n      },\n      getPosition:function(_element){\n        var parent = _element,offsetLeft = document.body.offsetLeft, offsetTop = document.body.offsetTop, view = pi.util.Element.getView(_element);\n        while(parent&&parent!=document.body&&parent!=document.firstChild){\n          offsetLeft +=parseInt(parent.offsetLeft);\n          offsetTop += parseInt(parent.offsetTop);\n          parent = parent.offsetParent;\n        };\n        return {\n          \"bottom\":view[\"bottom\"],\n          \"clientLeft\":_element.clientLeft,\n          \"clientTop\":_element.clientTop,\n          \"left\":view[\"left\"],\n          \"marginTop\":view[\"marginTop\"],\n          \"marginLeft\":view[\"marginLeft\"],\n          \"offsetLeft\":offsetLeft,\n          \"offsetTop\":offsetTop,\n          \"position\":view[\"position\"],\n          \"right\":view[\"right\"],\n          \"top\":view[\"top\"],\n          \"zIndex\":view[\"zIndex\"]\n        };\n      },\n      getSize:function(_element){\n        var view = pi.util.Element.getView(_element);\n        return {\n          \"height\":view[\"height\"],\n          \"clientHeight\":_element.clientHeight,\n          \"clientWidth\":_element.clientWidth,\n          \"offsetHeight\":_element.offsetHeight,\n          \"offsetWidth\":_element.offsetWidth,\n          \"width\":view[\"width\"]\n        }\n      },\n      addStyle:function(_element,_style){\n        for(var key in _style){\n          key = key==\"float\"?pi.env.ie?\"styleFloat\":\"cssFloat\":key;\n          if (key == \"opacity\" && pi.env.ie) {\n            pi.util.Element.setOpacity(_element,_style[key]);\n            continue;\n          }\n          try {\n            _element.style[key] = _style[key];\n          }catch(e){}     \n        }\n      },\n      getStyle:function(_element,_property){\n        _property = _property==\"float\"?pi.env.ie?\"styleFloat\":\"cssFloat\":_property;\n        if(_property==\"opacity\"&&pi.env.ie)\n          return pi.util.Element.getOpacity(_element.style);\n        return typeof _property==\"string\"?_element.style[_property]:_element.style;\n      },\n      getValue:function(_element){\n        switch(_element.nodeName.toLowerCase()){\n          case \"input\":\n          case \"textarea\":\n            return _element.value;\n          case \"select\":\n            return _element.options[_element.selectedIndex].value;\n          default:\n            return _element.innerHTML;\n          break;\n        }\n      },\n      getView:function(_element,_property){\n        var view = document.defaultView?document.defaultView.getComputedStyle(_element,null):_element.currentStyle;\n        _property = _property==\"float\"?pi.env.ie?\"styleFloat\":\"cssFloat\":_property;\n        if(_property==\"opacity\"&&pi.env.ie)\n          return pi.util.Element.getOpacity(_element,view);\n        return typeof _property==\"string\"?view[_property]:view;\n      }\n    },\n    Hash: {\n      clone:function(_hash,_undeep){\n        var tmp = {};\n        for(var key in _hash){\n          if( !_undeep&&pi.util.IsArray( _hash[key] ) ){\n            tmp[key] = pi.util.Array.clone( _hash[key] );\n          } else if( !_undeep&&pi.util.IsHash( _hash[key] ) ){\n            tmp[ key ] = pi.util.Hash.clone(_hash[key]);\n          } else {\n            tmp[key] = _hash[key];\n          }\n        }\n        return tmp;\n      },\n      merge:function(_hash,_source,_undeep){\n        for(var key in _source){\n          var value = _source[key];\n          if (!_undeep&&pi.util.IsArray(_source[key])) {\n            if(pi.util.IsArray( _hash[key] )){\n              Array.prototype.push.apply( _source[key], _hash[key] )\n            }\n            else\n              value = pi.util.Array.clone(_source[key]);\n          }\n          else if (!_undeep&&pi.util.IsHash(_source[key])) {\n            if (pi.util.IsHash(_hash[key])) {\n              value = pi.util.Hash.merge(_hash[key], _source[key]);\n            } else {\n              value = pi.util.Hash.clone( _source[key] );\n            }\n          } else if( _hash[key] )\n            value = _hash[ key ];\n          _hash[key] = value;\n        };\n        return _hash;\n      }\n    },\n    String:{\n      format:function(_str){\n        var values = Array.prototype.slice.call(arguments,1);\n        return _str.replace(/\\{(\\d)\\}/g,function(){\n          return values[arguments[1]];\n        })\n      }\n    },\n    GetViewport:function(){\n      return {\n        height:document.documentElement.clientHeight||document.body.clientHeight,\n        width:document.documentElement.clientWidth||document.body.clientWidth\n      }\n    }\n  };\n\n  pi.base = function(){\n    this.body = {};\n    this.init = null;\n\n    this.build = function(_skipClonning){\n      var base = this, skipClonning = _skipClonning||false, _private = {},\n      fn = function(){\n        var _p = pi.util.Hash.clone(_private);\n        if(!skipClonning){\n          for(var key in this){\n            if(pi.util.IsArray( this[ key ] ) ){\n              this[key] = pi.util.Array.clone( this[key] );\n            } else\n              if( pi.util.IsHash(this[key]) ){\n                this[key] = pi.util.Hash.clone( \n                    this[ key ],\n                    function(_key,_object){\n                      this[ _key ]._parent_ = this;\n                    }\n                );\n                //this[key]._parent_ = this;\n              }\n          }\n        };\n        base.createAccessors( _p, this );\n        if(base.init)\n          return base.init.apply(this,arguments);\n        return this;\n      };\n      this.movePrivateMembers(this.body,_private);\n      if(this.init){\n        fn[\"$Init\"] = this.init;\n      };\n      fn.prototype = this.body;\n      return fn;\n    };\n\n    this.createAccessors = function(_p, _branch){\n      var getter = function(_property){ return this[_property]; },\n      setter = function(_property,_value){ this[_property] = _value; return _branch._parent_||_branch; };\n\n      for (var name in _p) {\n        var isPrivate = name.substring(0, 1) == \"_\", title = name.substring(1, 2).toUpperCase() + name.substring(2);\n\n        if (isPrivate) {\n          _branch[(_branch[\"get\" + title]?\"_\":\"\")+\"get\" + title] = pi.util.Curry(getter,_p,name);\n          _branch[(_branch[\"set\" + title]?\"_\":\"\")+\"set\" + title] = pi.util.Curry(setter,_p,name);\n        }\n        else \n          if (pi.util.IsHash(_p[name])){\n            _branch[name]._parent_ = _branch;\n            if(!_branch[name])\n              _branch[name] = {};\n            this.createAccessors(_p[name], _branch[name]);\n          }   \n      };\n    };\n\n    this.movePrivateMembers = function(_object, _branch){\n      for (var name in _object) {\n        var isPrivate = name.substring(0, 1) == \"_\";\n\n        if (isPrivate) {\n          _branch[name] = _object[name];\n          delete _object[name];\n        }\n        else \n          if (pi.util.IsHash(_object[name])){\n            _branch[name] = {};\n            this.movePrivateMembers(_object[name], _branch[name]);\n          }\n      };\n    };\n  };\n\n  pi.element = new pi.base;\n  pi.element.init = function(_val){\n    this.environment.setElement(\n        typeof _val==\"string\"||!_val?\n            document.createElement(_val||\"DIV\"):\n              _val\n    );\n    return this;\n  };\n\n  pi.element.body = {\n    \"addStyle\":function(){\n      return this.environment.addStyle.apply(this.environment,arguments);\n    },\n    \"clean\":function(){\n      var childs = this.child.get();\n      while(childs.length){\n        childs[0].parentNode.removeChild(childs[0]);\n      }\n    },\n    \"clone\":function(_deep){\n      return this.environment.getElement().cloneNode(_deep);\n    },\n    \"insert\":function(_element){\n      _element = _element.environment?_element.environment.getElement():_element;\n      _element.appendChild(this.environment.getElement());\n      return this;\n    },\n    \"insertAfter\":function(_referenceElement){\n      _referenceElement = _referenceElement.environment?_referenceElement.environment.getElement():_referenceElement;\n      _referenceElement.nextSibling?this.insertBefore(_referenceElement.nextSibling):this.insert(_referenceElement.parentNode);\n      return this;\n    },\n    \"insertBefore\":function(_referenceElement){\n      _referenceElement = _referenceElement.environment?_referenceElement.environment.getElement():_referenceElement;\n      _referenceElement.parentNode.insertBefore(this.environment.getElement(),_referenceElement);\n      return this;\n    },\n    \"query\":function(_expression,_resultType,namespaceResolver,_result){\n      return pi.xpath(_expression,_resultType||\"ORDERED_NODE_SNAPSHOT_TYPE\",this.environment.getElement(),_namespaceResolver,_result);\n    },\n    \"remove\":function(){\n      if (this.environment.getParent()) {\n        this.environment.getParent().removeChild(this.environment.getElement());\n      }\n    },\n    \"update\":function(_value){\n      this.element[this.element.nodeName.toLowerCase()==\"textarea\"||this.element.nodeName.toLowerCase()==\"input\"?\"value\":\"innerHTML\"]=_value;\n      return this;\n    },\n    \"attribute\":{\n      \"getAll\":function(){\n        return this._parent_.environment.getElement().attributes;\n      },\n      \"clear\":function(_name){\n        this.set(_name,\"\");\n        return this._parent_;\n      },\n      \"get\":function(_name){\n        return this._parent_.environment.getElement().getAttribute(_name);\n      },\n      \"has\":function(_name){\n        return pi.env.ie?(this.get(_name)!=null):this._parent_.environment.getElement().hasAttribute(_name);\n      },\n      \"remove\":function(_name){\n        this._parent_.environment.getElement().removeAttribute(_name);\n        return this._parent_;\n      },\n      \"set\":function(_name,_value){\n        this._parent_.environment.getElement().setAttribute(_name,_value);\n        return this._parent_;\n      },\n      \"addClass\":function(_classes){\n        for(var i=0,len=arguments.length; i<len; i++){\n          pi.util.Element.addClass(this._parent_.environment.getElement(),arguments[i]);\n        };\n        return this._parent_;\n      },\n      \"clearClass\":function(){\n        this.setClass(\"\");\n        this._parent_;\n      },\n      \"getClass\":function(){\n        return pi.util.Element.getClass( this._parent_.environment.getElement() );\n      },\n      \"hasClass\":function(_class){\n        return pi.util.Element.hasClass( this._parent_.environment.getElement(), _class );\n      },\n      \"setClass\":function(_value){\n        return pi.util.Element.setClass( this._parent_.environment.getElement(), _value );\n      },\n      \"removeClass\":function(_class){\n        pi.util.Element.removeClass( this._parent_.environment.getElement(), _class );\n        return this._parent_;\n      },\n      \"toggleClass\":function(_class){\n        pi.util.Element.toggleClass( this._parent_.environment.getElement(), _class );\n      }\n    },\n    \"child\":{\n      \"get\":function(){\n        return this._parent_.environment.getElement().childNodes;\n      },\n      \"add\":function(_elements){\n        for (var i = 0; i < arguments.length; i++) {\n          var el = arguments[i];\n          this._parent_.environment.getElement().appendChild(\n              el.environment ? el.environment.getElement() : el\n          );\n        }\n        return this._parent_;\n      },\n      \"addAfter\":function(_element,_referenceElement){\n        this.addBefore(\n            _element.environment?_element.environment.getElement():_element,\n                (_referenceElement.environment?_referenceElement.environment.getElement():_referenceElement).nextSibling\n        );\n        return this._parent_;\n      },\n      \"addBefore\":function(_element,_referenceElement){\n        this._parent_.environment.getElement().insertBefore(\n            _element.environment?_element.environment.getElement():_element,\n                _referenceElement.environment?_referenceElement.environment.getElement():_referenceElement\n        );\n        return this._parent_;\n      },\n      \"remove\":function(_element){\n        this._parent_.environment.getElement().removeChild(_element.environment?_element.environment.getElement():_element);\n      }\n    },\n    \"environment\":{\n      \"_element\":null,\n      \"setElement\":function(_value){\n        this._parent_.element = _value;\n        this._parent_.element.lib = this._parent_;\n        this._parent_.element.firebugElement = true;\n        this._setElement(_value);\n      },\n      \"getParent\":function(){\n        return this.getElement().parentNode;\n      },\n      \"getPosition\":function(){\n        return pi.util.Element.getPosition(this.getElement());\n      },\n      \"getSize\":function(){\n        return pi.util.Element.getSize( this.getElement() );\n      },\n      \"addStyle\":function(_styleObject){\n        pi.util.Element.addStyle(this.getElement(),_styleObject);\n        return this._parent_;\n      },\n      \"getStyle\":function(_property){\n        return pi.util.Element.getStyle(this.getElement(),_property);\n      },\n      \"getName\":function(){\n        return this.getElement().nodeName;\n      },\n      \"getType\":function(){\n        return this.getElement().nodeType;\n      },\n      \"getValue\":function(){\n        return pi.util.Element.getValue(this.getElement());\n      },\n      \"getView\":function(_property){\n        return pi.util.Element.getView(this.getElement(),_property);\n      }\n    },\n    \"event\":{\n      \"addListener\":function(_event,_fn,_useCapture){\n        pi.util.AddEvent(this._parent_.environment.getElement(),_event,_fn,_useCapture);\n        return this._parent_;\n      },\n      \"removeListener\":function(_event,_fn,_useCapture){\n        pi.util.RemoveEvent(this._parent_.environment.getElement(),_event,_fn,_useCapture);\n        return this._parent_;\n      }\n    }\n  };\n  pi.element = pi.element.build();\n\n  pi.xhr = new pi.base;\n  pi.xhr.init = function(_url){\n    if(!window.XMLHttpRequest){\n      var names = [\"Msxml2.XMLHTTP.6.0\",\"Msxml2.XMLHTTP.3.0\",\"Msxml2.XMLHTTP\",\"Microsoft.XMLHTTP\"];\n      for (var i = 0; i < names.length; i++) {\n        try {\n          this.environment.setApi(new ActiveXObject(names[i]));\n          break;\n        } catch (e) { continue; }\n      }\n    }\n    else {\n      this.environment.setApi(new XMLHttpRequest());\n    }\n    this.environment.getApi().onreadystatechange=pi.util.Curry(this.event.readystatechange,this);\n    this.environment.setUrl(_url);\n    this.environment.setCallback([]);\n\n    return this;\n  };\n  pi.xhr.body = {\n    \"addCallback\": function(){\n      return this.environment.addCallback.apply(this.environment,arguments);\n    },\n    \"addData\": function(){\n      return this.environment.addData.apply(this.environment,arguments);\n    },\n    \"abort\":function(){\n      this.environment.getApi().abort();\n      return this;\n    },\n    \"send\":function(){\n      var url = this.environment.getUrl(), data = this.environment.getData(),dataUrl = \"\"; \n\n      if(!this.environment.getCache())\n        data[\"forceCache\"] = Number(new Date);\n\n      for (var key in data)\n        dataUrl += pi.util.String.format(\"{0}={1}&\",key, data[key]);\n\n      if (this.environment.getType()==\"GET\")\n        url += (url.search(\"\\\\?\")==-1?\"?\":\"&\")+pi.util.String.format(\"{0}\",dataUrl);\n\n      this.api.open(this.environment.getType(),url,this.environment.getAsync());\n      if(this.environment.getType()==\"POST\"){\n        this.api.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n      };\n      this.api.send(this.environment.getType()==\"GET\"?\"\":dataUrl);\n      return this;\n    }\n  };\n  pi.xhr.body.environment = {\n    \"_async\":true, \"_api\":null, \"_cache\":true, \"_callback\":null, \"_data\":{}, \"_type\":\"GET\", \"_url\":\"\",\n    \"setApi\":function(_value){\n      this._parent_.api = _value;\n      this._setApi(_value);\n    },\n    \"addCallback\": function(_readyState,_fn){\n      this.getCallback().push({ \"fn\":_fn, \"readyState\":_readyState  });\n      return this._parent_;\n    },\n    \"addData\": function(_key,_value){\n      this.getData()[_key] = _value;\n      return this._parent_;\n    },\n    \"setType\": function(_value){\n      this._setType(_value);\n      return this._parent_;\n    }\n  };\n  pi.xhr.body.event = {\n    \"readystatechange\":function(){\n      var readyState = this.environment.getApi().readyState, callback=this.environment.getCallback();\n      for (var i = 0, len=callback.length; i < len; i++) {\n        if(pi.util.Array.indexOf(callback[i].readyState,readyState)>-1){\n          callback[i].fn.apply(this);\n        }\n      }\n    }\n  };\n  pi.xhr = pi.xhr.build();\n\n  /*\n   * xml.xhr.get\n   */\n\n  pi.xhr.get = function(_url,_returnPiObject){\n    var request = new pi.xhr();\n    request.environment.setAsync(false);\n    request.environment.setUrl(_url);\n    request.send();\n    return _returnPiObject?request:request.environment.getApi();\n  };\n\n  /*\n   * registering onload event for init functions\n   */\n  pi.util.AddEvent(\n    pi.env.ie?window:document,\n    pi.env.ie?\"load\":\"DOMContentLoaded\",\n    function(){\n      for(var i=0,len=pi.util.Init.length; i<len; i++){\n        pi.util.Init[ i ]();\n      }\n    }\n  );\n})(firebug);\n\nwith(firebug){\n  initConsole();\n  lib.util.Init.push(firebug.init);\n}\n","Magento_Tinymce3/tiny_mce/classes/dom/Selection.js":"/**\n * Selection.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\tfunction trimNl(s) {\n\t\treturn s.replace(/[\\n\\r]+/g, '');\n\t};\n\n\t// Shorten names\n\tvar is = tinymce.is, isIE = tinymce.isIE, each = tinymce.each;\n\n\t/**\n\t * This class handles text and control selection it's an crossbrowser utility class.\n\t * Consult the TinyMCE Wiki API for more details and examples on how to use this class.\n\t *\n\t * @class tinymce.dom.Selection\n\t * @example\n\t * // Getting the currently selected node for the active editor\n\t * alert(tinymce.activeEditor.selection.getNode().nodeName);\n\t */\n\ttinymce.create('tinymce.dom.Selection', {\n\t\t/**\n\t\t * Constructs a new selection instance.\n\t\t *\n\t\t * @constructor\n\t\t * @method Selection\n\t\t * @param {tinymce.dom.DOMUtils} dom DOMUtils object reference.\n\t\t * @param {Window} win Window to bind the selection object to.\n\t\t * @param {tinymce.dom.Serializer} serializer DOM serialization class to use for getContent.\n\t\t */\n\t\tSelection : function(dom, win, serializer) {\n\t\t\tvar t = this;\n\n\t\t\tt.dom = dom;\n\t\t\tt.win = win;\n\t\t\tt.serializer = serializer;\n\n\t\t\t// Add events\n\t\t\teach([\n\t\t\t\t/**\n\t\t\t\t * This event gets executed before contents is extracted from the selection.\n\t\t\t\t *\n\t\t\t\t * @event onBeforeSetContent\n\t\t\t\t * @param {tinymce.dom.Selection} selection Selection object that fired the event.\n\t\t\t\t * @param {Object} args Contains things like the contents that will be returned. \n\t\t\t\t */\n\t\t\t\t'onBeforeSetContent',\n\n\t\t\t\t/**\n\t\t\t\t * This event gets executed before contents is inserted into selection. \n\t\t\t\t *\n\t\t\t\t * @event onBeforeGetContent\n\t\t\t\t * @param {tinymce.dom.Selection} selection Selection object that fired the event.\n\t\t\t\t * @param {Object} args Contains things like the contents that will be inserted. \n\t\t\t\t */\n\t\t\t\t'onBeforeGetContent',\n\n\t\t\t\t/**\n\t\t\t\t * This event gets executed when contents is inserted into selection.\n\t\t\t\t *\n\t\t\t\t * @event onSetContent\n\t\t\t\t * @param {tinymce.dom.Selection} selection Selection object that fired the event.\n\t\t\t\t * @param {Object} args Contains things like the contents that will be inserted. \n\t\t\t\t */\n\t\t\t\t'onSetContent',\n\n\t\t\t\t/**\n\t\t\t\t * This event gets executed when contents is extracted from the selection.\n\t\t\t\t *\n\t\t\t\t * @event onGetContent\n\t\t\t\t * @param {tinymce.dom.Selection} selection Selection object that fired the event.\n\t\t\t\t * @param {Object} args Contains things like the contents that will be returned. \n\t\t\t\t */\n\t\t\t\t'onGetContent'\n\t\t\t], function(e) {\n\t\t\t\tt[e] = new tinymce.util.Dispatcher(t);\n\t\t\t});\n\n\t\t\t// No W3C Range support\n\t\t\tif (!t.win.getSelection)\n\t\t\t\tt.tridentSel = new tinymce.dom.TridentSelection(t);\n\n\t\t\tif (tinymce.isIE && dom.boxModel)\n\t\t\t\tthis._fixIESelection();\n\n\t\t\t// Prevent leaks\n\t\t\ttinymce.addUnload(t.destroy, t);\n\t\t},\n\n\t\t/**\n\t\t * Move the selection cursor range to the specified node and offset.\n\t\t * @param node Node to put the cursor in.\n\t\t * @param offset Offset from the start of the node to put the cursor at.\n\t\t */\n\t\tsetCursorLocation: function(node, offset) {\n\t\t\tvar t = this; var r = t.dom.createRng();\n\t\t\tr.setStart(node, offset);\n\t\t\tr.setEnd(node, offset);\n\t\t\tt.setRng(r);\n\t\t\tt.collapse(false);\n\t\t},\n\t\t/**\n\t\t * Returns the selected contents using the DOM serializer passed in to this class.\n\t\t *\n\t\t * @method getContent\n\t\t * @param {Object} s Optional settings class with for example output format text or html.\n\t\t * @return {String} Selected contents in for example HTML format.\n\t\t * @example\n\t\t * // Alerts the currently selected contents\n\t\t * alert(tinyMCE.activeEditor.selection.getContent());\n\t\t * \n\t\t * // Alerts the currently selected contents as plain text\n\t\t * alert(tinyMCE.activeEditor.selection.getContent({format : 'text'}));\n\t\t */\n\t\tgetContent : function(s) {\n\t\t\tvar t = this, r = t.getRng(), e = t.dom.create(\"body\"), se = t.getSel(), wb, wa, n;\n\n\t\t\ts = s || {};\n\t\t\twb = wa = '';\n\t\t\ts.get = true;\n\t\t\ts.format = s.format || 'html';\n\t\t\ts.forced_root_block = '';\n\t\t\tt.onBeforeGetContent.dispatch(t, s);\n\n\t\t\tif (s.format == 'text')\n\t\t\t\treturn t.isCollapsed() ? '' : (r.text || (se.toString ? se.toString() : ''));\n\n\t\t\tif (r.cloneContents) {\n\t\t\t\tn = r.cloneContents();\n\n\t\t\t\tif (n)\n\t\t\t\t\te.appendChild(n);\n\t\t\t} else if (is(r.item) || is(r.htmlText)) {\n\t\t\t\t// IE will produce invalid markup if elements are present that\n\t\t\t\t// it doesn't understand like custom elements or HTML5 elements.\n\t\t\t\t// Adding a BR in front of the contents and then remoiving it seems to fix it though.\n\t\t\t\te.innerHTML = '<br>' + (r.item ? r.item(0).outerHTML : r.htmlText);\n\t\t\t\te.removeChild(e.firstChild);\n\t\t\t} else\n\t\t\t\te.innerHTML = r.toString();\n\n\t\t\t// Keep whitespace before and after\n\t\t\tif (/^\\s/.test(e.innerHTML))\n\t\t\t\twb = ' ';\n\n\t\t\tif (/\\s+$/.test(e.innerHTML))\n\t\t\t\twa = ' ';\n\n\t\t\ts.getInner = true;\n\n\t\t\ts.content = t.isCollapsed() ? '' : wb + t.serializer.serialize(e, s) + wa;\n\t\t\tt.onGetContent.dispatch(t, s);\n\n\t\t\treturn s.content;\n\t\t},\n\n\t\t/**\n\t\t * Sets the current selection to the specified content. If any contents is selected it will be replaced\n\t\t * with the contents passed in to this function. If there is no selection the contents will be inserted\n\t\t * where the caret is placed in the editor/page.\n\t\t *\n\t\t * @method setContent\n\t\t * @param {String} content HTML contents to set could also be other formats depending on settings.\n\t\t * @param {Object} args Optional settings object with for example data format.\n\t\t * @example\n\t\t * // Inserts some HTML contents at the current selection\n\t\t * tinyMCE.activeEditor.selection.setContent('<strong>Some contents</strong>');\n\t\t */\n\t\tsetContent : function(content, args) {\n\t\t\tvar self = this, rng = self.getRng(), caretNode, doc = self.win.document, frag, temp;\n\n\t\t\targs = args || {format : 'html'};\n\t\t\targs.set = true;\n\t\t\tcontent = args.content = content;\n\n\t\t\t// Dispatch before set content event\n\t\t\tif (!args.no_events)\n\t\t\t\tself.onBeforeSetContent.dispatch(self, args);\n\n\t\t\tcontent = args.content;\n\n\t\t\tif (rng.insertNode) {\n\t\t\t\t// Make caret marker since insertNode places the caret in the beginning of text after insert\n\t\t\t\tcontent += '<span id=\"__caret\">_</span>';\n\n\t\t\t\t// Delete and insert new node\n\t\t\t\tif (rng.startContainer == doc && rng.endContainer == doc) {\n\t\t\t\t\t// WebKit will fail if the body is empty since the range is then invalid and it can't insert contents\n\t\t\t\t\tdoc.body.innerHTML = content;\n\t\t\t\t} else {\n\t\t\t\t\trng.deleteContents();\n\n\t\t\t\t\tif (doc.body.childNodes.length == 0) {\n\t\t\t\t\t\tdoc.body.innerHTML = content;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// createContextualFragment doesn't exists in IE 9 DOMRanges\n\t\t\t\t\t\tif (rng.createContextualFragment) {\n\t\t\t\t\t\t\trng.insertNode(rng.createContextualFragment(content));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Fake createContextualFragment call in IE 9\n\t\t\t\t\t\t\tfrag = doc.createDocumentFragment();\n\t\t\t\t\t\t\ttemp = doc.createElement('div');\n\n\t\t\t\t\t\t\tfrag.appendChild(temp);\n\t\t\t\t\t\t\ttemp.outerHTML = content;\n\n\t\t\t\t\t\t\trng.insertNode(frag);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Move to caret marker\n\t\t\t\tcaretNode = self.dom.get('__caret');\n\n\t\t\t\t// Make sure we wrap it compleatly, Opera fails with a simple select call\n\t\t\t\trng = doc.createRange();\n\t\t\t\trng.setStartBefore(caretNode);\n\t\t\t\trng.setEndBefore(caretNode);\n\t\t\t\tself.setRng(rng);\n\n\t\t\t\t// Remove the caret position\n\t\t\t\tself.dom.remove('__caret');\n\n\t\t\t\ttry {\n\t\t\t\t\tself.setRng(rng);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// Might fail on Opera for some odd reason\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (rng.item) {\n\t\t\t\t\t// Delete content and get caret text selection\n\t\t\t\t\tdoc.execCommand('Delete', false, null);\n\t\t\t\t\trng = self.getRng();\n\t\t\t\t}\n\n\t\t\t\t// Explorer removes spaces from the beginning of pasted contents\n\t\t\t\tif (/^\\s+/.test(content)) {\n\t\t\t\t\trng.pasteHTML('<span id=\"__mce_tmp\">_</span>' + content);\n\t\t\t\t\tself.dom.remove('__mce_tmp');\n\t\t\t\t} else\n\t\t\t\t\trng.pasteHTML(content);\n\t\t\t}\n\n\t\t\t// Dispatch set content event\n\t\t\tif (!args.no_events)\n\t\t\t\tself.onSetContent.dispatch(self, args);\n\t\t},\n\n\t\t/**\n\t\t * Returns the start element of a selection range. If the start is in a text\n\t\t * node the parent element will be returned.\n\t\t *\n\t\t * @method getStart\n\t\t * @return {Element} Start element of selection range.\n\t\t */\n\t\tgetStart : function() {\n\t\t\tvar rng = this.getRng(), startElement, parentElement, checkRng, node;\n\n\t\t\tif (rng.duplicate || rng.item) {\n\t\t\t\t// Control selection, return first item\n\t\t\t\tif (rng.item)\n\t\t\t\t\treturn rng.item(0);\n\n\t\t\t\t// Get start element\n\t\t\t\tcheckRng = rng.duplicate();\n\t\t\t\tcheckRng.collapse(1);\n\t\t\t\tstartElement = checkRng.parentElement();\n\n\t\t\t\t// Check if range parent is inside the start element, then return the inner parent element\n\t\t\t\t// This will fix issues when a single element is selected, IE would otherwise return the wrong start element\n\t\t\t\tparentElement = node = rng.parentElement();\n\t\t\t\twhile (node = node.parentNode) {\n\t\t\t\t\tif (node == startElement) {\n\t\t\t\t\t\tstartElement = parentElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn startElement;\n\t\t\t} else {\n\t\t\t\tstartElement = rng.startContainer;\n\n\t\t\t\tif (startElement.nodeType == 1 && startElement.hasChildNodes())\n\t\t\t\t\tstartElement = startElement.childNodes[Math.min(startElement.childNodes.length - 1, rng.startOffset)];\n\n\t\t\t\tif (startElement && startElement.nodeType == 3)\n\t\t\t\t\treturn startElement.parentNode;\n\n\t\t\t\treturn startElement;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the end element of a selection range. If the end is in a text\n\t\t * node the parent element will be returned.\n\t\t *\n\t\t * @method getEnd\n\t\t * @return {Element} End element of selection range.\n\t\t */\n\t\tgetEnd : function() {\n\t\t\tvar t = this, r = t.getRng(), e, eo;\n\n\t\t\tif (r.duplicate || r.item) {\n\t\t\t\tif (r.item)\n\t\t\t\t\treturn r.item(0);\n\n\t\t\t\tr = r.duplicate();\n\t\t\t\tr.collapse(0);\n\t\t\t\te = r.parentElement();\n\n\t\t\t\tif (e && e.nodeName == 'BODY')\n\t\t\t\t\treturn e.lastChild || e;\n\n\t\t\t\treturn e;\n\t\t\t} else {\n\t\t\t\te = r.endContainer;\n\t\t\t\teo = r.endOffset;\n\n\t\t\t\tif (e.nodeType == 1 && e.hasChildNodes())\n\t\t\t\t\te = e.childNodes[eo > 0 ? eo - 1 : eo];\n\n\t\t\t\tif (e && e.nodeType == 3)\n\t\t\t\t\treturn e.parentNode;\n\n\t\t\t\treturn e;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns a bookmark location for the current selection. This bookmark object\n\t\t * can then be used to restore the selection after some content modification to the document.\n\t\t *\n\t\t * @method getBookmark\n\t\t * @param {Number} type Optional state if the bookmark should be simple or not. Default is complex.\n\t\t * @param {Boolean} normalized Optional state that enables you to get a position that it would be after normalization.\n\t\t * @return {Object} Bookmark object, use moveToBookmark with this object to restore the selection.\n\t\t * @example\n\t\t * // Stores a bookmark of the current selection\n\t\t * var bm = tinyMCE.activeEditor.selection.getBookmark();\n\t\t * \n\t\t * tinyMCE.activeEditor.setContent(tinyMCE.activeEditor.getContent() + 'Some new content');\n\t\t * \n\t\t * // Restore the selection bookmark\n\t\t * tinyMCE.activeEditor.selection.moveToBookmark(bm);\n\t\t */\n\t\tgetBookmark : function(type, normalized) {\n\t\t\tvar t = this, dom = t.dom, rng, rng2, id, collapsed, name, element, index, chr = '\\uFEFF', styles;\n\n\t\t\tfunction findIndex(name, element) {\n\t\t\t\tvar index = 0;\n\n\t\t\t\teach(dom.select(name), function(node, i) {\n\t\t\t\t\tif (node == element)\n\t\t\t\t\t\tindex = i;\n\t\t\t\t});\n\n\t\t\t\treturn index;\n\t\t\t};\n\n\t\t\tif (type == 2) {\n\t\t\t\tfunction getLocation() {\n\t\t\t\t\tvar rng = t.getRng(true), root = dom.getRoot(), bookmark = {};\n\n\t\t\t\t\tfunction getPoint(rng, start) {\n\t\t\t\t\t\tvar container = rng[start ? 'startContainer' : 'endContainer'],\n\t\t\t\t\t\t\toffset = rng[start ? 'startOffset' : 'endOffset'], point = [], node, childNodes, after = 0;\n\n\t\t\t\t\t\tif (container.nodeType == 3) {\n\t\t\t\t\t\t\tif (normalized) {\n\t\t\t\t\t\t\t\tfor (node = container.previousSibling; node && node.nodeType == 3; node = node.previousSibling)\n\t\t\t\t\t\t\t\t\toffset += node.nodeValue.length;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpoint.push(offset);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchildNodes = container.childNodes;\n\n\t\t\t\t\t\t\tif (offset >= childNodes.length && childNodes.length) {\n\t\t\t\t\t\t\t\tafter = 1;\n\t\t\t\t\t\t\t\toffset = Math.max(0, childNodes.length - 1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpoint.push(t.dom.nodeIndex(childNodes[offset], normalized) + after);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (; container && container != root; container = container.parentNode)\n\t\t\t\t\t\t\tpoint.push(t.dom.nodeIndex(container, normalized));\n\n\t\t\t\t\t\treturn point;\n\t\t\t\t\t};\n\n\t\t\t\t\tbookmark.start = getPoint(rng, true);\n\n\t\t\t\t\tif (!t.isCollapsed())\n\t\t\t\t\t\tbookmark.end = getPoint(rng);\n\n\t\t\t\t\treturn bookmark;\n\t\t\t\t};\n\n\t\t\t\tif (t.tridentSel)\n\t\t\t\t\treturn t.tridentSel.getBookmark(type);\n\n\t\t\t\treturn getLocation();\n\t\t\t}\n\n\t\t\t// Handle simple range\n\t\t\tif (type)\n\t\t\t\treturn {rng : t.getRng()};\n\n\t\t\trng = t.getRng();\n\t\t\tid = dom.uniqueId();\n\t\t\tcollapsed = tinyMCE.activeEditor.selection.isCollapsed();\n\t\t\tstyles = 'overflow:hidden;line-height:0px';\n\n\t\t\t// Explorer method\n\t\t\tif (rng.duplicate || rng.item) {\n\t\t\t\t// Text selection\n\t\t\t\tif (!rng.item) {\n\t\t\t\t\trng2 = rng.duplicate();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Insert start marker\n\t\t\t\t\t\trng.collapse();\n\t\t\t\t\t\trng.pasteHTML('<span data-mce-type=\"bookmark\" id=\"' + id + '_start\" style=\"' + styles + '\">' + chr + '</span>');\n\n\t\t\t\t\t\t// Insert end marker\n\t\t\t\t\t\tif (!collapsed) {\n\t\t\t\t\t\t\trng2.collapse(false);\n\n\t\t\t\t\t\t\t// Detect the empty space after block elements in IE and move the end back one character <p></p>] becomes <p>]</p>\n\t\t\t\t\t\t\trng.moveToElementText(rng2.parentElement());\n\t\t\t\t\t\t\tif (rng.compareEndPoints('StartToEnd', rng2) == 0)\n\t\t\t\t\t\t\t\trng2.move('character', -1);\n\n\t\t\t\t\t\t\trng2.pasteHTML('<span data-mce-type=\"bookmark\" id=\"' + id + '_end\" style=\"' + styles + '\">' + chr + '</span>');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t// IE might throw unspecified error so lets ignore it\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Control selection\n\t\t\t\t\telement = rng.item(0);\n\t\t\t\t\tname = element.nodeName;\n\n\t\t\t\t\treturn {name : name, index : findIndex(name, element)};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement = t.getNode();\n\t\t\t\tname = element.nodeName;\n\t\t\t\tif (name == 'IMG')\n\t\t\t\t\treturn {name : name, index : findIndex(name, element)};\n\n\t\t\t\t// W3C method\n\t\t\t\trng2 = rng.cloneRange();\n\n\t\t\t\t// Insert end marker\n\t\t\t\tif (!collapsed) {\n\t\t\t\t\trng2.collapse(false);\n\t\t\t\t\trng2.insertNode(dom.create('span', {'data-mce-type' : \"bookmark\", id : id + '_end', style : styles}, chr));\n\t\t\t\t}\n\n\t\t\t\trng.collapse(true);\n\t\t\t\trng.insertNode(dom.create('span', {'data-mce-type' : \"bookmark\", id : id + '_start', style : styles}, chr));\n\t\t\t}\n\n\t\t\tt.moveToBookmark({id : id, keep : 1});\n\n\t\t\treturn {id : id};\n\t\t},\n\n\t\t/**\n\t\t * Restores the selection to the specified bookmark.\n\t\t *\n\t\t * @method moveToBookmark\n\t\t * @param {Object} bookmark Bookmark to restore selection from.\n\t\t * @return {Boolean} true/false if it was successful or not.\n\t\t * @example\n\t\t * // Stores a bookmark of the current selection\n\t\t * var bm = tinyMCE.activeEditor.selection.getBookmark();\n\t\t * \n\t\t * tinyMCE.activeEditor.setContent(tinyMCE.activeEditor.getContent() + 'Some new content');\n\t\t * \n\t\t * // Restore the selection bookmark\n\t\t * tinyMCE.activeEditor.selection.moveToBookmark(bm);\n\t\t */\n\t\tmoveToBookmark : function(bookmark) {\n\t\t\tvar t = this, dom = t.dom, marker1, marker2, rng, root, startContainer, endContainer, startOffset, endOffset;\n\n\t\t\tif (bookmark) {\n\t\t\t\tif (bookmark.start) {\n\t\t\t\t\trng = dom.createRng();\n\t\t\t\t\troot = dom.getRoot();\n\n\t\t\t\t\tfunction setEndPoint(start) {\n\t\t\t\t\t\tvar point = bookmark[start ? 'start' : 'end'], i, node, offset, children;\n\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\toffset = point[0];\n\n\t\t\t\t\t\t\t// Find container node\n\t\t\t\t\t\t\tfor (node = root, i = point.length - 1; i >= 1; i--) {\n\t\t\t\t\t\t\t\tchildren = node.childNodes;\n\n\t\t\t\t\t\t\t\tif (point[i] > children.length - 1)\n\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\tnode = children[point[i]];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Move text offset to best suitable location\n\t\t\t\t\t\t\tif (node.nodeType === 3)\n\t\t\t\t\t\t\t\toffset = Math.min(point[0], node.nodeValue.length);\n\n\t\t\t\t\t\t\t// Move element offset to best suitable location\n\t\t\t\t\t\t\tif (node.nodeType === 1)\n\t\t\t\t\t\t\t\toffset = Math.min(point[0], node.childNodes.length);\n\n\t\t\t\t\t\t\t// Set offset within container node\n\t\t\t\t\t\t\tif (start)\n\t\t\t\t\t\t\t\trng.setStart(node, offset);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\trng.setEnd(node, offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (t.tridentSel)\n\t\t\t\t\t\treturn t.tridentSel.moveToBookmark(bookmark);\n\n\t\t\t\t\tif (setEndPoint(true) && setEndPoint()) {\n\t\t\t\t\t\tt.setRng(rng);\n\t\t\t\t\t}\n\t\t\t\t} else if (bookmark.id) {\n\t\t\t\t\tfunction restoreEndPoint(suffix) {\n\t\t\t\t\t\tvar marker = dom.get(bookmark.id + '_' + suffix), node, idx, next, prev, keep = bookmark.keep;\n\n\t\t\t\t\t\tif (marker) {\n\t\t\t\t\t\t\tnode = marker.parentNode;\n\n\t\t\t\t\t\t\tif (suffix == 'start') {\n\t\t\t\t\t\t\t\tif (!keep) {\n\t\t\t\t\t\t\t\t\tidx = dom.nodeIndex(marker);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnode = marker.firstChild;\n\t\t\t\t\t\t\t\t\tidx = 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tstartContainer = endContainer = node;\n\t\t\t\t\t\t\t\tstartOffset = endOffset = idx;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (!keep) {\n\t\t\t\t\t\t\t\t\tidx = dom.nodeIndex(marker);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnode = marker.firstChild;\n\t\t\t\t\t\t\t\t\tidx = 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tendContainer = node;\n\t\t\t\t\t\t\t\tendOffset = idx;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!keep) {\n\t\t\t\t\t\t\t\tprev = marker.previousSibling;\n\t\t\t\t\t\t\t\tnext = marker.nextSibling;\n\n\t\t\t\t\t\t\t\t// Remove all marker text nodes\n\t\t\t\t\t\t\t\teach(tinymce.grep(marker.childNodes), function(node) {\n\t\t\t\t\t\t\t\t\tif (node.nodeType == 3)\n\t\t\t\t\t\t\t\t\t\tnode.nodeValue = node.nodeValue.replace(/\\uFEFF/g, '');\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t// Remove marker but keep children if for example contents where inserted into the marker\n\t\t\t\t\t\t\t\t// Also remove duplicated instances of the marker for example by a split operation or by WebKit auto split on paste feature\n\t\t\t\t\t\t\t\twhile (marker = dom.get(bookmark.id + '_' + suffix))\n\t\t\t\t\t\t\t\t\tdom.remove(marker, 1);\n\n\t\t\t\t\t\t\t\t// If siblings are text nodes then merge them unless it's Opera since it some how removes the node\n\t\t\t\t\t\t\t\t// and we are sniffing since adding a lot of detection code for a browser with 3% of the market isn't worth the effort. Sorry, Opera but it's just a fact\n\t\t\t\t\t\t\t\tif (prev && next && prev.nodeType == next.nodeType && prev.nodeType == 3 && !tinymce.isOpera) {\n\t\t\t\t\t\t\t\t\tidx = prev.nodeValue.length;\n\t\t\t\t\t\t\t\t\tprev.appendData(next.nodeValue);\n\t\t\t\t\t\t\t\t\tdom.remove(next);\n\n\t\t\t\t\t\t\t\t\tif (suffix == 'start') {\n\t\t\t\t\t\t\t\t\t\tstartContainer = endContainer = prev;\n\t\t\t\t\t\t\t\t\t\tstartOffset = endOffset = idx;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tendContainer = prev;\n\t\t\t\t\t\t\t\t\t\tendOffset = idx;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tfunction addBogus(node) {\n\t\t\t\t\t\t// Adds a bogus BR element for empty block elements or just a space on IE since it renders BR elements incorrectly\n\t\t\t\t\t\tif (dom.isBlock(node) && !node.innerHTML)\n\t\t\t\t\t\t\tnode.innerHTML = !isIE ? '<br data-mce-bogus=\"1\" />' : ' ';\n\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t};\n\n\t\t\t\t\t// Restore start/end points\n\t\t\t\t\trestoreEndPoint('start');\n\t\t\t\t\trestoreEndPoint('end');\n\n\t\t\t\t\tif (startContainer) {\n\t\t\t\t\t\trng = dom.createRng();\n\t\t\t\t\t\trng.setStart(addBogus(startContainer), startOffset);\n\t\t\t\t\t\trng.setEnd(addBogus(endContainer), endOffset);\n\t\t\t\t\t\tt.setRng(rng);\n\t\t\t\t\t}\n\t\t\t\t} else if (bookmark.name) {\n\t\t\t\t\tt.select(dom.select(bookmark.name)[bookmark.index]);\n\t\t\t\t} else if (bookmark.rng)\n\t\t\t\t\tt.setRng(bookmark.rng);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Selects the specified element. This will place the start and end of the selection range around the element.\n\t\t *\n\t\t * @method select\n\t\t * @param {Element} node HMTL DOM element to select.\n\t\t * @param {Boolean} content Optional bool state if the contents should be selected or not on non IE browser.\n\t\t * @return {Element} Selected element the same element as the one that got passed in.\n\t\t * @example\n\t\t * // Select the first paragraph in the active editor\n\t\t * tinyMCE.activeEditor.selection.select(tinyMCE.activeEditor.dom.select('p')[0]);\n\t\t */\n\t\tselect : function(node, content) {\n\t\t\tvar t = this, dom = t.dom, rng = dom.createRng(), idx;\n\n\t\t\tif (node) {\n\t\t\t\tidx = dom.nodeIndex(node);\n\t\t\t\trng.setStart(node.parentNode, idx);\n\t\t\t\trng.setEnd(node.parentNode, idx + 1);\n\n\t\t\t\t// Find first/last text node or BR element\n\t\t\t\tif (content) {\n\t\t\t\t\tfunction setPoint(node, start) {\n\t\t\t\t\t\tvar walker = new tinymce.dom.TreeWalker(node, node);\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t// Text node\n\t\t\t\t\t\t\tif (node.nodeType == 3 && tinymce.trim(node.nodeValue).length != 0) {\n\t\t\t\t\t\t\t\tif (start)\n\t\t\t\t\t\t\t\t\trng.setStart(node, 0);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\trng.setEnd(node, node.nodeValue.length);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// BR element\n\t\t\t\t\t\t\tif (node.nodeName == 'BR') {\n\t\t\t\t\t\t\t\tif (start)\n\t\t\t\t\t\t\t\t\trng.setStartBefore(node);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\trng.setEndBefore(node);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (node = (start ? walker.next() : walker.prev()));\n\t\t\t\t\t};\n\n\t\t\t\t\tsetPoint(node, 1);\n\t\t\t\t\tsetPoint(node);\n\t\t\t\t}\n\n\t\t\t\tt.setRng(rng);\n\t\t\t}\n\n\t\t\treturn node;\n\t\t},\n\n\t\t/**\n\t\t * Returns true/false if the selection range is collapsed or not. Collapsed means if it's a caret or a larger selection.\n\t\t *\n\t\t * @method isCollapsed\n\t\t * @return {Boolean} true/false state if the selection range is collapsed or not. Collapsed means if it's a caret or a larger selection.\n\t\t */\n\t\tisCollapsed : function() {\n\t\t\tvar t = this, r = t.getRng(), s = t.getSel();\n\n\t\t\tif (!r || r.item)\n\t\t\t\treturn false;\n\n\t\t\tif (r.compareEndPoints)\n\t\t\t\treturn r.compareEndPoints('StartToEnd', r) === 0;\n\n\t\t\treturn !s || r.collapsed;\n\t\t},\n\n\t\t/**\n\t\t * Collapse the selection to start or end of range.\n\t\t *\n\t\t * @method collapse\n\t\t * @param {Boolean} to_start Optional boolean state if to collapse to end or not. Defaults to start.\n\t\t */\n\t\tcollapse : function(to_start) {\n\t\t\tvar self = this, rng = self.getRng(), node;\n\n\t\t\t// Control range on IE\n\t\t\tif (rng.item) {\n\t\t\t\tnode = rng.item(0);\n\t\t\t\trng = self.win.document.body.createTextRange();\n\t\t\t\trng.moveToElementText(node);\n\t\t\t}\n\n\t\t\trng.collapse(!!to_start);\n\t\t\tself.setRng(rng);\n\t\t},\n\n\t\t/**\n\t\t * Returns the browsers internal selection object.\n\t\t *\n\t\t * @method getSel\n\t\t * @return {Selection} Internal browser selection object.\n\t\t */\n\t\tgetSel : function() {\n\t\t\tvar t = this, w = this.win;\n\n\t\t\treturn w.getSelection ? w.getSelection() : w.document.selection;\n\t\t},\n\n\t\t/**\n\t\t * Returns the browsers internal range object.\n\t\t *\n\t\t * @method getRng\n\t\t * @param {Boolean} w3c Forces a compatible W3C range on IE.\n\t\t * @return {Range} Internal browser range object.\n\t\t * @see http://www.quirksmode.org/dom/range_intro.html\n\t\t * @see http://www.dotvoid.com/2001/03/using-the-range-object-in-mozilla/\n\t\t */\n\t\tgetRng : function(w3c) {\n\t\t\tvar t = this, s, r, elm, doc = t.win.document;\n\n\t\t\t// Found tridentSel object then we need to use that one\n\t\t\tif (w3c && t.tridentSel)\n\t\t\t\treturn t.tridentSel.getRangeAt(0);\n\n\t\t\ttry {\n\t\t\t\tif (s = t.getSel())\n\t\t\t\t\tr = s.rangeCount > 0 ? s.getRangeAt(0) : (s.createRange ? s.createRange() : doc.createRange());\n\t\t\t} catch (ex) {\n\t\t\t\t// IE throws unspecified error here if TinyMCE is placed in a frame/iframe\n\t\t\t}\n\n\t\t\t// We have W3C ranges and it's IE then fake control selection since IE9 doesn't handle that correctly yet\n\t\t\tif (tinymce.isIE && r && r.setStart && doc.selection.createRange().item) {\n\t\t\t\telm = doc.selection.createRange().item(0);\n\t\t\t\tr = doc.createRange();\n\t\t\t\tr.setStartBefore(elm);\n\t\t\t\tr.setEndAfter(elm);\n\t\t\t}\n\n\t\t\t// No range found then create an empty one\n\t\t\t// This can occur when the editor is placed in a hidden container element on Gecko\n\t\t\t// Or on IE when there was an exception\n\t\t\tif (!r)\n\t\t\t\tr = doc.createRange ? doc.createRange() : doc.body.createTextRange();\n\n\t\t\tif (t.selectedRange && t.explicitRange) {\n\t\t\t\tif (r.compareBoundaryPoints(r.START_TO_START, t.selectedRange) === 0 && r.compareBoundaryPoints(r.END_TO_END, t.selectedRange) === 0) {\n\t\t\t\t\t// Safari, Opera and Chrome only ever select text which causes the range to change.\n\t\t\t\t\t// This lets us use the originally set range if the selection hasn't been changed by the user.\n\t\t\t\t\tr = t.explicitRange;\n\t\t\t\t} else {\n\t\t\t\t\tt.selectedRange = null;\n\t\t\t\t\tt.explicitRange = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn r;\n\t\t},\n\n\t\t/**\n\t\t * Changes the selection to the specified DOM range.\n\t\t *\n\t\t * @method setRng\n\t\t * @param {Range} r Range to select.\n\t\t */\n\t\tsetRng : function(r) {\n\t\t\tvar s, t = this;\n\t\t\t\n\t\t\tif (!t.tridentSel) {\n\t\t\t\ts = t.getSel();\n\n\t\t\t\tif (s) {\n\t\t\t\t\tt.explicitRange = r;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\ts.removeAllRanges();\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t// IE9 might throw errors here don't know why\n\t\t\t\t\t}\n\n\t\t\t\t\ts.addRange(r);\n\t\t\t\t\tt.selectedRange = s.getRangeAt(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Is W3C Range\n\t\t\t\tif (r.cloneRange) {\n\t\t\t\t\tt.tridentSel.addRange(r);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Is IE specific range\n\t\t\t\ttry {\n\t\t\t\t\tr.select();\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// Needed for some odd IE bug #1843306\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sets the current selection to the specified DOM element.\n\t\t *\n\t\t * @method setNode\n\t\t * @param {Element} n Element to set as the contents of the selection.\n\t\t * @return {Element} Returns the element that got passed in.\n\t\t * @example\n\t\t * // Inserts a DOM node at current selection/caret location\n\t\t * tinyMCE.activeEditor.selection.setNode(tinyMCE.activeEditor.dom.create('img', {src : 'some.gif', title : 'some title'}));\n\t\t */\n\t\tsetNode : function(n) {\n\t\t\tvar t = this;\n\n\t\t\tt.setContent(t.dom.getOuterHTML(n));\n\n\t\t\treturn n;\n\t\t},\n\n\t\t/**\n\t\t * Returns the currently selected element or the common ancestor element for both start and end of the selection.\n\t\t *\n\t\t * @method getNode\n\t\t * @return {Element} Currently selected element or common ancestor element.\n\t\t * @example\n\t\t * // Alerts the currently selected elements node name\n\t\t * alert(tinyMCE.activeEditor.selection.getNode().nodeName);\n\t\t */\n\t\tgetNode : function() {\n\t\t\tvar t = this, rng = t.getRng(), sel = t.getSel(), elm, start = rng.startContainer, end = rng.endContainer;\n\n\t\t\t// Range maybe lost after the editor is made visible again\n\t\t\tif (!rng)\n\t\t\t\treturn t.dom.getRoot();\n\n\t\t\tif (rng.setStart) {\n\t\t\t\telm = rng.commonAncestorContainer;\n\n\t\t\t\t// Handle selection a image or other control like element such as anchors\n\t\t\t\tif (!rng.collapsed) {\n\t\t\t\t\tif (rng.startContainer == rng.endContainer) {\n\t\t\t\t\t\tif (rng.endOffset - rng.startOffset < 2) {\n\t\t\t\t\t\t\tif (rng.startContainer.hasChildNodes())\n\t\t\t\t\t\t\t\telm = rng.startContainer.childNodes[rng.startOffset];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the anchor node is a element instead of a text node then return this element\n\t\t\t\t\t//if (tinymce.isWebKit && sel.anchorNode && sel.anchorNode.nodeType == 1) \n\t\t\t\t\t//\treturn sel.anchorNode.childNodes[sel.anchorOffset];\n\n\t\t\t\t\t// Handle cases where the selection is immediately wrapped around a node and return that node instead of it's parent.\n\t\t\t\t\t// This happens when you double click an underlined word in FireFox.\n\t\t\t\t\tif (start.nodeType === 3 && end.nodeType === 3) {\n\t\t\t\t\t\tfunction skipEmptyTextNodes(n, forwards) {\n\t\t\t\t\t\t\tvar orig = n;\n\t\t\t\t\t\t\twhile (n && n.nodeType === 3 && n.length === 0) {\n\t\t\t\t\t\t\t\tn = forwards ? n.nextSibling : n.previousSibling;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn n || orig;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (start.length === rng.startOffset) {\n\t\t\t\t\t\t\tstart = skipEmptyTextNodes(start.nextSibling, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstart = start.parentNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rng.endOffset === 0) {\n\t\t\t\t\t\t\tend = skipEmptyTextNodes(end.previousSibling, false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tend = end.parentNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start && start === end)\n\t\t\t\t\t\t\treturn start;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (elm && elm.nodeType == 3)\n\t\t\t\t\treturn elm.parentNode;\n\n\t\t\t\treturn elm;\n\t\t\t}\n\n\t\t\treturn rng.item ? rng.item(0) : rng.parentElement();\n\t\t},\n\n\t\tgetSelectedBlocks : function(st, en) {\n\t\t\tvar t = this, dom = t.dom, sb, eb, n, bl = [];\n\n\t\t\tsb = dom.getParent(st || t.getStart(), dom.isBlock);\n\t\t\teb = dom.getParent(en || t.getEnd(), dom.isBlock);\n\n\t\t\tif (sb)\n\t\t\t\tbl.push(sb);\n\n\t\t\tif (sb && eb && sb != eb) {\n\t\t\t\tn = sb;\n\n\t\t\t\tvar walker = new tinymce.dom.TreeWalker(sb, dom.getRoot());\n\t\t\t\twhile ((n = walker.next()) && n != eb) {\n\t\t\t\t\tif (dom.isBlock(n))\n\t\t\t\t\t\tbl.push(n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (eb && sb != eb)\n\t\t\t\tbl.push(eb);\n\n\t\t\treturn bl;\n\t\t},\n\n\t\tnormalize : function() {\n\t\t\tvar self = this, rng, normalized;\n\n\t\t\t// Normalize only on non IE browsers for now\n\t\t\tif (tinymce.isIE)\n\t\t\t\treturn;\n\n\t\t\tfunction normalizeEndPoint(start) {\n\t\t\t\tvar container, offset, walker, dom = self.dom, body = dom.getRoot(), node;\n\n\t\t\t\tcontainer = rng[(start ? 'start' : 'end') + 'Container'];\n\t\t\t\toffset = rng[(start ? 'start' : 'end') + 'Offset'];\n\n\t\t\t\t// If the container is a document move it to the body element\n\t\t\t\tif (container.nodeType === 9) {\n\t\t\t\t\tcontainer = container.body;\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\n\t\t\t\t// If the container is body try move it into the closest text node or position\n\t\t\t\t// TODO: Add more logic here to handle element selection cases\n\t\t\t\tif (container === body) {\n\t\t\t\t\t// Resolve the index\n\t\t\t\t\tif (container.hasChildNodes()) {\n\t\t\t\t\t\tcontainer = container.childNodes[Math.min(!start && offset > 0 ? offset - 1 : offset, container.childNodes.length - 1)];\n\t\t\t\t\t\toffset = 0;\n\n\t\t\t\t\t\t// Don't walk into elements that doesn't have any child nodes like a IMG\n\t\t\t\t\t\tif (container.hasChildNodes()) {\n\t\t\t\t\t\t\t// Walk the DOM to find a text node to place the caret at or a BR\n\t\t\t\t\t\t\tnode = container;\n\t\t\t\t\t\t\twalker = new tinymce.dom.TreeWalker(container, body);\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t// Found a text node use that position\n\t\t\t\t\t\t\t\tif (node.nodeType === 3) {\n\t\t\t\t\t\t\t\t\toffset = start ? 0 : node.nodeValue.length - 1;\n\t\t\t\t\t\t\t\t\tcontainer = node;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Found a BR element that we can place the caret before\n\t\t\t\t\t\t\t\tif (node.nodeName === 'BR') {\n\t\t\t\t\t\t\t\t\toffset = dom.nodeIndex(node);\n\t\t\t\t\t\t\t\t\tcontainer = node.parentNode;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} while (node = (start ? walker.next() : walker.prev()));\n\n\t\t\t\t\t\t\tnormalized = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set endpoint if it was normalized\n\t\t\t\tif (normalized)\n\t\t\t\t\trng['set' + (start ? 'Start' : 'End')](container, offset);\n\t\t\t};\n\n\t\t\trng = self.getRng();\n\n\t\t\t// Normalize the end points\n\t\t\tnormalizeEndPoint(true);\n\t\t\t\n\t\t\tif (rng.collapsed)\n\t\t\t\tnormalizeEndPoint();\n\n\t\t\t// Set the selection if it was normalized\n\t\t\tif (normalized) {\n\t\t\t\t//console.log(self.dom.dumpRng(rng));\n\t\t\t\tself.setRng(rng);\n\t\t\t}\n\t\t},\n\n\t\tdestroy : function(s) {\n\t\t\tvar t = this;\n\n\t\t\tt.win = null;\n\n\t\t\t// Manual destroy then remove unload handler\n\t\t\tif (!s)\n\t\t\t\ttinymce.removeUnload(t.destroy);\n\t\t},\n\n\t\t// IE has an issue where you can't select/move the caret by clicking outside the body if the document is in standards mode\n\t\t_fixIESelection : function() {\n\t\t\tvar dom = this.dom, doc = dom.doc, body = doc.body, started, startRng, htmlElm;\n\n\t\t\t// Make HTML element unselectable since we are going to handle selection by hand\n\t\t\tdoc.documentElement.unselectable = true;\n\n\t\t\t// Return range from point or null if it failed\n\t\t\tfunction rngFromPoint(x, y) {\n\t\t\t\tvar rng = body.createTextRange();\n\n\t\t\t\ttry {\n\t\t\t\t\trng.moveToPoint(x, y);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// IE sometimes throws and exception, so lets just ignore it\n\t\t\t\t\trng = null;\n\t\t\t\t}\n\n\t\t\t\treturn rng;\n\t\t\t};\n\n\t\t\t// Fires while the selection is changing\n\t\t\tfunction selectionChange(e) {\n\t\t\t\tvar pointRng;\n\n\t\t\t\t// Check if the button is down or not\n\t\t\t\tif (e.button) {\n\t\t\t\t\t// Create range from mouse position\n\t\t\t\t\tpointRng = rngFromPoint(e.x, e.y);\n\n\t\t\t\t\tif (pointRng) {\n\t\t\t\t\t\t// Check if pointRange is before/after selection then change the endPoint\n\t\t\t\t\t\tif (pointRng.compareEndPoints('StartToStart', startRng) > 0)\n\t\t\t\t\t\t\tpointRng.setEndPoint('StartToStart', startRng);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpointRng.setEndPoint('EndToEnd', startRng);\n\n\t\t\t\t\t\tpointRng.select();\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tendSelection();\n\t\t\t}\n\n\t\t\t// Removes listeners\n\t\t\tfunction endSelection() {\n\t\t\t\tvar rng = doc.selection.createRange();\n\n\t\t\t\t// If the range is collapsed then use the last start range\n\t\t\t\tif (startRng && !rng.item && rng.compareEndPoints('StartToEnd', rng) === 0)\n\t\t\t\t\tstartRng.select();\n\n\t\t\t\tdom.unbind(doc, 'mouseup', endSelection);\n\t\t\t\tdom.unbind(doc, 'mousemove', selectionChange);\n\t\t\t\tstartRng = started = 0;\n\t\t\t};\n\n\t\t\t// Detect when user selects outside BODY\n\t\t\tdom.bind(doc, ['mousedown', 'contextmenu'], function(e) {\n\t\t\t\tif (e.target.nodeName === 'HTML') {\n\t\t\t\t\tif (started)\n\t\t\t\t\t\tendSelection();\n\n\t\t\t\t\t// Detect vertical scrollbar, since IE will fire a mousedown on the scrollbar and have target set as HTML\n\t\t\t\t\thtmlElm = doc.documentElement;\n\t\t\t\t\tif (htmlElm.scrollHeight > htmlElm.clientHeight)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tstarted = 1;\n\t\t\t\t\t// Setup start position\n\t\t\t\t\tstartRng = rngFromPoint(e.x, e.y);\n\t\t\t\t\tif (startRng) {\n\t\t\t\t\t\t// Listen for selection change events\n\t\t\t\t\t\tdom.bind(doc, 'mouseup', endSelection);\n\t\t\t\t\t\tdom.bind(doc, 'mousemove', selectionChange);\n\n\t\t\t\t\t\tdom.win.focus();\n\t\t\t\t\t\tstartRng.select();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/dom/RangeUtils.js":"/**\n * Range.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\ttinymce.dom.RangeUtils = function(dom) {\n\t\tvar INVISIBLE_CHAR = '\\uFEFF';\n\n\t\t/**\n\t\t * Walks the specified range like object and executes the callback for each sibling collection it finds.\n\t\t *\n\t\t * @param {Object} rng Range like object.\n\t\t * @param {function} callback Callback function to execute for each sibling collection.\n\t\t */\n\t\tthis.walk = function(rng, callback) {\n\t\t\tvar startContainer = rng.startContainer,\n\t\t\t\tstartOffset = rng.startOffset,\n\t\t\t\tendContainer = rng.endContainer,\n\t\t\t\tendOffset = rng.endOffset,\n\t\t\t\tancestor, startPoint,\n\t\t\t\tendPoint, node, parent, siblings, nodes;\n\n\t\t\t// Handle table cell selection the table plugin enables\n\t\t\t// you to fake select table cells and perform formatting actions on them\n\t\t\tnodes = dom.select('td.mceSelected,th.mceSelected');\n\t\t\tif (nodes.length > 0) {\n\t\t\t\ttinymce.each(nodes, function(node) {\n\t\t\t\t\tcallback([node]);\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Excludes start/end text node if they are out side the range\n\t\t\t *\n\t\t\t * @private\n\t\t\t * @param {Array} nodes Nodes to exclude items from.\n\t\t\t * @return {Array} Array with nodes excluding the start/end container if needed.\n\t\t\t */\n\t\t\tfunction exclude(nodes) {\n\t\t\t\tvar node;\n\n\t\t\t\t// First node is excluded\n\t\t\t\tnode = nodes[0];\n\t\t\t\tif (node.nodeType === 3 && node === startContainer && startOffset >= node.nodeValue.length) {\n\t\t\t\t\tnodes.splice(0, 1);\n\t\t\t\t}\n\n\t\t\t\t// Last node is excluded\n\t\t\t\tnode = nodes[nodes.length - 1];\n\t\t\t\tif (endOffset === 0 && nodes.length > 0 && node === endContainer && node.nodeType === 3) {\n\t\t\t\t\tnodes.splice(nodes.length - 1, 1);\n\t\t\t\t}\n\n\t\t\t\treturn nodes;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Collects siblings\n\t\t\t *\n\t\t\t * @private\n\t\t\t * @param {Node} node Node to collect siblings from.\n\t\t\t * @param {String} name Name of the sibling to check for.\n\t\t\t * @return {Array} Array of collected siblings.\n\t\t\t */\n\t\t\tfunction collectSiblings(node, name, end_node) {\n\t\t\t\tvar siblings = [];\n\n\t\t\t\tfor (; node && node != end_node; node = node[name])\n\t\t\t\t\tsiblings.push(node);\n\n\t\t\t\treturn siblings;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Find an end point this is the node just before the common ancestor root.\n\t\t\t *\n\t\t\t * @private\n\t\t\t * @param {Node} node Node to start at.\n\t\t\t * @param {Node} root Root/ancestor element to stop just before.\n\t\t\t * @return {Node} Node just before the root element.\n\t\t\t */\n\t\t\tfunction findEndPoint(node, root) {\n\t\t\t\tdo {\n\t\t\t\t\tif (node.parentNode == root)\n\t\t\t\t\t\treturn node;\n\n\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t} while(node);\n\t\t\t};\n\n\t\t\tfunction walkBoundary(start_node, end_node, next) {\n\t\t\t\tvar siblingName = next ? 'nextSibling' : 'previousSibling';\n\n\t\t\t\tfor (node = start_node, parent = node.parentNode; node && node != end_node; node = parent) {\n\t\t\t\t\tparent = node.parentNode;\n\t\t\t\t\tsiblings = collectSiblings(node == start_node ? node : node[siblingName], siblingName);\n\n\t\t\t\t\tif (siblings.length) {\n\t\t\t\t\t\tif (!next)\n\t\t\t\t\t\t\tsiblings.reverse();\n\n\t\t\t\t\t\tcallback(exclude(siblings));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// If index based start position then resolve it\n\t\t\tif (startContainer.nodeType == 1 && startContainer.hasChildNodes())\n\t\t\t\tstartContainer = startContainer.childNodes[startOffset];\n\n\t\t\t// If index based end position then resolve it\n\t\t\tif (endContainer.nodeType == 1 && endContainer.hasChildNodes())\n\t\t\t\tendContainer = endContainer.childNodes[Math.min(endOffset - 1, endContainer.childNodes.length - 1)];\n\n\t\t\t// Same container\n\t\t\tif (startContainer == endContainer)\n\t\t\t\treturn callback(exclude([startContainer]));\n\n\t\t\t// Find common ancestor and end points\n\t\t\tancestor = dom.findCommonAncestor(startContainer, endContainer);\n\t\t\t\t\n\t\t\t// Process left side\n\t\t\tfor (node = startContainer; node; node = node.parentNode) {\n\t\t\t\tif (node === endContainer)\n\t\t\t\t\treturn walkBoundary(startContainer, ancestor, true);\n\n\t\t\t\tif (node === ancestor)\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Process right side\n\t\t\tfor (node = endContainer; node; node = node.parentNode) {\n\t\t\t\tif (node === startContainer)\n\t\t\t\t\treturn walkBoundary(endContainer, ancestor);\n\n\t\t\t\tif (node === ancestor)\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Find start/end point\n\t\t\tstartPoint = findEndPoint(startContainer, ancestor) || startContainer;\n\t\t\tendPoint = findEndPoint(endContainer, ancestor) || endContainer;\n\n\t\t\t// Walk left leaf\n\t\t\twalkBoundary(startContainer, startPoint, true);\n\n\t\t\t// Walk the middle from start to end point\n\t\t\tsiblings = collectSiblings(\n\t\t\t\tstartPoint == startContainer ? startPoint : startPoint.nextSibling,\n\t\t\t\t'nextSibling',\n\t\t\t\tendPoint == endContainer ? endPoint.nextSibling : endPoint\n\t\t\t);\n\n\t\t\tif (siblings.length)\n\t\t\t\tcallback(exclude(siblings));\n\n\t\t\t// Walk right leaf\n\t\t\twalkBoundary(endContainer, endPoint);\n\t\t};\n\n\t\t/**\n\t\t * Splits the specified range at it's start/end points.\n\t\t *\n\t\t * @param {Range/RangeObject} rng Range to split.\n\t\t * @return {Object} Range position object.\n\t\t */\n\t\tthis.split = function(rng) {\n\t\t\tvar startContainer = rng.startContainer,\n\t\t\t\tstartOffset = rng.startOffset,\n\t\t\t\tendContainer = rng.endContainer,\n\t\t\t\tendOffset = rng.endOffset;\n\n\t\t\tfunction splitText(node, offset) {\n\t\t\t\treturn node.splitText(offset);\n\t\t\t};\n\n\t\t\t// Handle single text node\n\t\t\tif (startContainer == endContainer && startContainer.nodeType == 3) {\n\t\t\t\tif (startOffset > 0 && startOffset < startContainer.nodeValue.length) {\n\t\t\t\t\tendContainer = splitText(startContainer, startOffset);\n\t\t\t\t\tstartContainer = endContainer.previousSibling;\n\n\t\t\t\t\tif (endOffset > startOffset) {\n\t\t\t\t\t\tendOffset = endOffset - startOffset;\n\t\t\t\t\t\tstartContainer = endContainer = splitText(endContainer, endOffset).previousSibling;\n\t\t\t\t\t\tendOffset = endContainer.nodeValue.length;\n\t\t\t\t\t\tstartOffset = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tendOffset = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Split startContainer text node if needed\n\t\t\t\tif (startContainer.nodeType == 3 && startOffset > 0 && startOffset < startContainer.nodeValue.length) {\n\t\t\t\t\tstartContainer = splitText(startContainer, startOffset);\n\t\t\t\t\tstartOffset = 0;\n\t\t\t\t}\n\n\t\t\t\t// Split endContainer text node if needed\n\t\t\t\tif (endContainer.nodeType == 3 && endOffset > 0 && endOffset < endContainer.nodeValue.length) {\n\t\t\t\t\tendContainer = splitText(endContainer, endOffset).previousSibling;\n\t\t\t\t\tendOffset = endContainer.nodeValue.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstartContainer : startContainer,\n\t\t\t\tstartOffset : startOffset,\n\t\t\t\tendContainer : endContainer,\n\t\t\t\tendOffset : endOffset\n\t\t\t};\n\t\t};\n\n\t};\n\n\t/**\n\t * Compares two ranges and checks if they are equal.\n\t *\n\t * @static\n\t * @param {DOMRange} rng1 First range to compare.\n\t * @param {DOMRange} rng2 First range to compare.\n\t * @return {Boolean} true/false if the ranges are equal.\n\t */\n\ttinymce.dom.RangeUtils.compareRanges = function(rng1, rng2) {\n\t\tif (rng1 && rng2) {\n\t\t\t// Compare native IE ranges\n\t\t\tif (rng1.item || rng1.duplicate) {\n\t\t\t\t// Both are control ranges and the selected element matches\n\t\t\t\tif (rng1.item && rng2.item && rng1.item(0) === rng2.item(0))\n\t\t\t\t\treturn true;\n\n\t\t\t\t// Both are text ranges and the range matches\n\t\t\t\tif (rng1.isEqual && rng2.isEqual && rng2.isEqual(rng1))\n\t\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t// Compare w3c ranges\n\t\t\t\treturn rng1.startContainer == rng2.startContainer && rng1.startOffset == rng2.startOffset;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/dom/DOMUtils.js":"/**\n * DOMUtils.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\t// Shorten names\n\tvar each = tinymce.each,\n\t\tis = tinymce.is,\n\t\tisWebKit = tinymce.isWebKit,\n\t\tisIE = tinymce.isIE,\n\t\tEntities = tinymce.html.Entities,\n\t\tsimpleSelectorRe = /^([a-z0-9],?)+$/i,\n\t\tblockElementsMap = tinymce.html.Schema.blockElementsMap,\n\t\twhiteSpaceRegExp = /^[ \\t\\r\\n]*$/;\n\n\t/**\n\t * Utility class for various DOM manipulation and retrival functions.\n\t *\n\t * @class tinymce.dom.DOMUtils\n\t * @example\n\t * // Add a class to an element by id in the page\n\t * tinymce.DOM.addClass('someid', 'someclass');\n\t *\n\t * // Add a class to an element by id inside the editor\n\t * tinyMCE.activeEditor.dom.addClass('someid', 'someclass');\n\t */\n\ttinymce.create('tinymce.dom.DOMUtils', {\n\t\tdoc : null,\n\t\troot : null,\n\t\tfiles : null,\n\t\tpixelStyles : /^(top|left|bottom|right|width|height|borderWidth)$/,\n\t\tprops : {\n\t\t\t\"for\" : \"htmlFor\",\n\t\t\t\"class\" : \"className\",\n\t\t\tclassName : \"className\",\n\t\t\tchecked : \"checked\",\n\t\t\tdisabled : \"disabled\",\n\t\t\tmaxlength : \"maxLength\",\n\t\t\treadonly : \"readOnly\",\n\t\t\tselected : \"selected\",\n\t\t\tvalue : \"value\",\n\t\t\tid : \"id\",\n\t\t\tname : \"name\",\n\t\t\ttype : \"type\"\n\t\t},\n\n\t\t/**\n\t\t * Constructs a new DOMUtils instance. Consult the Wiki for more details on settings etc for this class.\n\t\t *\n\t\t * @constructor\n\t\t * @method DOMUtils\n\t\t * @param {Document} d Document reference to bind the utility class to.\n\t\t * @param {settings} s Optional settings collection.\n\t\t */\n\t\tDOMUtils : function(d, s) {\n\t\t\tvar t = this, globalStyle, name;\n\n\t\t\tt.doc = d;\n\t\t\tt.win = window;\n\t\t\tt.files = {};\n\t\t\tt.cssFlicker = false;\n\t\t\tt.counter = 0;\n\t\t\tt.stdMode = !tinymce.isIE || d.documentMode >= 8;\n\t\t\tt.boxModel = !tinymce.isIE || d.compatMode == \"CSS1Compat\" || t.stdMode;\n\t\t\tt.hasOuterHTML = \"outerHTML\" in d.createElement(\"a\");\n\n\t\t\tt.settings = s = tinymce.extend({\n\t\t\t\tkeep_values : false,\n\t\t\t\thex_colors : 1\n\t\t\t}, s);\n\t\t\t\n\t\t\tt.schema = s.schema;\n\t\t\tt.styles = new tinymce.html.Styles({\n\t\t\t\turl_converter : s.url_converter,\n\t\t\t\turl_converter_scope : s.url_converter_scope\n\t\t\t}, s.schema);\n\n\t\t\t// Fix IE6SP2 flicker and check it failed for pre SP2\n\t\t\tif (tinymce.isIE6) {\n\t\t\t\ttry {\n\t\t\t\t\td.execCommand('BackgroundImageCache', false, true);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tt.cssFlicker = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isIE && s.schema) {\n\t\t\t\t// Add missing HTML 4/5 elements to IE\n\t\t\t\t('abbr article aside audio canvas ' +\n\t\t\t\t'details figcaption figure footer ' +\n\t\t\t\t'header hgroup mark menu meter nav ' +\n\t\t\t\t'output progress section summary ' +\n\t\t\t\t'time video').replace(/\\w+/g, function(name) {\n\t\t\t\t\td.createElement(name);\n\t\t\t\t});\n\n\t\t\t\t// Create all custom elements\n\t\t\t\tfor (name in s.schema.getCustomElements()) {\n\t\t\t\t\td.createElement(name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttinymce.addUnload(t.destroy, t);\n\t\t},\n\n\t\t/**\n\t\t * Returns the root node of the document this is normally the body but might be a DIV. Parents like getParent will not\n\t\t * go above the point of this root node.\n\t\t *\n\t\t * @method getRoot\n\t\t * @return {Element} Root element for the utility class.\n\t\t */\n\t\tgetRoot : function() {\n\t\t\tvar t = this, s = t.settings;\n\n\t\t\treturn (s && t.get(s.root_element)) || t.doc.body;\n\t\t},\n\n\t\t/**\n\t\t * Returns the viewport of the window.\n\t\t *\n\t\t * @method getViewPort\n\t\t * @param {Window} w Optional window to get viewport of.\n\t\t * @return {Object} Viewport object with fields x, y, w and h.\n\t\t */\n\t\tgetViewPort : function(w) {\n\t\t\tvar d, b;\n\n\t\t\tw = !w ? this.win : w;\n\t\t\td = w.document;\n\t\t\tb = this.boxModel ? d.documentElement : d.body;\n\n\t\t\t// Returns viewport size excluding scrollbars\n\t\t\treturn {\n\t\t\t\tx : w.pageXOffset || b.scrollLeft,\n\t\t\t\ty : w.pageYOffset || b.scrollTop,\n\t\t\t\tw : w.innerWidth || b.clientWidth,\n\t\t\t\th : w.innerHeight || b.clientHeight\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the rectangle for a specific element.\n\t\t *\n\t\t * @method getRect\n\t\t * @param {Element/String} e Element object or element ID to get rectange from.\n\t\t * @return {object} Rectange for specified element object with x, y, w, h fields.\n\t\t */\n\t\tgetRect : function(e) {\n\t\t\tvar p, t = this, sr;\n\n\t\t\te = t.get(e);\n\t\t\tp = t.getPos(e);\n\t\t\tsr = t.getSize(e);\n\n\t\t\treturn {\n\t\t\t\tx : p.x,\n\t\t\t\ty : p.y,\n\t\t\t\tw : sr.w,\n\t\t\t\th : sr.h\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the size dimensions of the specified element.\n\t\t *\n\t\t * @method getSize\n\t\t * @param {Element/String} e Element object or element ID to get rectange from.\n\t\t * @return {object} Rectange for specified element object with w, h fields.\n\t\t */\n\t\tgetSize : function(e) {\n\t\t\tvar t = this, w, h;\n\n\t\t\te = t.get(e);\n\t\t\tw = t.getStyle(e, 'width');\n\t\t\th = t.getStyle(e, 'height');\n\n\t\t\t// Non pixel value, then force offset/clientWidth\n\t\t\tif (w.indexOf('px') === -1)\n\t\t\t\tw = 0;\n\n\t\t\t// Non pixel value, then force offset/clientWidth\n\t\t\tif (h.indexOf('px') === -1)\n\t\t\t\th = 0;\n\n\t\t\treturn {\n\t\t\t\tw : parseInt(w) || e.offsetWidth || e.clientWidth,\n\t\t\t\th : parseInt(h) || e.offsetHeight || e.clientHeight\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns a node by the specified selector function. This function will\n\t\t * loop through all parent nodes and call the specified function for each node.\n\t\t * If the function then returns true indicating that it has found what it was looking for, the loop execution will then end\n\t\t * and the node it found will be returned.\n\t\t *\n\t\t * @method getParent\n\t\t * @param {Node/String} n DOM node to search parents on or ID string.\n\t\t * @param {function} f Selection function to execute on each node or CSS pattern.\n\t\t * @param {Node} r Optional root element, never go below this point.\n\t\t * @return {Node} DOM Node or null if it wasn't found.\n\t\t */\n\t\tgetParent : function(n, f, r) {\n\t\t\treturn this.getParents(n, f, r, false);\n\t\t},\n\n\t\t/**\n\t\t * Returns a node list of all parents matching the specified selector function or pattern.\n\t\t * If the function then returns true indicating that it has found what it was looking for and that node will be collected.\n\t\t *\n\t\t * @method getParents\n\t\t * @param {Node/String} n DOM node to search parents on or ID string.\n\t\t * @param {function} f Selection function to execute on each node or CSS pattern.\n\t\t * @param {Node} r Optional root element, never go below this point.\n\t\t * @return {Array} Array of nodes or null if it wasn't found.\n\t\t */\n\t\tgetParents : function(n, f, r, c) {\n\t\t\tvar t = this, na, se = t.settings, o = [];\n\n\t\t\tn = t.get(n);\n\t\t\tc = c === undefined;\n\n\t\t\tif (se.strict_root)\n\t\t\t\tr = r || t.getRoot();\n\n\t\t\t// Wrap node name as func\n\t\t\tif (is(f, 'string')) {\n\t\t\t\tna = f;\n\n\t\t\t\tif (f === '*') {\n\t\t\t\t\tf = function(n) {return n.nodeType == 1;};\n\t\t\t\t} else {\n\t\t\t\t\tf = function(n) {\n\t\t\t\t\t\treturn t.is(n, na);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (n) {\n\t\t\t\tif (n == r || !n.nodeType || n.nodeType === 9)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!f || f(n)) {\n\t\t\t\t\tif (c)\n\t\t\t\t\t\to.push(n);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn n;\n\t\t\t\t}\n\n\t\t\t\tn = n.parentNode;\n\t\t\t}\n\n\t\t\treturn c ? o : null;\n\t\t},\n\n\t\t/**\n\t\t * Returns the specified element by ID or the input element if it isn't a string.\n\t\t *\n\t\t * @method get\n\t\t * @param {String/Element} n Element id to look for or element to just pass though.\n\t\t * @return {Element} Element matching the specified id or null if it wasn't found.\n\t\t */\n\t\tget : function(e) {\n\t\t\tvar n;\n\n\t\t\tif (e && this.doc && typeof(e) == 'string') {\n\t\t\t\tn = e;\n\t\t\t\te = this.doc.getElementById(e);\n\n\t\t\t\t// IE and Opera returns meta elements when they match the specified input ID, but getElementsByName seems to do the trick\n\t\t\t\tif (e && e.id !== n)\n\t\t\t\t\treturn this.doc.getElementsByName(n)[1];\n\t\t\t}\n\n\t\t\treturn e;\n\t\t},\n\n\t\t/**\n\t\t * Returns the next node that matches selector or function\n\t\t *\n\t\t * @method getNext\n\t\t * @param {Node} node Node to find siblings from.\n\t\t * @param {String/function} selector Selector CSS expression or function.\n\t\t * @return {Node} Next node item matching the selector or null if it wasn't found.\n\t\t */\n\t\tgetNext : function(node, selector) {\n\t\t\treturn this._findSib(node, selector, 'nextSibling');\n\t\t},\n\n\t\t/**\n\t\t * Returns the previous node that matches selector or function\n\t\t *\n\t\t * @method getPrev\n\t\t * @param {Node} node Node to find siblings from.\n\t\t * @param {String/function} selector Selector CSS expression or function.\n\t\t * @return {Node} Previous node item matching the selector or null if it wasn't found.\n\t\t */\n\t\tgetPrev : function(node, selector) {\n\t\t\treturn this._findSib(node, selector, 'previousSibling');\n\t\t},\n\n\t\t// #ifndef jquery\n\n\t\t/**\n\t\t * Selects specific elements by a CSS level 3 pattern. For example \"div#a1 p.test\".\n\t\t * This function is optimized for the most common patterns needed in TinyMCE but it also performes good enough\n\t\t * on more complex patterns.\n\t\t *\n\t\t * @method select\n\t\t * @param {String} p CSS level 1 pattern to select/find elements by.\n\t\t * @param {Object} s Optional root element/scope element to search in.\n\t\t * @return {Array} Array with all matched elements.\n\t\t * @example\n\t\t * // Adds a class to all paragraphs in the currently active editor\n\t\t * tinyMCE.activeEditor.dom.addClass(tinyMCE.activeEditor.dom.select('p'), 'someclass');\n\t\t * \n\t\t * // Adds a class to all spans that has the test class in the currently active editor\n\t\t * tinyMCE.activeEditor.dom.addClass(tinyMCE.activeEditor.dom.select('span.test'), 'someclass')\n\t\t */\n\t\tselect : function(pa, s) {\n\t\t\tvar t = this;\n\n\t\t\treturn tinymce.dom.Sizzle(pa, t.get(s) || t.get(t.settings.root_element) || t.doc, []);\n\t\t},\n\n\t\t/**\n\t\t * Returns true/false if the specified element matches the specified css pattern.\n\t\t *\n\t\t * @method is\n\t\t * @param {Node/NodeList} n DOM node to match or an array of nodes to match.\n\t\t * @param {String} selector CSS pattern to match the element agains.\n\t\t */\n\t\tis : function(n, selector) {\n\t\t\tvar i;\n\n\t\t\t// If it isn't an array then try to do some simple selectors instead of Sizzle for to boost performance\n\t\t\tif (n.length === undefined) {\n\t\t\t\t// Simple all selector\n\t\t\t\tif (selector === '*')\n\t\t\t\t\treturn n.nodeType == 1;\n\n\t\t\t\t// Simple selector just elements\n\t\t\t\tif (simpleSelectorRe.test(selector)) {\n\t\t\t\t\tselector = selector.toLowerCase().split(/,/);\n\t\t\t\t\tn = n.nodeName.toLowerCase();\n\n\t\t\t\t\tfor (i = selector.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (selector[i] == n)\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tinymce.dom.Sizzle.matches(selector, n.nodeType ? [n] : n).length > 0;\n\t\t},\n\n\t\t// #endif\n\n\t\t/**\n\t\t * Adds the specified element to another element or elements.\n\t\t *\n\t\t * @method add\n\t\t * @param {String/Element/Array} Element id string, DOM node element or array of id's or elements to add to.\n\t\t * @param {String/Element} n Name of new element to add or existing element to add.\n\t\t * @param {Object} a Optional object collection with arguments to add to the new element(s).\n\t\t * @param {String} h Optional inner HTML contents to add for each element.\n\t\t * @param {Boolean} c Optional internal state to indicate if it should create or add.\n\t\t * @return {Element/Array} Element that got created or array with elements if multiple elements where passed.\n\t\t * @example\n\t\t * // Adds a new paragraph to the end of the active editor\n\t\t * tinyMCE.activeEditor.dom.add(tinyMCE.activeEditor.getBody(), 'p', {title : 'my title'}, 'Some content');\n\t\t */\n\t\tadd : function(p, n, a, h, c) {\n\t\t\tvar t = this;\n\n\t\t\treturn this.run(p, function(p) {\n\t\t\t\tvar e, k;\n\n\t\t\t\te = is(n, 'string') ? t.doc.createElement(n) : n;\n\t\t\t\tt.setAttribs(e, a);\n\n\t\t\t\tif (h) {\n\t\t\t\t\tif (h.nodeType)\n\t\t\t\t\t\te.appendChild(h);\n\t\t\t\t\telse\n\t\t\t\t\t\tt.setHTML(e, h);\n\t\t\t\t}\n\n\t\t\t\treturn !c ? p.appendChild(e) : e;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Creates a new element.\n\t\t *\n\t\t * @method create\n\t\t * @param {String} n Name of new element.\n\t\t * @param {Object} a Optional object name/value collection with element attributes.\n\t\t * @param {String} h Optional HTML string to set as inner HTML of the element.\n\t\t * @return {Element} HTML DOM node element that got created.\n\t\t * @example\n\t\t * // Adds an element where the caret/selection is in the active editor\n\t\t * var el = tinyMCE.activeEditor.dom.create('div', {id : 'test', 'class' : 'myclass'}, 'some content');\n\t\t * tinyMCE.activeEditor.selection.setNode(el);\n\t\t */\n\t\tcreate : function(n, a, h) {\n\t\t\treturn this.add(this.doc.createElement(n), n, a, h, 1);\n\t\t},\n\n\t\t/**\n\t\t * Create HTML string for element. The element will be closed unless an empty inner HTML string is passed.\n\t\t *\n\t\t * @method createHTML\n\t\t * @param {String} n Name of new element.\n\t\t * @param {Object} a Optional object name/value collection with element attributes.\n\t\t * @param {String} h Optional HTML string to set as inner HTML of the element.\n\t\t * @return {String} String with new HTML element like for example: <a href=\"#\">test</a>.\n\t\t * @example\n\t\t * // Creates a html chunk and inserts it at the current selection/caret location\n\t\t * tinyMCE.activeEditor.selection.setContent(tinyMCE.activeEditor.dom.createHTML('a', {href : 'test.html'}, 'some line'));\n\t\t */\n\t\tcreateHTML : function(n, a, h) {\n\t\t\tvar o = '', t = this, k;\n\n\t\t\to += '<' + n;\n\n\t\t\tfor (k in a) {\n\t\t\t\tif (a.hasOwnProperty(k))\n\t\t\t\t\to += ' ' + k + '=\"' + t.encode(a[k]) + '\"';\n\t\t\t}\n\n\t\t\t// A call to tinymce.is doesn't work for some odd reason on IE9 possible bug inside their JS runtime\n\t\t\tif (typeof(h) != \"undefined\")\n\t\t\t\treturn o + '>' + h + '</' + n + '>';\n\n\t\t\treturn o + ' />';\n\t\t},\n\n\t\t/**\n\t\t * Removes/deletes the specified element(s) from the DOM.\n\t\t *\n\t\t * @method remove\n\t\t * @param {String/Element/Array} node ID of element or DOM element object or array containing multiple elements/ids.\n\t\t * @param {Boolean} keep_children Optional state to keep children or not. If set to true all children will be placed at the location of the removed element.\n\t\t * @return {Element/Array} HTML DOM element that got removed or array of elements depending on input.\n\t\t * @example\n\t\t * // Removes all paragraphs in the active editor\n\t\t * tinyMCE.activeEditor.dom.remove(tinyMCE.activeEditor.dom.select('p'));\n\t\t * \n\t\t * // Removes a element by id in the document\n\t\t * tinyMCE.DOM.remove('mydiv');\n\t\t */\n\t\tremove : function(node, keep_children) {\n\t\t\treturn this.run(node, function(node) {\n\t\t\t\tvar child, parent = node.parentNode;\n\n\t\t\t\tif (!parent)\n\t\t\t\t\treturn null;\n\n\t\t\t\tif (keep_children) {\n\t\t\t\t\twhile (child = node.firstChild) {\n\t\t\t\t\t\t// IE 8 will crash if you don't remove completely empty text nodes\n\t\t\t\t\t\tif (!tinymce.isIE || child.nodeType !== 3 || child.nodeValue)\n\t\t\t\t\t\t\tparent.insertBefore(child, node);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnode.removeChild(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn parent.removeChild(node);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Sets the CSS style value on a HTML element. The name can be a camelcase string\n\t\t * or the CSS style name like background-color.\n\t\t *\n\t\t * @method setStyle\n\t\t * @param {String/Element/Array} n HTML element/Element ID or Array of elements/ids to set CSS style value on.\n\t\t * @param {String} na Name of the style value to set.\n\t\t * @param {String} v Value to set on the style.\n\t\t * @example\n\t\t * // Sets a style value on all paragraphs in the currently active editor\n\t\t * tinyMCE.activeEditor.dom.setStyle(tinyMCE.activeEditor.dom.select('p'), 'background-color', 'red');\n\t\t * \n\t\t * // Sets a style value to an element by id in the current document\n\t\t * tinyMCE.DOM.setStyle('mydiv', 'background-color', 'red');\n\t\t */\n\t\tsetStyle : function(n, na, v) {\n\t\t\tvar t = this;\n\n\t\t\treturn t.run(n, function(e) {\n\t\t\t\tvar s, i;\n\n\t\t\t\ts = e.style;\n\n\t\t\t\t// Camelcase it, if needed\n\t\t\t\tna = na.replace(/-(\\D)/g, function(a, b){\n\t\t\t\t\treturn b.toUpperCase();\n\t\t\t\t});\n\n\t\t\t\t// Default px suffix on these\n\t\t\t\tif (t.pixelStyles.test(na) && (tinymce.is(v, 'number') || /^[\\-0-9\\.]+$/.test(v)))\n\t\t\t\t\tv += 'px';\n\n\t\t\t\tswitch (na) {\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\t// IE specific opacity\n\t\t\t\t\t\tif (isIE) {\n\t\t\t\t\t\t\ts.filter = v === '' ? '' : \"alpha(opacity=\" + (v * 100) + \")\";\n\n\t\t\t\t\t\t\tif (!n.currentStyle || !n.currentStyle.hasLayout)\n\t\t\t\t\t\t\t\ts.display = 'inline-block';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Fix for older browsers\n\t\t\t\t\t\ts[na] = s['-moz-opacity'] = s['-khtml-opacity'] = v || '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tisIE ? s.styleFloat = v : s.cssFloat = v;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ts[na] = v || '';\n\t\t\t\t}\n\n\t\t\t\t// Force update of the style data\n\t\t\t\tif (t.settings.update_styles)\n\t\t\t\t\tt.setAttrib(e, 'data-mce-style');\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Returns the current style or runtime/computed value of a element.\n\t\t *\n\t\t * @method getStyle\n\t\t * @param {String/Element} n HTML element or element id string to get style from.\n\t\t * @param {String} na Style name to return.\n\t\t * @param {Boolean} c Computed style.\n\t\t * @return {String} Current style or computed style value of a element.\n\t\t */\n\t\tgetStyle : function(n, na, c) {\n\t\t\tn = this.get(n);\n\n\t\t\tif (!n)\n\t\t\t\treturn;\n\n\t\t\t// Gecko\n\t\t\tif (this.doc.defaultView && c) {\n\t\t\t\t// Remove camelcase\n\t\t\t\tna = na.replace(/[A-Z]/g, function(a){\n\t\t\t\t\treturn '-' + a;\n\t\t\t\t});\n\n\t\t\t\ttry {\n\t\t\t\t\treturn this.doc.defaultView.getComputedStyle(n, null).getPropertyValue(na);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// Old safari might fail\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Camelcase it, if needed\n\t\t\tna = na.replace(/-(\\D)/g, function(a, b){\n\t\t\t\treturn b.toUpperCase();\n\t\t\t});\n\n\t\t\tif (na == 'float')\n\t\t\t\tna = isIE ? 'styleFloat' : 'cssFloat';\n\n\t\t\t// IE & Opera\n\t\t\tif (n.currentStyle && c)\n\t\t\t\treturn n.currentStyle[na];\n\n\t\t\treturn n.style ? n.style[na] : undefined;\n\t\t},\n\n\t\t/**\n\t\t * Sets multiple styles on the specified element(s).\n\t\t *\n\t\t * @method setStyles\n\t\t * @param {Element/String/Array} e DOM element, element id string or array of elements/ids to set styles on.\n\t\t * @param {Object} o Name/Value collection of style items to add to the element(s).\n\t\t * @example\n\t\t * // Sets styles on all paragraphs in the currently active editor\n\t\t * tinyMCE.activeEditor.dom.setStyles(tinyMCE.activeEditor.dom.select('p'), {'background-color' : 'red', 'color' : 'green'});\n\t\t * \n\t\t * // Sets styles to an element by id in the current document\n\t\t * tinyMCE.DOM.setStyles('mydiv', {'background-color' : 'red', 'color' : 'green'});\n\t\t */\n\t\tsetStyles : function(e, o) {\n\t\t\tvar t = this, s = t.settings, ol;\n\n\t\t\tol = s.update_styles;\n\t\t\ts.update_styles = 0;\n\n\t\t\teach(o, function(v, n) {\n\t\t\t\tt.setStyle(e, n, v);\n\t\t\t});\n\n\t\t\t// Update style info\n\t\t\ts.update_styles = ol;\n\t\t\tif (s.update_styles)\n\t\t\t\tt.setAttrib(e, s.cssText);\n\t\t},\n\n\t\t/**\n\t\t * Removes all attributes from an element or elements.\n\t\t * \n\t\t * @param {Element/String/Array} e DOM element, element id string or array of elements/ids to remove attributes from.\n\t\t */\n\t\tremoveAllAttribs: function(e) {\n\t\t\treturn this.run(e, function(e) {\n\t\t\t\tvar i, attrs = e.attributes;\n\t\t\t\tfor (i = attrs.length - 1; i >= 0; i--) {\n\t\t\t\t\te.removeAttributeNode(attrs.item(i));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Sets the specified attributes value of a element or elements.\n\t\t *\n\t\t * @method setAttrib\n\t\t * @param {Element/String/Array} e DOM element, element id string or array of elements/ids to set attribute on.\n\t\t * @param {String} n Name of attribute to set.\n\t\t * @param {String} v Value to set on the attribute of this value is falsy like null 0 or '' it will remove the attribute instead.\n\t\t * @example\n\t\t * // Sets an attribute to all paragraphs in the active editor\n\t\t * tinyMCE.activeEditor.dom.setAttrib(tinyMCE.activeEditor.dom.select('p'), 'class', 'myclass');\n\t\t * \n\t\t * // Sets an attribute to a specific element in the current page\n\t\t * tinyMCE.dom.setAttrib('mydiv', 'class', 'myclass');\n\t\t */\n\t\tsetAttrib : function(e, n, v) {\n\t\t\tvar t = this;\n\n\t\t\t// Whats the point\n\t\t\tif (!e || !n)\n\t\t\t\treturn;\n\n\t\t\t// Strict XML mode\n\t\t\tif (t.settings.strict)\n\t\t\t\tn = n.toLowerCase();\n\n\t\t\treturn this.run(e, function(e) {\n\t\t\t\tvar s = t.settings;\n\t\t\t\tif (v !== null) {\n\t\t\t\t\tswitch (n) {\n\t\t\t\t\t\tcase \"style\":\n\t\t\t\t\t\t\tif (!is(v, 'string')) {\n\t\t\t\t\t\t\t\teach(v, function(v, n) {\n\t\t\t\t\t\t\t\t\tt.setStyle(e, n, v);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// No mce_style for elements with these since they might get resized by the user\n\t\t\t\t\t\t\tif (s.keep_values) {\n\t\t\t\t\t\t\t\tif (v && !t._isRes(v))\n\t\t\t\t\t\t\t\t\te.setAttribute('data-mce-style', v, 2);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\te.removeAttribute('data-mce-style', 2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\te.style.cssText = v;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"class\":\n\t\t\t\t\t\t\te.className = v || ''; // Fix IE null bug\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"src\":\n\t\t\t\t\t\tcase \"href\":\n\t\t\t\t\t\t\tif (s.keep_values) {\n\t\t\t\t\t\t\t\tif (s.url_converter)\n\t\t\t\t\t\t\t\t\tv = s.url_converter.call(s.url_converter_scope || t, v, n, e);\n\n\t\t\t\t\t\t\t\tt.setAttrib(e, 'data-mce-' + n, v, 2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"shape\":\n\t\t\t\t\t\t\te.setAttribute('data-mce-style', v);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (is(v) && v !== null && v.length !== 0)\n\t\t\t\t\te.setAttribute(n, '' + v, 2);\n\t\t\t\telse\n\t\t\t\t\te.removeAttribute(n, 2);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Sets the specified attributes of a element or elements.\n\t\t *\n\t\t * @method setAttribs\n\t\t * @param {Element/String/Array} e DOM element, element id string or array of elements/ids to set attributes on.\n\t\t * @param {Object} o Name/Value collection of attribute items to add to the element(s).\n\t\t * @example\n\t\t * // Sets some attributes to all paragraphs in the active editor\n\t\t * tinyMCE.activeEditor.dom.setAttribs(tinyMCE.activeEditor.dom.select('p'), {'class' : 'myclass', title : 'some title'});\n\t\t * \n\t\t * // Sets some attributes to a specific element in the current page\n\t\t * tinyMCE.DOM.setAttribs('mydiv', {'class' : 'myclass', title : 'some title'});\n\t\t */\n\t\tsetAttribs : function(e, o) {\n\t\t\tvar t = this;\n\n\t\t\treturn this.run(e, function(e) {\n\t\t\t\teach(o, function(v, n) {\n\t\t\t\t\tt.setAttrib(e, n, v);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Returns the specified attribute by name.\n\t\t *\n\t\t * @method getAttrib\n\t\t * @param {String/Element} e Element string id or DOM element to get attribute from.\n\t\t * @param {String} n Name of attribute to get.\n\t\t * @param {String} dv Optional default value to return if the attribute didn't exist.\n\t\t * @return {String} Attribute value string, default value or null if the attribute wasn't found.\n\t\t */\n\t\tgetAttrib : function(e, n, dv) {\n\t\t\tvar v, t = this, undef;\n\n\t\t\te = t.get(e);\n\n\t\t\tif (!e || e.nodeType !== 1)\n\t\t\t\treturn dv === undef ? false : dv;\n\n\t\t\tif (!is(dv))\n\t\t\t\tdv = '';\n\n\t\t\t// Try the mce variant for these\n\t\t\tif (/^(src|href|style|coords|shape)$/.test(n)) {\n\t\t\t\tv = e.getAttribute(\"data-mce-\" + n);\n\n\t\t\t\tif (v)\n\t\t\t\t\treturn v;\n\t\t\t}\n\n\t\t\tif (isIE && t.props[n]) {\n\t\t\t\tv = e[t.props[n]];\n\t\t\t\tv = v && v.nodeValue ? v.nodeValue : v;\n\t\t\t}\n\n\t\t\tif (!v)\n\t\t\t\tv = e.getAttribute(n, 2);\n\n\t\t\t// Check boolean attribs\n\t\t\tif (/^(checked|compact|declare|defer|disabled|ismap|multiple|nohref|noshade|nowrap|readonly|selected)$/.test(n)) {\n\t\t\t\tif (e[t.props[n]] === true && v === '')\n\t\t\t\t\treturn n;\n\n\t\t\t\treturn v ? n : '';\n\t\t\t}\n\n\t\t\t// Inner input elements will override attributes on form elements\n\t\t\tif (e.nodeName === \"FORM\" && e.getAttributeNode(n))\n\t\t\t\treturn e.getAttributeNode(n).nodeValue;\n\n\t\t\tif (n === 'style') {\n\t\t\t\tv = v || e.style.cssText;\n\n\t\t\t\tif (v) {\n\t\t\t\t\tv = t.serializeStyle(t.parseStyle(v), e.nodeName);\n\n\t\t\t\t\tif (t.settings.keep_values && !t._isRes(v))\n\t\t\t\t\t\te.setAttribute('data-mce-style', v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove Apple and WebKit stuff\n\t\t\tif (isWebKit && n === \"class\" && v)\n\t\t\t\tv = v.replace(/(apple|webkit)\\-[a-z\\-]+/gi, '');\n\n\t\t\t// Handle IE issues\n\t\t\tif (isIE) {\n\t\t\t\tswitch (n) {\n\t\t\t\t\tcase 'rowspan':\n\t\t\t\t\tcase 'colspan':\n\t\t\t\t\t\t// IE returns 1 as default value\n\t\t\t\t\t\tif (v === 1)\n\t\t\t\t\t\t\tv = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'size':\n\t\t\t\t\t\t// IE returns +0 as default value for size\n\t\t\t\t\t\tif (v === '+0' || v === 20 || v === 0)\n\t\t\t\t\t\t\tv = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'width':\n\t\t\t\t\tcase 'height':\n\t\t\t\t\tcase 'vspace':\n\t\t\t\t\tcase 'checked':\n\t\t\t\t\tcase 'disabled':\n\t\t\t\t\tcase 'readonly':\n\t\t\t\t\t\tif (v === 0)\n\t\t\t\t\t\t\tv = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hspace':\n\t\t\t\t\t\t// IE returns -1 as default value\n\t\t\t\t\t\tif (v === -1)\n\t\t\t\t\t\t\tv = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'maxlength':\n\t\t\t\t\tcase 'tabindex':\n\t\t\t\t\t\t// IE returns default value\n\t\t\t\t\t\tif (v === 32768 || v === 2147483647 || v === '32768')\n\t\t\t\t\t\t\tv = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'multiple':\n\t\t\t\t\tcase 'compact':\n\t\t\t\t\tcase 'noshade':\n\t\t\t\t\tcase 'nowrap':\n\t\t\t\t\t\tif (v === 65535)\n\t\t\t\t\t\t\treturn n;\n\n\t\t\t\t\t\treturn dv;\n\n\t\t\t\t\tcase 'shape':\n\t\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// IE has odd anonymous function for event attributes\n\t\t\t\t\t\tif (n.indexOf('on') === 0 && v)\n\t\t\t\t\t\t\tv = tinymce._replace(/^function\\s+\\w+\\(\\)\\s+\\{\\s+(.*)\\s+\\}$/, '$1', '' + v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (v !== undef && v !== null && v !== '') ? '' + v : dv;\n\t\t},\n\n\t\t/**\n\t\t * Returns the absolute x, y position of a node. The position will be returned in a object with x, y fields.\n\t\t *\n\t\t * @method getPos\n\t\t * @param {Element/String} n HTML element or element id to get x, y position from.\n\t\t * @param {Element} ro Optional root element to stop calculations at.\n\t\t * @return {object} Absolute position of the specified element object with x, y fields.\n\t\t */\n\t\tgetPos : function(n, ro) {\n\t\t\tvar t = this, x = 0, y = 0, e, d = t.doc, r;\n\n\t\t\tn = t.get(n);\n\t\t\tro = ro || d.body;\n\n\t\t\tif (n) {\n\t\t\t\t// Use getBoundingClientRect if it exists since it's faster than looping offset nodes\n\t\t\t\tif (n.getBoundingClientRect) {\n\t\t\t\t\tn = n.getBoundingClientRect();\n\t\t\t\t\te = t.boxModel ? d.documentElement : d.body;\n\n\t\t\t\t\t// Add scroll offsets from documentElement or body since IE with the wrong box model will use d.body and so do WebKit\n\t\t\t\t\t// Also remove the body/documentelement clientTop/clientLeft on IE 6, 7 since they offset the position\n\t\t\t\t\tx = n.left + (d.documentElement.scrollLeft || d.body.scrollLeft) - e.clientTop;\n\t\t\t\t\ty = n.top + (d.documentElement.scrollTop || d.body.scrollTop) - e.clientLeft;\n\n\t\t\t\t\treturn {x : x, y : y};\n\t\t\t\t}\n\n\t\t\t\tr = n;\n\t\t\t\twhile (r && r != ro && r.nodeType) {\n\t\t\t\t\tx += r.offsetLeft || 0;\n\t\t\t\t\ty += r.offsetTop || 0;\n\t\t\t\t\tr = r.offsetParent;\n\t\t\t\t}\n\n\t\t\t\tr = n.parentNode;\n\t\t\t\twhile (r && r != ro && r.nodeType) {\n\t\t\t\t\tx -= r.scrollLeft || 0;\n\t\t\t\t\ty -= r.scrollTop || 0;\n\t\t\t\t\tr = r.parentNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {x : x, y : y};\n\t\t},\n\n\t\t/**\n\t\t * Parses the specified style value into an object collection. This parser will also\n\t\t * merge and remove any redundant items that browsers might have added. It will also convert non hex\n\t\t * colors to hex values. Urls inside the styles will also be converted to absolute/relative based on settings.\n\t\t *\n\t\t * @method parseStyle\n\t\t * @param {String} st Style value to parse for example: border:1px solid red;.\n\t\t * @return {Object} Object representation of that style like {border : '1px solid red'}\n\t\t */\n\t\tparseStyle : function(st) {\n\t\t\treturn this.styles.parse(st);\n\t\t},\n\n\t\t/**\n\t\t * Serializes the specified style object into a string.\n\t\t *\n\t\t * @method serializeStyle\n\t\t * @param {Object} o Object to serialize as string for example: {border : '1px solid red'}\n\t\t * @param {String} name Optional element name.\n\t\t * @return {String} String representation of the style object for example: border: 1px solid red.\n\t\t */\n\t\tserializeStyle : function(o, name) {\n\t\t\treturn this.styles.serialize(o, name);\n\t\t},\n\n\t\t/**\n\t\t * Imports/loads the specified CSS file into the document bound to the class.\n\t\t *\n\t\t * @method loadCSS\n\t\t * @param {String} u URL to CSS file to load.\n\t\t * @example\n\t\t * // Loads a CSS file dynamically into the current document\n\t\t * tinymce.DOM.loadCSS('somepath/some.css');\n\t\t * \n\t\t * // Loads a CSS file into the currently active editor instance\n\t\t * tinyMCE.activeEditor.dom.loadCSS('somepath/some.css');\n\t\t * \n\t\t * // Loads a CSS file into an editor instance by id\n\t\t * tinyMCE.get('someid').dom.loadCSS('somepath/some.css');\n\t\t * \n\t\t * // Loads multiple CSS files into the current document\n\t\t * tinymce.DOM.loadCSS('somepath/some.css,somepath/someother.css');\n\t\t */\n\t\tloadCSS : function(u) {\n\t\t\tvar t = this, d = t.doc, head;\n\n\t\t\tif (!u)\n\t\t\t\tu = '';\n\n\t\t\thead = t.select('head')[0];\n\n\t\t\teach(u.split(','), function(u) {\n\t\t\t\tvar link;\n\n\t\t\t\tif (t.files[u])\n\t\t\t\t\treturn;\n\n\t\t\t\tt.files[u] = true;\n\t\t\t\tlink = t.create('link', {rel : 'stylesheet', href : tinymce._addVer(u)});\n\n\t\t\t\t// IE 8 has a bug where dynamically loading stylesheets would produce a 1 item remaining bug\n\t\t\t\t// This fix seems to resolve that issue by realcing the document ones a stylesheet finishes loading\n\t\t\t\t// It's ugly but it seems to work fine.\n\t\t\t\tif (isIE && d.documentMode && d.recalc) {\n\t\t\t\t\tlink.onload = function() {\n\t\t\t\t\t\tif (d.recalc)\n\t\t\t\t\t\t\td.recalc();\n\n\t\t\t\t\t\tlink.onload = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\thead.appendChild(link);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Adds a class to the specified element or elements.\n\t\t *\n\t\t * @method addClass\n\t\t * @param {String/Element/Array} Element ID string or DOM element or array with elements or IDs.\n\t\t * @param {String} c Class name to add to each element.\n\t\t * @return {String/Array} String with new class value or array with new class values for all elements.\n\t\t * @example\n\t\t * // Adds a class to all paragraphs in the active editor\n\t\t * tinyMCE.activeEditor.dom.addClass(tinyMCE.activeEditor.dom.select('p'), 'myclass');\n\t\t * \n\t\t * // Adds a class to a specific element in the current page\n\t\t * tinyMCE.DOM.addClass('mydiv', 'myclass');\n\t\t */\n\t\taddClass : function(e, c) {\n\t\t\treturn this.run(e, function(e) {\n\t\t\t\tvar o;\n\n\t\t\t\tif (!c)\n\t\t\t\t\treturn 0;\n\n\t\t\t\tif (this.hasClass(e, c))\n\t\t\t\t\treturn e.className;\n\n\t\t\t\to = this.removeClass(e, c);\n\n\t\t\t\treturn e.className = (o != '' ? (o + ' ') : '') + c;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Removes a class from the specified element or elements.\n\t\t *\n\t\t * @method removeClass\n\t\t * @param {String/Element/Array} Element ID string or DOM element or array with elements or IDs.\n\t\t * @param {String} c Class name to remove to each element.\n\t\t * @return {String/Array} String with new class value or array with new class values for all elements.\n\t\t * @example\n\t\t * // Removes a class from all paragraphs in the active editor\n\t\t * tinyMCE.activeEditor.dom.removeClass(tinyMCE.activeEditor.dom.select('p'), 'myclass');\n\t\t * \n\t\t * // Removes a class from a specific element in the current page\n\t\t * tinyMCE.DOM.removeClass('mydiv', 'myclass');\n\t\t */\n\t\tremoveClass : function(e, c) {\n\t\t\tvar t = this, re;\n\n\t\t\treturn t.run(e, function(e) {\n\t\t\t\tvar v;\n\n\t\t\t\tif (t.hasClass(e, c)) {\n\t\t\t\t\tif (!re)\n\t\t\t\t\t\tre = new RegExp(\"(^|\\\\s+)\" + c + \"(\\\\s+|$)\", \"g\");\n\n\t\t\t\t\tv = e.className.replace(re, ' ');\n\t\t\t\t\tv = tinymce.trim(v != ' ' ? v : '');\n\n\t\t\t\t\te.className = v;\n\n\t\t\t\t\t// Empty class attr\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\te.removeAttribute('class');\n\t\t\t\t\t\te.removeAttribute('className');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\n\t\t\t\treturn e.className;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Returns true if the specified element has the specified class.\n\t\t *\n\t\t * @method hasClass\n\t\t * @param {String/Element} n HTML element or element id string to check CSS class on.\n\t\t * @param {String} c CSS class to check for.\n\t\t * @return {Boolean} true/false if the specified element has the specified class.\n\t\t */\n\t\thasClass : function(n, c) {\n\t\t\tn = this.get(n);\n\n\t\t\tif (!n || !c)\n\t\t\t\treturn false;\n\n\t\t\treturn (' ' + n.className + ' ').indexOf(' ' + c + ' ') !== -1;\n\t\t},\n\n\t\t/**\n\t\t * Shows the specified element(s) by ID by setting the \"display\" style.\n\t\t *\n\t\t * @method show\n\t\t * @param {String/Element/Array} e ID of DOM element or DOM element or array with elements or IDs to show.\n\t\t */\n\t\tshow : function(e) {\n\t\t\treturn this.setStyle(e, 'display', 'block');\n\t\t},\n\n\t\t/**\n\t\t * Hides the specified element(s) by ID by setting the \"display\" style.\n\t\t *\n\t\t * @method hide\n\t\t * @param {String/Element/Array} e ID of DOM element or DOM element or array with elements or IDs to hide.\n\t\t * @example\n\t\t * // Hides a element by id in the document\n\t\t * tinymce.DOM.hide('myid');\n\t\t */\n\t\thide : function(e) {\n\t\t\treturn this.setStyle(e, 'display', 'none');\n\t\t},\n\n\t\t/**\n\t\t * Returns true/false if the element is hidden or not by checking the \"display\" style.\n\t\t *\n\t\t * @method isHidden\n\t\t * @param {String/Element} e Id or element to check display state on.\n\t\t * @return {Boolean} true/false if the element is hidden or not.\n\t\t */\n\t\tisHidden : function(e) {\n\t\t\te = this.get(e);\n\n\t\t\treturn !e || e.style.display == 'none' || this.getStyle(e, 'display') == 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique id. This can be useful when generating elements on the fly.\n\t\t * This method will not check if the element already exists.\n\t\t *\n\t\t * @method uniqueId\n\t\t * @param {String} p Optional prefix to add infront of all ids defaults to \"mce_\".\n\t\t * @return {String} Unique id.\n\t\t */\n\t\tuniqueId : function(p) {\n\t\t\treturn (!p ? 'mce_' : p) + (this.counter++);\n\t\t},\n\n\t\t/**\n\t\t * Sets the specified HTML content inside the element or elements. The HTML will first be processed this means\n\t\t * URLs will get converted, hex color values fixed etc. Check processHTML for details.\n\t\t *\n\t\t * @method setHTML\n\t\t * @param {Element/String/Array} e DOM element, element id string or array of elements/ids to set HTML inside.\n\t\t * @param {String} h HTML content to set as inner HTML of the element.\n\t\t * @example\n\t\t * // Sets the inner HTML of all paragraphs in the active editor\n\t\t * tinyMCE.activeEditor.dom.setHTML(tinyMCE.activeEditor.dom.select('p'), 'some inner html');\n\t\t * \n\t\t * // Sets the inner HTML of a element by id in the document\n\t\t * tinyMCE.DOM.setHTML('mydiv', 'some inner html');\n\t\t */\n\t\tsetHTML : function(element, html) {\n\t\t\tvar self = this;\n\n\t\t\treturn self.run(element, function(element) {\n\t\t\t\tif (isIE) {\n\t\t\t\t\t// Remove all child nodes, IE keeps empty text nodes in DOM\n\t\t\t\t\twhile (element.firstChild)\n\t\t\t\t\t\telement.removeChild(element.firstChild);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// IE will remove comments from the beginning\n\t\t\t\t\t\t// unless you padd the contents with something\n\t\t\t\t\t\telement.innerHTML = '<br />' + html;\n\t\t\t\t\t\telement.removeChild(element.firstChild);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t// IE sometimes produces an unknown runtime error on innerHTML if it's an block element within a block element for example a div inside a p\n\t\t\t\t\t\t// This seems to fix this problem\n\n\t\t\t\t\t\t// Create new div with HTML contents and a BR infront to keep comments\n\t\t\t\t\t\telement = self.create('div');\n\t\t\t\t\t\telement.innerHTML = '<br />' + html;\n\n\t\t\t\t\t\t// Add all children from div to target\n\t\t\t\t\t\teach (element.childNodes, function(node, i) {\n\t\t\t\t\t\t\t// Skip br element\n\t\t\t\t\t\t\tif (i)\n\t\t\t\t\t\t\t\telement.appendChild(node);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\telement.innerHTML = html;\n\n\t\t\t\treturn html;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Returns the outer HTML of an element.\n\t\t *\n\t\t * @method getOuterHTML\n\t\t * @param {String/Element} elm Element ID or element object to get outer HTML from.\n\t\t * @return {String} Outer HTML string.\n\t\t * @example\n\t\t * tinymce.DOM.getOuterHTML(editorElement);\n\t\t * tinyMCE.activeEditor.getOuterHTML(tinyMCE.activeEditor.getBody());\n\t\t */\n\t\tgetOuterHTML : function(elm) {\n\t\t\tvar doc, self = this;\n\n\t\t\telm = self.get(elm);\n\n\t\t\tif (!elm)\n\t\t\t\treturn null;\n\n\t\t\tif (elm.nodeType === 1 && self.hasOuterHTML)\n\t\t\t\treturn elm.outerHTML;\n\n\t\t\tdoc = (elm.ownerDocument || self.doc).createElement(\"body\");\n\t\t\tdoc.appendChild(elm.cloneNode(true));\n\n\t\t\treturn doc.innerHTML;\n\t\t},\n\n\t\t/**\n\t\t * Sets the specified outer HTML on a element or elements.\n\t\t *\n\t\t * @method setOuterHTML\n\t\t * @param {Element/String/Array} e DOM element, element id string or array of elements/ids to set outer HTML on.\n\t\t * @param {Object} h HTML code to set as outer value for the element.\n\t\t * @param {Document} d Optional document scope to use in this process defaults to the document of the DOM class.\n\t\t * @example\n\t\t * // Sets the outer HTML of all paragraphs in the active editor\n\t\t * tinyMCE.activeEditor.dom.setOuterHTML(tinyMCE.activeEditor.dom.select('p'), '<div>some html</div>');\n\t\t * \n\t\t * // Sets the outer HTML of a element by id in the document\n\t\t * tinyMCE.DOM.setOuterHTML('mydiv', '<div>some html</div>');\n\t\t */\n\t\tsetOuterHTML : function(e, h, d) {\n\t\t\tvar t = this;\n\n\t\t\tfunction setHTML(e, h, d) {\n\t\t\t\tvar n, tp;\n\n\t\t\t\ttp = d.createElement(\"body\");\n\t\t\t\ttp.innerHTML = h;\n\n\t\t\t\tn = tp.lastChild;\n\t\t\t\twhile (n) {\n\t\t\t\t\tt.insertAfter(n.cloneNode(true), e);\n\t\t\t\t\tn = n.previousSibling;\n\t\t\t\t}\n\n\t\t\t\tt.remove(e);\n\t\t\t};\n\n\t\t\treturn this.run(e, function(e) {\n\t\t\t\te = t.get(e);\n\n\t\t\t\t// Only set HTML on elements\n\t\t\t\tif (e.nodeType == 1) {\n\t\t\t\t\td = d || e.ownerDocument || t.doc;\n\n\t\t\t\t\tif (isIE) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Try outerHTML for IE it sometimes produces an unknown runtime error\n\t\t\t\t\t\t\tif (isIE && e.nodeType == 1)\n\t\t\t\t\t\t\t\te.outerHTML = h;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tsetHTML(e, h, d);\n\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\t// Fix for unknown runtime error\n\t\t\t\t\t\t\tsetHTML(e, h, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tsetHTML(e, h, d);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Entity decode a string, resolves any HTML entities like &aring;.\n\t\t *\n\t\t * @method decode\n\t\t * @param {String} s String to decode entities on.\n\t\t * @return {String} Entity decoded string.\n\t\t */\n\t\tdecode : Entities.decode,\n\n\t\t/**\n\t\t * Entity encodes a string, encodes the most common entities <>\"& into entities.\n\t\t *\n\t\t * @method encode\n\t\t * @param {String} text String to encode with entities.\n\t\t * @return {String} Entity encoded string.\n\t\t */\n\t\tencode : Entities.encodeAllRaw,\n\n\t\t/**\n\t\t * Inserts a element after the reference element.\n\t\t *\n\t\t * @method insertAfter\n\t\t * @param {Element} node Element to insert after the reference.\n\t\t * @param {Element/String/Array} reference_node Reference element, element id or array of elements to insert after.\n\t\t * @return {Element/Array} Element that got added or an array with elements. \n\t\t */\n\t\tinsertAfter : function(node, reference_node) {\n\t\t\treference_node = this.get(reference_node);\n\n\t\t\treturn this.run(node, function(node) {\n\t\t\t\tvar parent, nextSibling;\n\n\t\t\t\tparent = reference_node.parentNode;\n\t\t\t\tnextSibling = reference_node.nextSibling;\n\n\t\t\t\tif (nextSibling)\n\t\t\t\t\tparent.insertBefore(node, nextSibling);\n\t\t\t\telse\n\t\t\t\t\tparent.appendChild(node);\n\n\t\t\t\treturn node;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Returns true/false if the specified element is a block element or not.\n\t\t *\n\t\t * @method isBlock\n\t\t * @param {Node/String} node Element/Node to check.\n\t\t * @return {Boolean} True/False state if the node is a block element or not.\n\t\t */\n\t\tisBlock : function(node) {\n\t\t\tvar type = node.nodeType;\n\n\t\t\t// If it's a node then check the type and use the nodeName\n\t\t\tif (type)\n\t\t\t\treturn !!(type === 1 && blockElementsMap[node.nodeName]);\n\n\t\t\treturn !!blockElementsMap[node];\n\t\t},\n\n\t\t/**\n\t\t * Replaces the specified element or elements with the specified element, the new element will\n\t\t * be cloned if multiple inputs elements are passed.\n\t\t *\n\t\t * @method replace\n\t\t * @param {Element} n New element to replace old ones with.\n\t\t * @param {Element/String/Array} o Element DOM node, element id or array of elements or ids to replace.\n\t\t * @param {Boolean} k Optional keep children state, if set to true child nodes from the old object will be added to new ones.\n\t\t */\n\t\treplace : function(n, o, k) {\n\t\t\tvar t = this;\n\n\t\t\tif (is(o, 'array'))\n\t\t\t\tn = n.cloneNode(true);\n\n\t\t\treturn t.run(o, function(o) {\n\t\t\t\tif (k) {\n\t\t\t\t\teach(tinymce.grep(o.childNodes), function(c) {\n\t\t\t\t\t\tn.appendChild(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn o.parentNode.replaceChild(n, o);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Renames the specified element to a new name and keep it's attributes and children.\n\t\t *\n\t\t * @method rename\n\t\t * @param {Element} elm Element to rename.\n\t\t * @param {String} name Name of the new element.\n\t\t * @return New element or the old element if it needed renaming.\n\t\t */\n\t\trename : function(elm, name) {\n\t\t\tvar t = this, newElm;\n\n\t\t\tif (elm.nodeName != name.toUpperCase()) {\n\t\t\t\t// Rename block element\n\t\t\t\tnewElm = t.create(name);\n\n\t\t\t\t// Copy attribs to new block\n\t\t\t\teach(t.getAttribs(elm), function(attr_node) {\n\t\t\t\t\tt.setAttrib(newElm, attr_node.nodeName, t.getAttrib(elm, attr_node.nodeName));\n\t\t\t\t});\n\n\t\t\t\t// Replace block\n\t\t\t\tt.replace(newElm, elm, 1);\n\t\t\t}\n\n\t\t\treturn newElm || elm;\n\t\t},\n\n\t\t/**\n\t\t * Find the common ancestor of two elements. This is a shorter method than using the DOM Range logic.\n\t\t *\n\t\t * @method findCommonAncestor\n\t\t * @param {Element} a Element to find common ancestor of.\n\t\t * @param {Element} b Element to find common ancestor of.\n\t\t * @return {Element} Common ancestor element of the two input elements.\n\t\t */\n\t\tfindCommonAncestor : function(a, b) {\n\t\t\tvar ps = a, pe;\n\n\t\t\twhile (ps) {\n\t\t\t\tpe = b;\n\n\t\t\t\twhile (pe && ps != pe)\n\t\t\t\t\tpe = pe.parentNode;\n\n\t\t\t\tif (ps == pe)\n\t\t\t\t\tbreak;\n\n\t\t\t\tps = ps.parentNode;\n\t\t\t}\n\n\t\t\tif (!ps && a.ownerDocument)\n\t\t\t\treturn a.ownerDocument.documentElement;\n\n\t\t\treturn ps;\n\t\t},\n\n\t\t/**\n\t\t * Parses the specified RGB color value and returns a hex version of that color.\n\t\t *\n\t\t * @method toHex\n\t\t * @param {String} s RGB string value like rgb(1,2,3)\n\t\t * @return {String} Hex version of that RGB value like #FF00FF.\n\t\t */\n\t\ttoHex : function(s) {\n\t\t\tvar c = /^\\s*rgb\\s*?\\(\\s*?([0-9]+)\\s*?,\\s*?([0-9]+)\\s*?,\\s*?([0-9]+)\\s*?\\)\\s*$/i.exec(s);\n\n\t\t\tfunction hex(s) {\n\t\t\t\ts = parseInt(s).toString(16);\n\n\t\t\t\treturn s.length > 1 ? s : '0' + s; // 0 -> 00\n\t\t\t};\n\n\t\t\tif (c) {\n\t\t\t\ts = '#' + hex(c[1]) + hex(c[2]) + hex(c[3]);\n\n\t\t\t\treturn s;\n\t\t\t}\n\n\t\t\treturn s;\n\t\t},\n\n\t\t/**\n\t\t * Returns a array of all single CSS classes in the document. A single CSS class is a simple\n\t\t * rule like \".class\" complex ones like \"div td.class\" will not be added to output.\n\t\t *\n\t\t * @method getClasses\n\t\t * @return {Array} Array with class objects each object has a class field might be other fields in the future.\n\t\t */\n\t\tgetClasses : function() {\n\t\t\tvar t = this, cl = [], i, lo = {}, f = t.settings.class_filter, ov;\n\n\t\t\tif (t.classes)\n\t\t\t\treturn t.classes;\n\n\t\t\tfunction addClasses(s) {\n\t\t\t\t// IE style imports\n\t\t\t\teach(s.imports, function(r) {\n\t\t\t\t\taddClasses(r);\n\t\t\t\t});\n\n\t\t\t\teach(s.cssRules || s.rules, function(r) {\n\t\t\t\t\t// Real type or fake it on IE\n\t\t\t\t\tswitch (r.type || 1) {\n\t\t\t\t\t\t// Rule\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tif (r.selectorText) {\n\t\t\t\t\t\t\t\teach(r.selectorText.split(','), function(v) {\n\t\t\t\t\t\t\t\t\tv = v.replace(/^\\s*|\\s*$|^\\s\\./g, \"\");\n\n\t\t\t\t\t\t\t\t\t// Is internal or it doesn't contain a class\n\t\t\t\t\t\t\t\t\tif (/\\.mce/.test(v) || !/\\.[\\w\\-]+$/.test(v))\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t// Remove everything but class name\n\t\t\t\t\t\t\t\t\tov = v;\n\t\t\t\t\t\t\t\t\tv = tinymce._replace(/.*\\.([a-z0-9_\\-]+).*/i, '$1', v);\n\n\t\t\t\t\t\t\t\t\t// Filter classes\n\t\t\t\t\t\t\t\t\tif (f && !(v = f(v, ov)))\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\tif (!lo[v]) {\n\t\t\t\t\t\t\t\t\t\tcl.push({'class' : v});\n\t\t\t\t\t\t\t\t\t\tlo[v] = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Import\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\taddClasses(r.styleSheet);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\teach(t.doc.styleSheets, addClasses);\n\t\t\t} catch (ex) {\n\t\t\t\t// Ignore\n\t\t\t}\n\n\t\t\tif (cl.length > 0)\n\t\t\t\tt.classes = cl;\n\n\t\t\treturn cl;\n\t\t},\n\n\t\t/**\n\t\t * Executes the specified function on the element by id or dom element node or array of elements/id.\n\t\t *\n\t\t * @method run\n\t\t * @param {String/Element/Array} Element ID or DOM element object or array with ids or elements.\n\t\t * @param {function} f Function to execute for each item.\n\t\t * @param {Object} s Optional scope to execute the function in.\n\t\t * @return {Object/Array} Single object or array with objects depending on multiple input or not.\n\t\t */\n\t\trun : function(e, f, s) {\n\t\t\tvar t = this, o;\n\n\t\t\tif (t.doc && typeof(e) === 'string')\n\t\t\t\te = t.get(e);\n\n\t\t\tif (!e)\n\t\t\t\treturn false;\n\n\t\t\ts = s || this;\n\t\t\tif (!e.nodeType && (e.length || e.length === 0)) {\n\t\t\t\to = [];\n\n\t\t\t\teach(e, function(e, i) {\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\tif (typeof(e) == 'string')\n\t\t\t\t\t\t\te = t.doc.getElementById(e);\n\n\t\t\t\t\t\to.push(f.call(s, e, i));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\treturn f.call(s, e);\n\t\t},\n\n\t\t/**\n\t\t * Returns an NodeList with attributes for the element.\n\t\t *\n\t\t * @method getAttribs\n\t\t * @param {HTMLElement/string} n Element node or string id to get attributes from.\n\t\t * @return {NodeList} NodeList with attributes.\n\t\t */\n\t\tgetAttribs : function(n) {\n\t\t\tvar o;\n\n\t\t\tn = this.get(n);\n\n\t\t\tif (!n)\n\t\t\t\treturn [];\n\n\t\t\tif (isIE) {\n\t\t\t\to = [];\n\n\t\t\t\t// Object will throw exception in IE\n\t\t\t\tif (n.nodeName == 'OBJECT')\n\t\t\t\t\treturn n.attributes;\n\n\t\t\t\t// IE doesn't keep the selected attribute if you clone option elements\n\t\t\t\tif (n.nodeName === 'OPTION' && this.getAttrib(n, 'selected'))\n\t\t\t\t\to.push({specified : 1, nodeName : 'selected'});\n\n\t\t\t\t// It's crazy that this is faster in IE but it's because it returns all attributes all the time\n\t\t\t\tn.cloneNode(false).outerHTML.replace(/<\\/?[\\w:\\-]+ ?|=[\\\"][^\\\"]+\\\"|=\\'[^\\']+\\'|=[\\w\\-]+|>/gi, '').replace(/[\\w:\\-]+/gi, function(a) {\n\t\t\t\t\to.push({specified : 1, nodeName : a});\n\t\t\t\t});\n\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\treturn n.attributes;\n\t\t},\n\n\t\t/**\n\t\t * Returns true/false if the specified node is to be considered empty or not.\n\t\t *\n\t\t * @example\n\t\t * tinymce.DOM.isEmpty(node, {img : true});\n\t\t * @method isEmpty\n\t\t * @param {Object} elements Optional name/value object with elements that are automatically treated as non empty elements.\n\t\t * @return {Boolean} true/false if the node is empty or not.\n\t\t */\n\t\tisEmpty : function(node, elements) {\n\t\t\tvar self = this, i, attributes, type, walker, name, parentNode;\n\n\t\t\tnode = node.firstChild;\n\t\t\tif (node) {\n\t\t\t\twalker = new tinymce.dom.TreeWalker(node);\n\t\t\t\telements = elements || self.schema ? self.schema.getNonEmptyElements() : null;\n\n\t\t\t\tdo {\n\t\t\t\t\ttype = node.nodeType;\n\n\t\t\t\t\tif (type === 1) {\n\t\t\t\t\t\t// Ignore bogus elements\n\t\t\t\t\t\tif (node.getAttribute('data-mce-bogus'))\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t// Keep empty elements like <img />\n\t\t\t\t\t\tname = node.nodeName.toLowerCase();\n\t\t\t\t\t\tif (elements && elements[name]) {\n\t\t\t\t\t\t\t// Ignore single BR elements in blocks like <p><br /></p>\n\t\t\t\t\t\t\tparentNode = node.parentNode;\n\t\t\t\t\t\t\tif (name === 'br' && self.isBlock(parentNode) && parentNode.firstChild === node && parentNode.lastChild === node) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Keep elements with data-bookmark attributes or name attribute like <a name=\"1\"></a>\n\t\t\t\t\t\tattributes = self.getAttribs(node);\n\t\t\t\t\t\ti = node.attributes.length;\n\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\tname = node.attributes[i].nodeName;\n\t\t\t\t\t\t\tif (name === \"name\" || name === 'data-mce-bookmark')\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Keep non whitespace text nodes\n\t\t\t\t\tif ((type === 3 && !whiteSpaceRegExp.test(node.nodeValue)))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} while (node = walker.next());\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Destroys all internal references to the DOM to solve IE leak issues.\n\t\t *\n\t\t * @method destroy\n\t\t */\n\t\tdestroy : function(s) {\n\t\t\tvar t = this;\n\n\t\t\tif (t.events)\n\t\t\t\tt.events.destroy();\n\n\t\t\tt.win = t.doc = t.root = t.events = null;\n\n\t\t\t// Manual destroy then remove unload handler\n\t\t\tif (!s)\n\t\t\t\ttinymce.removeUnload(t.destroy);\n\t\t},\n\n\t\t/**\n\t\t * Created a new DOM Range object. This will use the native DOM Range API if it's\n\t\t * available if it's not it will fallback to the custom TinyMCE implementation.\n\t\t *\n\t\t * @method createRng\n\t\t * @return {DOMRange} DOM Range object.\n\t\t * @example\n\t\t * var rng = tinymce.DOM.createRng();\n\t\t * alert(rng.startContainer + \",\" + rng.startOffset);\n\t\t */\n\t\tcreateRng : function() {\n\t\t\tvar d = this.doc;\n\n\t\t\treturn d.createRange ? d.createRange() : new tinymce.dom.Range(this);\n\t\t},\n\n\t\t/**\n\t\t * Returns the index of the specified node within it's parent.\n\t\t *\n\t\t * @param {Node} node Node to look for.\n\t\t * @param {boolean} normalized Optional true/false state if the index is what it would be after a normalization.\n\t\t * @return {Number} Index of the specified node.\n\t\t */\n\t\tnodeIndex : function(node, normalized) {\n\t\t\tvar idx = 0, lastNodeType, lastNode, nodeType;\n\n\t\t\tif (node) {\n\t\t\t\tfor (lastNodeType = node.nodeType, node = node.previousSibling, lastNode = node; node; node = node.previousSibling) {\n\t\t\t\t\tnodeType = node.nodeType;\n\n\t\t\t\t\t// Normalize text nodes\n\t\t\t\t\tif (normalized && nodeType == 3) {\n\t\t\t\t\t\tif (nodeType == lastNodeType || !node.nodeValue.length)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tidx++;\n\t\t\t\t\tlastNodeType = nodeType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn idx;\n\t\t},\n\n\t\t/**\n\t\t * Splits an element into two new elements and places the specified split\n\t\t * element or element between the new ones. For example splitting the paragraph at the bold element in\n\t\t * this example <p>abc<b>abc</b>123</p> would produce <p>abc</p><b>abc</b><p>123</p>. \n\t\t *\n\t\t * @method split\n\t\t * @param {Element} pe Parent element to split.\n\t\t * @param {Element} e Element to split at.\n\t\t * @param {Element} re Optional replacement element to replace the split element by.\n\t\t * @return {Element} Returns the split element or the replacement element if that is specified.\n\t\t */\n\t\tsplit : function(pe, e, re) {\n\t\t\tvar t = this, r = t.createRng(), bef, aft, pa;\n\n\t\t\t// W3C valid browsers tend to leave empty nodes to the left/right side of the contents, this makes sense\n\t\t\t// but we don't want that in our code since it serves no purpose for the end user\n\t\t\t// For example if this is chopped:\n\t\t\t//   <p>text 1<span><b>CHOP</b></span>text 2</p>\n\t\t\t// would produce:\n\t\t\t//   <p>text 1<span></span></p><b>CHOP</b><p><span></span>text 2</p>\n\t\t\t// this function will then trim of empty edges and produce:\n\t\t\t//   <p>text 1</p><b>CHOP</b><p>text 2</p>\n\t\t\tfunction trim(node) {\n\t\t\t\tvar i, children = node.childNodes, type = node.nodeType;\n\n\t\t\t\tif (type == 1 && node.getAttribute('data-mce-type') == 'bookmark')\n\t\t\t\t\treturn;\n\n\t\t\t\tfor (i = children.length - 1; i >= 0; i--)\n\t\t\t\t\ttrim(children[i]);\n\n\t\t\t\tif (type != 9) {\n\t\t\t\t\t// Keep non whitespace text nodes\n\t\t\t\t\tif (type == 3 && node.nodeValue.length > 0) {\n\t\t\t\t\t\t// If parent element isn't a block or there isn't any useful contents for example \"<p>   </p>\"\n\t\t\t\t\t\tif (!t.isBlock(node.parentNode) || tinymce.trim(node.nodeValue).length > 0)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (type == 1) {\n\t\t\t\t\t\t// If the only child is a bookmark then move it up\n\t\t\t\t\t\tchildren = node.childNodes;\n\t\t\t\t\t\tif (children.length == 1 && children[0] && children[0].nodeType == 1 && children[0].getAttribute('data-mce-type') == 'bookmark')\n\t\t\t\t\t\t\tnode.parentNode.insertBefore(children[0], node);\n\n\t\t\t\t\t\t// Keep non empty elements or img, hr etc\n\t\t\t\t\t\tif (children.length || /^(br|hr|input|img)$/i.test(node.nodeName))\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tt.remove(node);\n\t\t\t\t}\n\n\t\t\t\treturn node;\n\t\t\t};\n\n\t\t\tif (pe && e) {\n\t\t\t\t// Get before chunk\n\t\t\t\tr.setStart(pe.parentNode, t.nodeIndex(pe));\n\t\t\t\tr.setEnd(e.parentNode, t.nodeIndex(e));\n\t\t\t\tbef = r.extractContents();\n\n\t\t\t\t// Get after chunk\n\t\t\t\tr = t.createRng();\n\t\t\t\tr.setStart(e.parentNode, t.nodeIndex(e) + 1);\n\t\t\t\tr.setEnd(pe.parentNode, t.nodeIndex(pe) + 1);\n\t\t\t\taft = r.extractContents();\n\n\t\t\t\t// Insert before chunk\n\t\t\t\tpa = pe.parentNode;\n\t\t\t\tpa.insertBefore(trim(bef), pe);\n\n\t\t\t\t// Insert middle chunk\n\t\t\t\tif (re)\n\t\t\t\t\tpa.replaceChild(re, e);\n\t\t\t\telse\n\t\t\t\t\tpa.insertBefore(e, pe);\n\n\t\t\t\t// Insert after chunk\n\t\t\t\tpa.insertBefore(trim(aft), pe);\n\t\t\t\tt.remove(pe);\n\n\t\t\t\treturn re || e;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Adds an event handler to the specified object.\n\t\t *\n\t\t * @method bind\n\t\t * @param {Element/Document/Window/Array/String} o Object or element id string to add event handler to or an array of elements/ids/documents.\n\t\t * @param {String} n Name of event handler to add for example: click.\n\t\t * @param {function} f Function to execute when the event occurs.\n\t\t * @param {Object} s Optional scope to execute the function in.\n\t\t * @return {function} Function callback handler the same as the one passed in.\n\t\t */\n\t\tbind : function(target, name, func, scope) {\n\t\t\tvar t = this;\n\n\t\t\tif (!t.events)\n\t\t\t\tt.events = new tinymce.dom.EventUtils();\n\n\t\t\treturn t.events.add(target, name, func, scope || this);\n\t\t},\n\n\t\t/**\n\t\t * Removes the specified event handler by name and function from a element or collection of elements.\n\t\t *\n\t\t * @method unbind\n\t\t * @param {String/Element/Array} o Element ID string or HTML element or an array of elements or ids to remove handler from.\n\t\t * @param {String} n Event handler name like for example: \"click\"\n\t\t * @param {function} f Function to remove.\n\t\t * @return {bool/Array} Bool state if true if the handler was removed or an array with states if multiple elements where passed in.\n\t\t */\n\t\tunbind : function(target, name, func) {\n\t\t\tvar t = this;\n\n\t\t\tif (!t.events)\n\t\t\t\tt.events = new tinymce.dom.EventUtils();\n\n\t\t\treturn t.events.remove(target, name, func);\n\t\t},\n\n\t\t// #ifdef debug\n\n\t\tdumpRng : function(r) {\n\t\t\treturn 'startContainer: ' + r.startContainer.nodeName + ', startOffset: ' + r.startOffset + ', endContainer: ' + r.endContainer.nodeName + ', endOffset: ' + r.endOffset;\n\t\t},\n\n\t\t// #endif\n\n\t\t_findSib : function(node, selector, name) {\n\t\t\tvar t = this, f = selector;\n\n\t\t\tif (node) {\n\t\t\t\t// If expression make a function of it using is\n\t\t\t\tif (is(f, 'string')) {\n\t\t\t\t\tf = function(node) {\n\t\t\t\t\t\treturn t.is(node, selector);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Loop all siblings\n\t\t\t\tfor (node = node[name]; node; node = node[name]) {\n\t\t\t\t\tif (f(node))\n\t\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\n\t\t_isRes : function(c) {\n\t\t\t// Is live resizble element\n\t\t\treturn /^(top|left|bottom|right|width|height)/i.test(c) || /;\\s*(top|left|bottom|right|width|height)/i.test(c);\n\t\t}\n\n\t\t/*\n\t\twalk : function(n, f, s) {\n\t\t\tvar d = this.doc, w;\n\n\t\t\tif (d.createTreeWalker) {\n\t\t\t\tw = d.createTreeWalker(n, NodeFilter.SHOW_TEXT, null, false);\n\n\t\t\t\twhile ((n = w.nextNode()) != null)\n\t\t\t\t\tf.call(s || this, n);\n\t\t\t} else\n\t\t\t\ttinymce.walk(n, f, 'childNodes', s);\n\t\t}\n\t\t*/\n\n\t\t/*\n\t\ttoRGB : function(s) {\n\t\t\tvar c = /^\\s*?#([0-9A-F]{2})([0-9A-F]{1,2})([0-9A-F]{2})?\\s*?$/.exec(s);\n\n\t\t\tif (c) {\n\t\t\t\t// #FFF -> #FFFFFF\n\t\t\t\tif (!is(c[3]))\n\t\t\t\t\tc[3] = c[2] = c[1];\n\n\t\t\t\treturn \"rgb(\" + parseInt(c[1], 16) + \",\" + parseInt(c[2], 16) + \",\" + parseInt(c[3], 16) + \")\";\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\t\t*/\n\t});\n\n\t/**\n\t * Instance of DOMUtils for the current document.\n\t *\n\t * @property DOM\n\t * @member tinymce\n\t * @type tinymce.dom.DOMUtils\n\t * @example\n\t * // Example of how to add a class to some element by id\n\t * tinymce.DOM.addClass('someid', 'someclass');\n\t */\n\ttinymce.DOM = new tinymce.dom.DOMUtils(document, {process_html : 0});\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/dom/Sizzle.js":"// #ifndef jquery\n\n/*\n * Sizzle CSS Selector Engine - v1.0\n *  Copyright 2009, The Dojo Foundation\n *  Released under the MIT, BSD, and GPL Licenses.\n *  More information: http://sizzlejs.com/\n */\n(function(){\n\nvar chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,\n\tdone = 0,\n\ttoString = Object.prototype.toString,\n\thasDuplicate = false,\n\tbaseHasDuplicate = true;\n\n// Here we check if the JavaScript engine is using some sort of\n// optimization where it does not always call our comparision\n// function. If that is the case, discard the hasDuplicate value.\n//   Thus far that includes Google Chrome.\n[0, 0].sort(function(){\n\tbaseHasDuplicate = false;\n\treturn 0;\n});\n\nvar Sizzle = function(selector, context, results, seed) {\n\tresults = results || [];\n\tcontext = context || document;\n\n\tvar origContext = context;\n\n\tif ( context.nodeType !== 1 && context.nodeType !== 9 ) {\n\t\treturn [];\n\t}\n\t\n\tif ( !selector || typeof selector !== \"string\" ) {\n\t\treturn results;\n\t}\n\n\tvar parts = [], m, set, checkSet, extra, prune = true, contextXML = Sizzle.isXML(context),\n\t\tsoFar = selector, ret, cur, pop, i;\n\t\n\t// Reset the position of the chunker regexp (start from head)\n\tdo {\n\t\tchunker.exec(\"\");\n\t\tm = chunker.exec(soFar);\n\n\t\tif ( m ) {\n\t\t\tsoFar = m[3];\n\t\t\n\t\t\tparts.push( m[1] );\n\t\t\n\t\t\tif ( m[2] ) {\n\t\t\t\textra = m[3];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} while ( m );\n\n\tif ( parts.length > 1 && origPOS.exec( selector ) ) {\n\t\tif ( parts.length === 2 && Expr.relative[ parts[0] ] ) {\n\t\t\tset = posProcess( parts[0] + parts[1], context );\n\t\t} else {\n\t\t\tset = Expr.relative[ parts[0] ] ?\n\t\t\t\t[ context ] :\n\t\t\t\tSizzle( parts.shift(), context );\n\n\t\t\twhile ( parts.length ) {\n\t\t\t\tselector = parts.shift();\n\n\t\t\t\tif ( Expr.relative[ selector ] ) {\n\t\t\t\t\tselector += parts.shift();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tset = posProcess( selector, set );\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\t// (but not if it'll be faster if the inner selector is an ID)\n\t\tif ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&\n\t\t\t\tExpr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {\n\t\t\tret = Sizzle.find( parts.shift(), context, contextXML );\n\t\t\tcontext = ret.expr ? Sizzle.filter( ret.expr, ret.set )[0] : ret.set[0];\n\t\t}\n\n\t\tif ( context ) {\n\t\t\tret = seed ?\n\t\t\t\t{ expr: parts.pop(), set: makeArray(seed) } :\n\t\t\t\tSizzle.find( parts.pop(), parts.length === 1 && (parts[0] === \"~\" || parts[0] === \"+\") && context.parentNode ? context.parentNode : context, contextXML );\n\t\t\tset = ret.expr ? Sizzle.filter( ret.expr, ret.set ) : ret.set;\n\n\t\t\tif ( parts.length > 0 ) {\n\t\t\t\tcheckSet = makeArray(set);\n\t\t\t} else {\n\t\t\t\tprune = false;\n\t\t\t}\n\n\t\t\twhile ( parts.length ) {\n\t\t\t\tcur = parts.pop();\n\t\t\t\tpop = cur;\n\n\t\t\t\tif ( !Expr.relative[ cur ] ) {\n\t\t\t\t\tcur = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tpop = parts.pop();\n\t\t\t\t}\n\n\t\t\t\tif ( pop == null ) {\n\t\t\t\t\tpop = context;\n\t\t\t\t}\n\n\t\t\t\tExpr.relative[ cur ]( checkSet, pop, contextXML );\n\t\t\t}\n\t\t} else {\n\t\t\tcheckSet = parts = [];\n\t\t}\n\t}\n\n\tif ( !checkSet ) {\n\t\tcheckSet = set;\n\t}\n\n\tif ( !checkSet ) {\n\t\tSizzle.error( cur || selector );\n\t}\n\n\tif ( toString.call(checkSet) === \"[object Array]\" ) {\n\t\tif ( !prune ) {\n\t\t\tresults.push.apply( results, checkSet );\n\t\t} else if ( context && context.nodeType === 1 ) {\n\t\t\tfor ( i = 0; checkSet[i] != null; i++ ) {\n\t\t\t\tif ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {\n\t\t\t\t\tresults.push( set[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; checkSet[i] != null; i++ ) {\n\t\t\t\tif ( checkSet[i] && checkSet[i].nodeType === 1 ) {\n\t\t\t\t\tresults.push( set[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmakeArray( checkSet, results );\n\t}\n\n\tif ( extra ) {\n\t\tSizzle( extra, origContext, results, seed );\n\t\tSizzle.uniqueSort( results );\n\t}\n\n\treturn results;\n};\n\nSizzle.uniqueSort = function(results){\n\tif ( sortOrder ) {\n\t\thasDuplicate = baseHasDuplicate;\n\t\tresults.sort(sortOrder);\n\n\t\tif ( hasDuplicate ) {\n\t\t\tfor ( var i = 1; i < results.length; i++ ) {\n\t\t\t\tif ( results[i] === results[i-1] ) {\n\t\t\t\t\tresults.splice(i--, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn results;\n};\n\nSizzle.matches = function(expr, set){\n\treturn Sizzle(expr, null, null, set);\n};\n\nSizzle.find = function(expr, context, isXML){\n\tvar set;\n\n\tif ( !expr ) {\n\t\treturn [];\n\t}\n\n\tfor ( var i = 0, l = Expr.order.length; i < l; i++ ) {\n\t\tvar type = Expr.order[i], match;\n\t\t\n\t\tif ( (match = Expr.leftMatch[ type ].exec( expr )) ) {\n\t\t\tvar left = match[1];\n\t\t\tmatch.splice(1,1);\n\n\t\t\tif ( left.substr( left.length - 1 ) !== \"\\\\\" ) {\n\t\t\t\tmatch[1] = (match[1] || \"\").replace(/\\\\/g, \"\");\n\t\t\t\tset = Expr.find[ type ]( match, context, isXML );\n\t\t\t\tif ( set != null ) {\n\t\t\t\t\texpr = expr.replace( Expr.match[ type ], \"\" );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( !set ) {\n\t\tset = context.getElementsByTagName(\"*\");\n\t}\n\n\treturn {set: set, expr: expr};\n};\n\nSizzle.filter = function(expr, set, inplace, not){\n\tvar old = expr, result = [], curLoop = set, match, anyFound,\n\t\tisXMLFilter = set && set[0] && Sizzle.isXML(set[0]);\n\n\twhile ( expr && set.length ) {\n\t\tfor ( var type in Expr.filter ) {\n\t\t\tif ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {\n\t\t\t\tvar filter = Expr.filter[ type ], found, item, left = match[1];\n\t\t\t\tanyFound = false;\n\n\t\t\t\tmatch.splice(1,1);\n\n\t\t\t\tif ( left.substr( left.length - 1 ) === \"\\\\\" ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( curLoop === result ) {\n\t\t\t\t\tresult = [];\n\t\t\t\t}\n\n\t\t\t\tif ( Expr.preFilter[ type ] ) {\n\t\t\t\t\tmatch = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );\n\n\t\t\t\t\tif ( !match ) {\n\t\t\t\t\t\tanyFound = found = true;\n\t\t\t\t\t} else if ( match === true ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\tfor ( var i = 0; (item = curLoop[i]) != null; i++ ) {\n\t\t\t\t\t\tif ( item ) {\n\t\t\t\t\t\t\tfound = filter( item, match, i, curLoop );\n\t\t\t\t\t\t\tvar pass = not ^ !!found;\n\n\t\t\t\t\t\t\tif ( inplace && found != null ) {\n\t\t\t\t\t\t\t\tif ( pass ) {\n\t\t\t\t\t\t\t\t\tanyFound = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcurLoop[i] = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( pass ) {\n\t\t\t\t\t\t\t\tresult.push( item );\n\t\t\t\t\t\t\t\tanyFound = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( found !== undefined ) {\n\t\t\t\t\tif ( !inplace ) {\n\t\t\t\t\t\tcurLoop = result;\n\t\t\t\t\t}\n\n\t\t\t\t\texpr = expr.replace( Expr.match[ type ], \"\" );\n\n\t\t\t\t\tif ( !anyFound ) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Improper expression\n\t\tif ( expr === old ) {\n\t\t\tif ( anyFound == null ) {\n\t\t\t\tSizzle.error( expr );\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\told = expr;\n\t}\n\n\treturn curLoop;\n};\n\nSizzle.error = function( msg ) {\n\tthrow \"Syntax error, unrecognized expression: \" + msg;\n};\n\nvar Expr = Sizzle.selectors = {\n\torder: [ \"ID\", \"NAME\", \"TAG\" ],\n\tmatch: {\n\t\tID: /#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\n\t\tCLASS: /\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\n\t\tNAME: /\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)['\"]*\\]/,\n\t\tATTR: /\\[\\s*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(['\"]*)(.*?)\\3|)\\s*\\]/,\n\t\tTAG: /^((?:[\\w\\u00c0-\\uFFFF\\*\\-]|\\\\.)+)/,\n\t\tCHILD: /:(only|nth|last|first)-child(?:\\((even|odd|[\\dn+\\-]*)\\))?/,\n\t\tPOS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^\\-]|$)/,\n\t\tPSEUDO: /:((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/\n\t},\n\tleftMatch: {},\n\tattrMap: {\n\t\t\"class\": \"className\",\n\t\t\"for\": \"htmlFor\"\n\t},\n\tattrHandle: {\n\t\thref: function(elem){\n\t\t\treturn elem.getAttribute(\"href\");\n\t\t}\n\t},\n\trelative: {\n\t\t\"+\": function(checkSet, part){\n\t\t\tvar isPartStr = typeof part === \"string\",\n\t\t\t\tisTag = isPartStr && !/\\W/.test(part),\n\t\t\t\tisPartStrNotTag = isPartStr && !isTag;\n\n\t\t\tif ( isTag ) {\n\t\t\t\tpart = part.toLowerCase();\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {\n\t\t\t\tif ( (elem = checkSet[i]) ) {\n\t\t\t\t\twhile ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}\n\n\t\t\t\t\tcheckSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?\n\t\t\t\t\t\telem || false :\n\t\t\t\t\t\telem === part;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isPartStrNotTag ) {\n\t\t\t\tSizzle.filter( part, checkSet, true );\n\t\t\t}\n\t\t},\n\t\t\">\": function(checkSet, part){\n\t\t\tvar isPartStr = typeof part === \"string\",\n\t\t\t\telem, i = 0, l = checkSet.length;\n\n\t\t\tif ( isPartStr && !/\\W/.test(part) ) {\n\t\t\t\tpart = part.toLowerCase();\n\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\telem = checkSet[i];\n\t\t\t\t\tif ( elem ) {\n\t\t\t\t\t\tvar parent = elem.parentNode;\n\t\t\t\t\t\tcheckSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\telem = checkSet[i];\n\t\t\t\t\tif ( elem ) {\n\t\t\t\t\t\tcheckSet[i] = isPartStr ?\n\t\t\t\t\t\t\telem.parentNode :\n\t\t\t\t\t\t\telem.parentNode === part;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isPartStr ) {\n\t\t\t\t\tSizzle.filter( part, checkSet, true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"\": function(checkSet, part, isXML){\n\t\t\tvar doneName = done++, checkFn = dirCheck, nodeCheck;\n\n\t\t\tif ( typeof part === \"string\" && !/\\W/.test(part) ) {\n\t\t\t\tpart = part.toLowerCase();\n\t\t\t\tnodeCheck = part;\n\t\t\t\tcheckFn = dirNodeCheck;\n\t\t\t}\n\n\t\t\tcheckFn(\"parentNode\", part, doneName, checkSet, nodeCheck, isXML);\n\t\t},\n\t\t\"~\": function(checkSet, part, isXML){\n\t\t\tvar doneName = done++, checkFn = dirCheck, nodeCheck;\n\n\t\t\tif ( typeof part === \"string\" && !/\\W/.test(part) ) {\n\t\t\t\tpart = part.toLowerCase();\n\t\t\t\tnodeCheck = part;\n\t\t\t\tcheckFn = dirNodeCheck;\n\t\t\t}\n\n\t\t\tcheckFn(\"previousSibling\", part, doneName, checkSet, nodeCheck, isXML);\n\t\t}\n\t},\n\tfind: {\n\t\tID: function(match, context, isXML){\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && !isXML ) {\n\t\t\t\tvar m = context.getElementById(match[1]);\n\t\t\t\treturn m ? [m] : [];\n\t\t\t}\n\t\t},\n\t\tNAME: function(match, context){\n\t\t\tif ( typeof context.getElementsByName !== \"undefined\" ) {\n\t\t\t\tvar ret = [], results = context.getElementsByName(match[1]);\n\n\t\t\t\tfor ( var i = 0, l = results.length; i < l; i++ ) {\n\t\t\t\t\tif ( results[i].getAttribute(\"name\") === match[1] ) {\n\t\t\t\t\t\tret.push( results[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn ret.length === 0 ? null : ret;\n\t\t\t}\n\t\t},\n\t\tTAG: function(match, context){\n\t\t\treturn context.getElementsByTagName(match[1]);\n\t\t}\n\t},\n\tpreFilter: {\n\t\tCLASS: function(match, curLoop, inplace, result, not, isXML){\n\t\t\tmatch = \" \" + match[1].replace(/\\\\/g, \"\") + \" \";\n\n\t\t\tif ( isXML ) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tfor ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {\n\t\t\t\tif ( elem ) {\n\t\t\t\t\tif ( not ^ (elem.className && (\" \" + elem.className + \" \").replace(/[\\t\\n]/g, \" \").indexOf(match) >= 0) ) {\n\t\t\t\t\t\tif ( !inplace ) {\n\t\t\t\t\t\t\tresult.push( elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ( inplace ) {\n\t\t\t\t\t\tcurLoop[i] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tID: function(match){\n\t\t\treturn match[1].replace(/\\\\/g, \"\");\n\t\t},\n\t\tTAG: function(match, curLoop){\n\t\t\treturn match[1].toLowerCase();\n\t\t},\n\t\tCHILD: function(match){\n\t\t\tif ( match[1] === \"nth\" ) {\n\t\t\t\t// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'\n\t\t\t\tvar test = /(-?)(\\d*)n((?:\\+|-)?\\d*)/.exec(\n\t\t\t\t\tmatch[2] === \"even\" && \"2n\" || match[2] === \"odd\" && \"2n+1\" ||\n\t\t\t\t\t!/\\D/.test( match[2] ) && \"0n+\" + match[2] || match[2]);\n\n\t\t\t\t// calculate the numbers (first)n+(last) including if they are negative\n\t\t\t\tmatch[2] = (test[1] + (test[2] || 1)) - 0;\n\t\t\t\tmatch[3] = test[3] - 0;\n\t\t\t}\n\n\t\t\t// TODO: Move to normal caching system\n\t\t\tmatch[0] = done++;\n\n\t\t\treturn match;\n\t\t},\n\t\tATTR: function(match, curLoop, inplace, result, not, isXML){\n\t\t\tvar name = match[1].replace(/\\\\/g, \"\");\n\t\t\t\n\t\t\tif ( !isXML && Expr.attrMap[name] ) {\n\t\t\t\tmatch[1] = Expr.attrMap[name];\n\t\t\t}\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[4] = \" \" + match[4] + \" \";\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\t\tPSEUDO: function(match, curLoop, inplace, result, not){\n\t\t\tif ( match[1] === \"not\" ) {\n\t\t\t\t// If we're dealing with a complex expression, or a simple one\n\t\t\t\tif ( ( chunker.exec(match[3]) || \"\" ).length > 1 || /^\\w/.test(match[3]) ) {\n\t\t\t\t\tmatch[3] = Sizzle(match[3], null, null, curLoop);\n\t\t\t\t} else {\n\t\t\t\t\tvar ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);\n\t\t\t\t\tif ( !inplace ) {\n\t\t\t\t\t\tresult.push.apply( result, ret );\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\treturn match;\n\t\t},\n\t\tPOS: function(match){\n\t\t\tmatch.unshift( true );\n\t\t\treturn match;\n\t\t}\n\t},\n\tfilters: {\n\t\tenabled: function(elem){\n\t\t\treturn elem.disabled === false && elem.type !== \"hidden\";\n\t\t},\n\t\tdisabled: function(elem){\n\t\t\treturn elem.disabled === true;\n\t\t},\n\t\tchecked: function(elem){\n\t\t\treturn elem.checked === true;\n\t\t},\n\t\tselected: function(elem){\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\telem.parentNode.selectedIndex;\n\t\t\treturn elem.selected === true;\n\t\t},\n\t\tparent: function(elem){\n\t\t\treturn !!elem.firstChild;\n\t\t},\n\t\tempty: function(elem){\n\t\t\treturn !elem.firstChild;\n\t\t},\n\t\thas: function(elem, i, match){\n\t\t\treturn !!Sizzle( match[3], elem ).length;\n\t\t},\n\t\theader: function(elem){\n\t\t\treturn (/h\\d/i).test( elem.nodeName );\n\t\t},\n\t\ttext: function(elem){\n\t\t\treturn \"text\" === elem.type;\n\t\t},\n\t\tradio: function(elem){\n\t\t\treturn \"radio\" === elem.type;\n\t\t},\n\t\tcheckbox: function(elem){\n\t\t\treturn \"checkbox\" === elem.type;\n\t\t},\n\t\tfile: function(elem){\n\t\t\treturn \"file\" === elem.type;\n\t\t},\n\t\tpassword: function(elem){\n\t\t\treturn \"password\" === elem.type;\n\t\t},\n\t\tsubmit: function(elem){\n\t\t\treturn \"submit\" === elem.type;\n\t\t},\n\t\timage: function(elem){\n\t\t\treturn \"image\" === elem.type;\n\t\t},\n\t\treset: function(elem){\n\t\t\treturn \"reset\" === elem.type;\n\t\t},\n\t\tbutton: function(elem){\n\t\t\treturn \"button\" === elem.type || elem.nodeName.toLowerCase() === \"button\";\n\t\t},\n\t\tinput: function(elem){\n\t\t\treturn (/input|select|textarea|button/i).test(elem.nodeName);\n\t\t}\n\t},\n\tsetFilters: {\n\t\tfirst: function(elem, i){\n\t\t\treturn i === 0;\n\t\t},\n\t\tlast: function(elem, i, match, array){\n\t\t\treturn i === array.length - 1;\n\t\t},\n\t\teven: function(elem, i){\n\t\t\treturn i % 2 === 0;\n\t\t},\n\t\todd: function(elem, i){\n\t\t\treturn i % 2 === 1;\n\t\t},\n\t\tlt: function(elem, i, match){\n\t\t\treturn i < match[3] - 0;\n\t\t},\n\t\tgt: function(elem, i, match){\n\t\t\treturn i > match[3] - 0;\n\t\t},\n\t\tnth: function(elem, i, match){\n\t\t\treturn match[3] - 0 === i;\n\t\t},\n\t\teq: function(elem, i, match){\n\t\t\treturn match[3] - 0 === i;\n\t\t}\n\t},\n\tfilter: {\n\t\tPSEUDO: function(elem, match, i, array){\n\t\t\tvar name = match[1], filter = Expr.filters[ name ];\n\n\t\t\tif ( filter ) {\n\t\t\t\treturn filter( elem, i, match, array );\n\t\t\t} else if ( name === \"contains\" ) {\n\t\t\t\treturn (elem.textContent || elem.innerText || Sizzle.getText([ elem ]) || \"\").indexOf(match[3]) >= 0;\n\t\t\t} else if ( name === \"not\" ) {\n\t\t\t\tvar not = match[3];\n\n\t\t\t\tfor ( var j = 0, l = not.length; j < l; j++ ) {\n\t\t\t\t\tif ( not[j] === elem ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tSizzle.error( \"Syntax error, unrecognized expression: \" + name );\n\t\t\t}\n\t\t},\n\t\tCHILD: function(elem, match){\n\t\t\tvar type = match[1], node = elem;\n\t\t\tswitch (type) {\n\t\t\t\tcase 'only':\n\t\t\t\tcase 'first':\n\t\t\t\t\twhile ( (node = node.previousSibling) )\t {\n\t\t\t\t\t\tif ( node.nodeType === 1 ) { \n\t\t\t\t\t\t\treturn false; \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( type === \"first\" ) { \n\t\t\t\t\t\treturn true; \n\t\t\t\t\t}\n\t\t\t\t\tnode = elem;\n\t\t\t\tcase 'last':\n\t\t\t\t\twhile ( (node = node.nextSibling) )\t {\n\t\t\t\t\t\tif ( node.nodeType === 1 ) { \n\t\t\t\t\t\t\treturn false; \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\tcase 'nth':\n\t\t\t\t\tvar first = match[2], last = match[3];\n\n\t\t\t\t\tif ( first === 1 && last === 0 ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar doneName = match[0],\n\t\t\t\t\t\tparent = elem.parentNode;\n\t\n\t\t\t\t\tif ( parent && (parent.sizcache !== doneName || !elem.nodeIndex) ) {\n\t\t\t\t\t\tvar count = 0;\n\t\t\t\t\t\tfor ( node = parent.firstChild; node; node = node.nextSibling ) {\n\t\t\t\t\t\t\tif ( node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\tnode.nodeIndex = ++count;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \n\t\t\t\t\t\tparent.sizcache = doneName;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar diff = elem.nodeIndex - last;\n\t\t\t\t\tif ( first === 0 ) {\n\t\t\t\t\t\treturn diff === 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tID: function(elem, match){\n\t\t\treturn elem.nodeType === 1 && elem.getAttribute(\"id\") === match;\n\t\t},\n\t\tTAG: function(elem, match){\n\t\t\treturn (match === \"*\" && elem.nodeType === 1) || elem.nodeName.toLowerCase() === match;\n\t\t},\n\t\tCLASS: function(elem, match){\n\t\t\treturn (\" \" + (elem.className || elem.getAttribute(\"class\")) + \" \")\n\t\t\t\t.indexOf( match ) > -1;\n\t\t},\n\t\tATTR: function(elem, match){\n\t\t\tvar name = match[1],\n\t\t\t\tresult = Expr.attrHandle[ name ] ?\n\t\t\t\t\tExpr.attrHandle[ name ]( elem ) :\n\t\t\t\t\telem[ name ] != null ?\n\t\t\t\t\t\telem[ name ] :\n\t\t\t\t\t\telem.getAttribute( name ),\n\t\t\t\tvalue = result + \"\",\n\t\t\t\ttype = match[2],\n\t\t\t\tcheck = match[4];\n\n\t\t\treturn result == null ?\n\t\t\t\ttype === \"!=\" :\n\t\t\t\ttype === \"=\" ?\n\t\t\t\tvalue === check :\n\t\t\t\ttype === \"*=\" ?\n\t\t\t\tvalue.indexOf(check) >= 0 :\n\t\t\t\ttype === \"~=\" ?\n\t\t\t\t(\" \" + value + \" \").indexOf(check) >= 0 :\n\t\t\t\t!check ?\n\t\t\t\tvalue && result !== false :\n\t\t\t\ttype === \"!=\" ?\n\t\t\t\tvalue !== check :\n\t\t\t\ttype === \"^=\" ?\n\t\t\t\tvalue.indexOf(check) === 0 :\n\t\t\t\ttype === \"$=\" ?\n\t\t\t\tvalue.substr(value.length - check.length) === check :\n\t\t\t\ttype === \"|=\" ?\n\t\t\t\tvalue === check || value.substr(0, check.length + 1) === check + \"-\" :\n\t\t\t\tfalse;\n\t\t},\n\t\tPOS: function(elem, match, i, array){\n\t\t\tvar name = match[2], filter = Expr.setFilters[ name ];\n\n\t\t\tif ( filter ) {\n\t\t\t\treturn filter( elem, i, match, array );\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar origPOS = Expr.match.POS,\n\tfescape = function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t};\n\nfor ( var type in Expr.match ) {\n\tExpr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\\[]*\\])(?![^\\(]*\\))/.source) );\n\tExpr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, fescape) );\n}\n\nvar makeArray = function(array, results) {\n\tarray = Array.prototype.slice.call( array, 0 );\n\n\tif ( results ) {\n\t\tresults.push.apply( results, array );\n\t\treturn results;\n\t}\n\t\n\treturn array;\n};\n\n// Perform a simple check to determine if the browser is capable of\n// converting a NodeList to an array using builtin methods.\n// Also verifies that the returned array holds DOM nodes\n// (which is not the case in the Blackberry browser)\ntry {\n\tArray.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;\n\n// Provide a fallback method if it does not work\n} catch(e){\n\tmakeArray = function(array, results) {\n\t\tvar ret = results || [], i = 0;\n\n\t\tif ( toString.call(array) === \"[object Array]\" ) {\n\t\t\tArray.prototype.push.apply( ret, array );\n\t\t} else {\n\t\t\tif ( typeof array.length === \"number\" ) {\n\t\t\t\tfor ( var l = array.length; i < l; i++ ) {\n\t\t\t\t\tret.push( array[i] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( ; array[i]; i++ ) {\n\t\t\t\t\tret.push( array[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t};\n}\n\nvar sortOrder;\n\nif ( document.documentElement.compareDocumentPosition ) {\n\tsortOrder = function( a, b ) {\n\t\tif ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {\n\t\t\tif ( a == b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t}\n\t\t\treturn a.compareDocumentPosition ? -1 : 1;\n\t\t}\n\n\t\tvar ret = a.compareDocumentPosition(b) & 4 ? -1 : a === b ? 0 : 1;\n\t\tif ( ret === 0 ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn ret;\n\t};\n} else if ( \"sourceIndex\" in document.documentElement ) {\n\tsortOrder = function( a, b ) {\n\t\tif ( !a.sourceIndex || !b.sourceIndex ) {\n\t\t\tif ( a == b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t}\n\t\t\treturn a.sourceIndex ? -1 : 1;\n\t\t}\n\n\t\tvar ret = a.sourceIndex - b.sourceIndex;\n\t\tif ( ret === 0 ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn ret;\n\t};\n} else if ( document.createRange ) {\n\tsortOrder = function( a, b ) {\n\t\tif ( !a.ownerDocument || !b.ownerDocument ) {\n\t\t\tif ( a == b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t}\n\t\t\treturn a.ownerDocument ? -1 : 1;\n\t\t}\n\n\t\tvar aRange = a.ownerDocument.createRange(), bRange = b.ownerDocument.createRange();\n\t\taRange.setStart(a, 0);\n\t\taRange.setEnd(a, 0);\n\t\tbRange.setStart(b, 0);\n\t\tbRange.setEnd(b, 0);\n\t\tvar ret = aRange.compareBoundaryPoints(Range.START_TO_END, bRange);\n\t\tif ( ret === 0 ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn ret;\n\t};\n}\n\n// Utility function for retreiving the text value of an array of DOM nodes\nSizzle.getText = function( elems ) {\n\tvar ret = \"\", elem;\n\n\tfor ( var i = 0; elems[i]; i++ ) {\n\t\telem = elems[i];\n\n\t\t// Get the text from text nodes and CDATA nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 4 ) {\n\t\t\tret += elem.nodeValue;\n\n\t\t// Traverse everything else, except comment nodes\n\t\t} else if ( elem.nodeType !== 8 ) {\n\t\t\tret += Sizzle.getText( elem.childNodes );\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n// Check to see if the browser returns elements by name when\n// querying by getElementById (and provide a workaround)\n(function(){\n\t// We're going to inject a fake input element with a specified name\n\tvar form = document.createElement(\"div\"),\n\t\tid = \"script\" + (new Date()).getTime();\n\tform.innerHTML = \"<a name='\" + id + \"'/>\";\n\n\t// Inject it into the root element, check its status, and remove it quickly\n\tvar root = document.documentElement;\n\troot.insertBefore( form, root.firstChild );\n\n\t// The workaround has to do additional checks after a getElementById\n\t// Which slows things down for other browsers (hence the branching)\n\tif ( document.getElementById( id ) ) {\n\t\tExpr.find.ID = function(match, context, isXML){\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && !isXML ) {\n\t\t\t\tvar m = context.getElementById(match[1]);\n\t\t\t\treturn m ? m.id === match[1] || typeof m.getAttributeNode !== \"undefined\" && m.getAttributeNode(\"id\").nodeValue === match[1] ? [m] : undefined : [];\n\t\t\t}\n\t\t};\n\n\t\tExpr.filter.ID = function(elem, match){\n\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\t\t\treturn elem.nodeType === 1 && node && node.nodeValue === match;\n\t\t};\n\t}\n\n\troot.removeChild( form );\n\troot = form = null; // release memory in IE\n})();\n\n(function(){\n\t// Check to see if the browser returns only elements\n\t// when doing getElementsByTagName(\"*\")\n\n\t// Create a fake element\n\tvar div = document.createElement(\"div\");\n\tdiv.appendChild( document.createComment(\"\") );\n\n\t// Make sure no comments are found\n\tif ( div.getElementsByTagName(\"*\").length > 0 ) {\n\t\tExpr.find.TAG = function(match, context){\n\t\t\tvar results = context.getElementsByTagName(match[1]);\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( match[1] === \"*\" ) {\n\t\t\t\tvar tmp = [];\n\n\t\t\t\tfor ( var i = 0; results[i]; i++ ) {\n\t\t\t\t\tif ( results[i].nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( results[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresults = tmp;\n\t\t\t}\n\n\t\t\treturn results;\n\t\t};\n\t}\n\n\t// Check to see if an attribute returns normalized href attributes\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\tif ( div.firstChild && typeof div.firstChild.getAttribute !== \"undefined\" &&\n\t\t\tdiv.firstChild.getAttribute(\"href\") !== \"#\" ) {\n\t\tExpr.attrHandle.href = function(elem){\n\t\t\treturn elem.getAttribute(\"href\", 2);\n\t\t};\n\t}\n\n\tdiv = null; // release memory in IE\n})();\n\nif ( document.querySelectorAll ) {\n\t(function(){\n\t\tvar oldSizzle = Sizzle, div = document.createElement(\"div\");\n\t\tdiv.innerHTML = \"<p class='TEST'></p>\";\n\n\t\t// Safari can't handle uppercase or unicode characters when\n\t\t// in quirks mode.\n\t\tif ( div.querySelectorAll && div.querySelectorAll(\".TEST\").length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tSizzle = function(query, context, extra, seed){\n\t\t\tcontext = context || document;\n\n\t\t\t// Only use querySelectorAll on non-XML documents\n\t\t\t// (ID selectors don't work in non-HTML documents)\n\t\t\tif ( !seed && context.nodeType === 9 && !Sizzle.isXML(context) ) {\n\t\t\t\ttry {\n\t\t\t\t\treturn makeArray( context.querySelectorAll(query), extra );\n\t\t\t\t} catch(e){}\n\t\t\t}\n\t\t\n\t\t\treturn oldSizzle(query, context, extra, seed);\n\t\t};\n\n\t\tfor ( var prop in oldSizzle ) {\n\t\t\tSizzle[ prop ] = oldSizzle[ prop ];\n\t\t}\n\n\t\tdiv = null; // release memory in IE\n\t})();\n}\n\n(function(){\n\tvar div = document.createElement(\"div\");\n\n\tdiv.innerHTML = \"<div class='test e'></div><div class='test'></div>\";\n\n\t// Opera can't find a second classname (in 9.6)\n\t// Also, make sure that getElementsByClassName actually exists\n\tif ( !div.getElementsByClassName || div.getElementsByClassName(\"e\").length === 0 ) {\n\t\treturn;\n\t}\n\n\t// Safari caches class attributes, doesn't catch changes (in 3.2)\n\tdiv.lastChild.className = \"e\";\n\n\tif ( div.getElementsByClassName(\"e\").length === 1 ) {\n\t\treturn;\n\t}\n\t\n\tExpr.order.splice(1, 0, \"CLASS\");\n\tExpr.find.CLASS = function(match, context, isXML) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && !isXML ) {\n\t\t\treturn context.getElementsByClassName(match[1]);\n\t\t}\n\t};\n\n\tdiv = null; // release memory in IE\n})();\n\nfunction dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {\n\tfor ( var i = 0, l = checkSet.length; i < l; i++ ) {\n\t\tvar elem = checkSet[i];\n\t\tif ( elem ) {\n\t\t\telem = elem[dir];\n\t\t\tvar match = false;\n\n\t\t\twhile ( elem ) {\n\t\t\t\tif ( elem.sizcache === doneName ) {\n\t\t\t\t\tmatch = checkSet[elem.sizset];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( elem.nodeType === 1 && !isXML ){\n\t\t\t\t\telem.sizcache = doneName;\n\t\t\t\t\telem.sizset = i;\n\t\t\t\t}\n\n\t\t\t\tif ( elem.nodeName.toLowerCase() === cur ) {\n\t\t\t\t\tmatch = elem;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\telem = elem[dir];\n\t\t\t}\n\n\t\t\tcheckSet[i] = match;\n\t\t}\n\t}\n}\n\nfunction dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {\n\tfor ( var i = 0, l = checkSet.length; i < l; i++ ) {\n\t\tvar elem = checkSet[i];\n\t\tif ( elem ) {\n\t\t\telem = elem[dir];\n\t\t\tvar match = false;\n\n\t\t\twhile ( elem ) {\n\t\t\t\tif ( elem.sizcache === doneName ) {\n\t\t\t\t\tmatch = checkSet[elem.sizset];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\tif ( !isXML ) {\n\t\t\t\t\t\telem.sizcache = doneName;\n\t\t\t\t\t\telem.sizset = i;\n\t\t\t\t\t}\n\t\t\t\t\tif ( typeof cur !== \"string\" ) {\n\t\t\t\t\t\tif ( elem === cur ) {\n\t\t\t\t\t\t\tmatch = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {\n\t\t\t\t\t\tmatch = elem;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telem = elem[dir];\n\t\t\t}\n\n\t\t\tcheckSet[i] = match;\n\t\t}\n\t}\n}\n\nSizzle.contains = document.compareDocumentPosition ? function(a, b){\n\treturn !!(a.compareDocumentPosition(b) & 16);\n} : function(a, b){\n\treturn a !== b && (a.contains ? a.contains(b) : true);\n};\n\nSizzle.isXML = function(elem){\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833) \n\tvar documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\nvar posProcess = function(selector, context){\n\tvar tmpSet = [], later = \"\", match,\n\t\troot = context.nodeType ? [context] : context;\n\n\t// Position selectors must be done after the filter\n\t// And so must :not(positional) so we move all PSEUDOs to the end\n\twhile ( (match = Expr.match.PSEUDO.exec( selector )) ) {\n\t\tlater += match[0];\n\t\tselector = selector.replace( Expr.match.PSEUDO, \"\" );\n\t}\n\n\tselector = Expr.relative[selector] ? selector + \"*\" : selector;\n\n\tfor ( var i = 0, l = root.length; i < l; i++ ) {\n\t\tSizzle( selector, root[i], tmpSet );\n\t}\n\n\treturn Sizzle.filter( later, tmpSet );\n};\n\n// EXPOSE\n\nwindow.tinymce.dom.Sizzle = Sizzle;\n\n})();\n\n// #endif\n","Magento_Tinymce3/tiny_mce/classes/dom/EventUtils.js":"/**\n * EventUtils.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\t// Shorten names\n\tvar each = tinymce.each, DOM = tinymce.DOM, isIE = tinymce.isIE, isWebKit = tinymce.isWebKit, Event;\n\n\t/**\n\t * This class handles DOM events in a cross platform fasion it also keeps track of element\n\t * and handler references to be able to clean elements to reduce IE memory leaks.\n\t *\n\t * @class tinymce.dom.EventUtils\n\t */\n\ttinymce.create('tinymce.dom.EventUtils', {\n\t\t/**\n\t\t * Constructs a new EventUtils instance.\n\t\t *\n\t\t * @constructor\n\t\t * @method EventUtils\n\t\t */\n\t\tEventUtils : function() {\n\t\t\tthis.inits = [];\n\t\t\tthis.events = [];\n\t\t},\n\n\t\t/**\n\t\t * Adds an event handler to the specified object.\n\t\t *\n\t\t * @method add\n\t\t * @param {Element/Document/Window/Array/String} o Object or element id string to add event handler to or an array of elements/ids/documents.\n\t\t * @param {String/Array} n Name of event handler to add for example: click.\n\t\t * @param {function} f Function to execute when the event occurs.\n\t\t * @param {Object} s Optional scope to execute the function in.\n\t\t * @return {function} Function callback handler the same as the one passed in.\n\t\t * @example\n\t\t * // Adds a click handler to the current document\n\t\t * tinymce.dom.Event.add(document, 'click', function(e) {\n\t\t *    console.debug(e.target);\n\t\t * });\n\t\t */\n\t\tadd : function(o, n, f, s) {\n\t\t\tvar cb, t = this, el = t.events, r;\n\n\t\t\tif (n instanceof Array) {\n\t\t\t\tr = [];\n\n\t\t\t\teach(n, function(n) {\n\t\t\t\t\tr.push(t.add(o, n, f, s));\n\t\t\t\t});\n\n\t\t\t\treturn r;\n\t\t\t}\n\n\t\t\t// Handle array\n\t\t\tif (o && o.hasOwnProperty && o instanceof Array) {\n\t\t\t\tr = [];\n\n\t\t\t\teach(o, function(o) {\n\t\t\t\t\to = DOM.get(o);\n\t\t\t\t\tr.push(t.add(o, n, f, s));\n\t\t\t\t});\n\n\t\t\t\treturn r;\n\t\t\t}\n\n\t\t\to = DOM.get(o);\n\n\t\t\tif (!o)\n\t\t\t\treturn;\n\n\t\t\t// Setup event callback\n\t\t\tcb = function(e) {\n\t\t\t\t// Is all events disabled\n\t\t\t\tif (t.disabled)\n\t\t\t\t\treturn;\n\n\t\t\t\te = e || window.event;\n\n\t\t\t\t// Patch in target, preventDefault and stopPropagation in IE it's W3C valid\n\t\t\t\tif (e && isIE) {\n\t\t\t\t\tif (!e.target)\n\t\t\t\t\t\te.target = e.srcElement;\n\n\t\t\t\t\t// Patch in preventDefault, stopPropagation methods for W3C compatibility\n\t\t\t\t\ttinymce.extend(e, t._stoppers);\n\t\t\t\t}\n\n\t\t\t\tif (!s)\n\t\t\t\t\treturn f(e);\n\n\t\t\t\treturn f.call(s, e);\n\t\t\t};\n\n\t\t\tif (n == 'unload') {\n\t\t\t\ttinymce.unloads.unshift({func : cb});\n\t\t\t\treturn cb;\n\t\t\t}\n\n\t\t\tif (n == 'init') {\n\t\t\t\tif (t.domLoaded)\n\t\t\t\t\tcb();\n\t\t\t\telse\n\t\t\t\t\tt.inits.push(cb);\n\n\t\t\t\treturn cb;\n\t\t\t}\n\n\t\t\t// Store away listener reference\n\t\t\tel.push({\n\t\t\t\tobj : o,\n\t\t\t\tname : n,\n\t\t\t\tfunc : f,\n\t\t\t\tcfunc : cb,\n\t\t\t\tscope : s\n\t\t\t});\n\n\t\t\tt._add(o, n, cb);\n\n\t\t\treturn f;\n\t\t},\n\n\t\t/**\n\t\t * Removes the specified event handler by name and function from a element or collection of elements.\n\t\t *\n\t\t * @method remove\n\t\t * @param {String/Element/Array} o Element ID string or HTML element or an array of elements or ids to remove handler from.\n\t\t * @param {String} n Event handler name like for example: \"click\"\n\t\t * @param {function} f Function to remove.\n\t\t * @return {bool/Array} Bool state if true if the handler was removed or an array with states if multiple elements where passed in.\n\t\t * @example\n\t\t * // Adds a click handler to the current document\n\t\t * var func = tinymce.dom.Event.add(document, 'click', function(e) {\n\t\t *    console.debug(e.target);\n\t\t * });\n\t\t * \n\t\t * // Removes the click handler from the document\n\t\t * tinymce.dom.Event.remove(document, 'click', func);\n\t\t */\n\t\tremove : function(o, n, f) {\n\t\t\tvar t = this, a = t.events, s = false, r;\n\n\t\t\t// Handle array\n\t\t\tif (o && o.hasOwnProperty && o instanceof Array) {\n\t\t\t\tr = [];\n\n\t\t\t\teach(o, function(o) {\n\t\t\t\t\to = DOM.get(o);\n\t\t\t\t\tr.push(t.remove(o, n, f));\n\t\t\t\t});\n\n\t\t\t\treturn r;\n\t\t\t}\n\n\t\t\to = DOM.get(o);\n\n\t\t\teach(a, function(e, i) {\n\t\t\t\tif (e.obj == o && e.name == n && (!f || (e.func == f || e.cfunc == f))) {\n\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\tt._remove(o, n, e.cfunc);\n\t\t\t\t\ts = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn s;\n\t\t},\n\n\t\t/**\n\t\t * Clears all events of a specific object.\n\t\t *\n\t\t * @method clear\n\t\t * @param {Object} o DOM element or object to remove all events from.\n\t\t * @example\n\t\t * // Cancels all mousedown events in the active editor\n\t\t * tinyMCE.activeEditor.onMouseDown.add(function(ed, e) {\n\t\t *    return tinymce.dom.Event.cancel(e);\n\t\t * });\n\t\t */\n\t\tclear : function(o) {\n\t\t\tvar t = this, a = t.events, i, e;\n\n\t\t\tif (o) {\n\t\t\t\to = DOM.get(o);\n\n\t\t\t\tfor (i = a.length - 1; i >= 0; i--) {\n\t\t\t\t\te = a[i];\n\n\t\t\t\t\tif (e.obj === o) {\n\t\t\t\t\t\tt._remove(e.obj, e.name, e.cfunc);\n\t\t\t\t\t\te.obj = e.cfunc = null;\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Cancels an event for both bubbeling and the default browser behavior.\n\t\t *\n\t\t * @method cancel\n\t\t * @param {Event} e Event object to cancel.\n\t\t * @return {Boolean} Always false.\n\t\t */\n\t\tcancel : function(e) {\n\t\t\tif (!e)\n\t\t\t\treturn false;\n\n\t\t\tthis.stop(e);\n\n\t\t\treturn this.prevent(e);\n\t\t},\n\n\t\t/**\n\t\t * Stops propogation/bubbeling of an event.\n\t\t *\n\t\t * @method stop\n\t\t * @param {Event} e Event to cancel bubbeling on.\n\t\t * @return {Boolean} Always false.\n\t\t */\n\t\tstop : function(e) {\n\t\t\tif (e.stopPropagation)\n\t\t\t\te.stopPropagation();\n\t\t\telse\n\t\t\t\te.cancelBubble = true;\n\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Prevent default browser behvaior of an event.\n\t\t *\n\t\t * @method prevent\n\t\t * @param {Event} e Event to prevent default browser behvaior of an event.\n\t\t * @return {Boolean} Always false.\n\t\t */\n\t\tprevent : function(e) {\n\t\t\tif (e.preventDefault)\n\t\t\t\te.preventDefault();\n\t\t\telse\n\t\t\t\te.returnValue = false;\n\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Destroys the instance.\n\t\t *\n\t\t * @method destroy\n\t\t */\n\t\tdestroy : function() {\n\t\t\tvar t = this;\n\n\t\t\teach(t.events, function(e, i) {\n\t\t\t\tt._remove(e.obj, e.name, e.cfunc);\n\t\t\t\te.obj = e.cfunc = null;\n\t\t\t});\n\n\t\t\tt.events = [];\n\t\t\tt = null;\n\t\t},\n\n\t\t_add : function(o, n, f) {\n\t\t\tif (o.attachEvent)\n\t\t\t\to.attachEvent('on' + n, f);\n\t\t\telse if (o.addEventListener)\n\t\t\t\to.addEventListener(n, f, false);\n\t\t\telse\n\t\t\t\to['on' + n] = f;\n\t\t},\n\n\t\t_remove : function(o, n, f) {\n\t\t\tif (o) {\n\t\t\t\ttry {\n\t\t\t\t\tif (o.detachEvent)\n\t\t\t\t\t\to.detachEvent('on' + n, f);\n\t\t\t\t\telse if (o.removeEventListener)\n\t\t\t\t\t\to.removeEventListener(n, f, false);\n\t\t\t\t\telse\n\t\t\t\t\t\to['on' + n] = null;\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// Might fail with permission denined on IE so we just ignore that\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_pageInit : function(win) {\n\t\t\tvar t = this;\n\n\t\t\t// Keep it from running more than once\n\t\t\tif (t.domLoaded)\n\t\t\t\treturn;\n\n\t\t\tt.domLoaded = true;\n\n\t\t\teach(t.inits, function(c) {\n\t\t\t\tc();\n\t\t\t});\n\n\t\t\tt.inits = [];\n\t\t},\n\n\t\t_wait : function(win) {\n\t\t\tvar t = this, doc = win.document;\n\n\t\t\t// No need since the document is already loaded\n\t\t\tif (win.tinyMCE_GZ && tinyMCE_GZ.loaded) {\n\t\t\t\tt.domLoaded = 1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use IE method\n\t\t\tif (doc.attachEvent) {\n\t\t\t\tdoc.attachEvent(\"onreadystatechange\", function() {\n\t\t\t\t\tif (doc.readyState === \"complete\") {\n\t\t\t\t\t\tdoc.detachEvent(\"onreadystatechange\", arguments.callee);\n\t\t\t\t\t\tt._pageInit(win);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (doc.documentElement.doScroll && win == win.top) {\n\t\t\t\t\t(function() {\n\t\t\t\t\t\tif (t.domLoaded)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// If IE is used, use the trick by Diego Perini licensed under MIT by request to the author.\n\t\t\t\t\t\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\t\t\t\t\t\tdoc.documentElement.doScroll(\"left\");\n\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\tsetTimeout(arguments.callee, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tt._pageInit(win);\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t} else if (doc.addEventListener) {\n\t\t\t\tt._add(win, 'DOMContentLoaded', function() {\n\t\t\t\t\tt._pageInit(win);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tt._add(win, 'load', function() {\n\t\t\t\tt._pageInit(win);\n\t\t\t});\n\t\t},\n\n\t\t_stoppers : {\n\t\t\tpreventDefault : function() {\n\t\t\t\tthis.returnValue = false;\n\t\t\t},\n\n\t\t\tstopPropagation : function() {\n\t\t\t\tthis.cancelBubble = true;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Instance of EventUtils for the current document.\n\t *\n\t * @property Event\n\t * @member tinymce.dom\n\t * @type tinymce.dom.EventUtils\n\t */\n\tEvent = tinymce.dom.Event = new tinymce.dom.EventUtils();\n\n\t// Dispatch DOM content loaded event for IE and Safari\n\tEvent._wait(window);\n\n\ttinymce.addUnload(function() {\n\t\tEvent.destroy();\n\t});\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/dom/Range.js":"/**\n * Range.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(ns) {\n\t// Range constructor\n\tfunction Range(dom) {\n\t\tvar t = this,\n\t\t\tdoc = dom.doc,\n\t\t\tEXTRACT = 0,\n\t\t\tCLONE = 1,\n\t\t\tDELETE = 2,\n\t\t\tTRUE = true,\n\t\t\tFALSE = false,\n\t\t\tSTART_OFFSET = 'startOffset',\n\t\t\tSTART_CONTAINER = 'startContainer',\n\t\t\tEND_CONTAINER = 'endContainer',\n\t\t\tEND_OFFSET = 'endOffset',\n\t\t\textend = tinymce.extend,\n\t\t\tnodeIndex = dom.nodeIndex;\n\n\t\textend(t, {\n\t\t\t// Inital states\n\t\t\tstartContainer : doc,\n\t\t\tstartOffset : 0,\n\t\t\tendContainer : doc,\n\t\t\tendOffset : 0,\n\t\t\tcollapsed : TRUE,\n\t\t\tcommonAncestorContainer : doc,\n\n\t\t\t// Range constants\n\t\t\tSTART_TO_START : 0,\n\t\t\tSTART_TO_END : 1,\n\t\t\tEND_TO_END : 2,\n\t\t\tEND_TO_START : 3,\n\n\t\t\t// Public methods\n\t\t\tsetStart : setStart,\n\t\t\tsetEnd : setEnd,\n\t\t\tsetStartBefore : setStartBefore,\n\t\t\tsetStartAfter : setStartAfter,\n\t\t\tsetEndBefore : setEndBefore,\n\t\t\tsetEndAfter : setEndAfter,\n\t\t\tcollapse : collapse,\n\t\t\tselectNode : selectNode,\n\t\t\tselectNodeContents : selectNodeContents,\n\t\t\tcompareBoundaryPoints : compareBoundaryPoints,\n\t\t\tdeleteContents : deleteContents,\n\t\t\textractContents : extractContents,\n\t\t\tcloneContents : cloneContents,\n\t\t\tinsertNode : insertNode,\n\t\t\tsurroundContents : surroundContents,\n\t\t\tcloneRange : cloneRange\n\t\t});\n\n\t\tfunction setStart(n, o) {\n\t\t\t_setEndPoint(TRUE, n, o);\n\t\t};\n\n\t\tfunction setEnd(n, o) {\n\t\t\t_setEndPoint(FALSE, n, o);\n\t\t};\n\n\t\tfunction setStartBefore(n) {\n\t\t\tsetStart(n.parentNode, nodeIndex(n));\n\t\t};\n\n\t\tfunction setStartAfter(n) {\n\t\t\tsetStart(n.parentNode, nodeIndex(n) + 1);\n\t\t};\n\n\t\tfunction setEndBefore(n) {\n\t\t\tsetEnd(n.parentNode, nodeIndex(n));\n\t\t};\n\n\t\tfunction setEndAfter(n) {\n\t\t\tsetEnd(n.parentNode, nodeIndex(n) + 1);\n\t\t};\n\n\t\tfunction collapse(ts) {\n\t\t\tif (ts) {\n\t\t\t\tt[END_CONTAINER] = t[START_CONTAINER];\n\t\t\t\tt[END_OFFSET] = t[START_OFFSET];\n\t\t\t} else {\n\t\t\t\tt[START_CONTAINER] = t[END_CONTAINER];\n\t\t\t\tt[START_OFFSET] = t[END_OFFSET];\n\t\t\t}\n\n\t\t\tt.collapsed = TRUE;\n\t\t};\n\n\t\tfunction selectNode(n) {\n\t\t\tsetStartBefore(n);\n\t\t\tsetEndAfter(n);\n\t\t};\n\n\t\tfunction selectNodeContents(n) {\n\t\t\tsetStart(n, 0);\n\t\t\tsetEnd(n, n.nodeType === 1 ? n.childNodes.length : n.nodeValue.length);\n\t\t};\n\n\t\tfunction compareBoundaryPoints(h, r) {\n\t\t\tvar sc = t[START_CONTAINER], so = t[START_OFFSET], ec = t[END_CONTAINER], eo = t[END_OFFSET],\n\t\t\trsc = r.startContainer, rso = r.startOffset, rec = r.endContainer, reo = r.endOffset;\n\n\t\t\t// Check START_TO_START\n\t\t\tif (h === 0)\n\t\t\t\treturn _compareBoundaryPoints(sc, so, rsc, rso);\n\t\n\t\t\t// Check START_TO_END\n\t\t\tif (h === 1)\n\t\t\t\treturn _compareBoundaryPoints(ec, eo, rsc, rso);\n\t\n\t\t\t// Check END_TO_END\n\t\t\tif (h === 2)\n\t\t\t\treturn _compareBoundaryPoints(ec, eo, rec, reo);\n\t\n\t\t\t// Check END_TO_START\n\t\t\tif (h === 3) \n\t\t\t\treturn _compareBoundaryPoints(sc, so, rec, reo);\n\t\t};\n\n\t\tfunction deleteContents() {\n\t\t\t_traverse(DELETE);\n\t\t};\n\n\t\tfunction extractContents() {\n\t\t\treturn _traverse(EXTRACT);\n\t\t};\n\n\t\tfunction cloneContents() {\n\t\t\treturn _traverse(CLONE);\n\t\t};\n\n\t\tfunction insertNode(n) {\n\t\t\tvar startContainer = this[START_CONTAINER],\n\t\t\t\tstartOffset = this[START_OFFSET], nn, o;\n\n\t\t\t// Node is TEXT_NODE or CDATA\n\t\t\tif ((startContainer.nodeType === 3 || startContainer.nodeType === 4) && startContainer.nodeValue) {\n\t\t\t\tif (!startOffset) {\n\t\t\t\t\t// At the start of text\n\t\t\t\t\tstartContainer.parentNode.insertBefore(n, startContainer);\n\t\t\t\t} else if (startOffset >= startContainer.nodeValue.length) {\n\t\t\t\t\t// At the end of text\n\t\t\t\t\tdom.insertAfter(n, startContainer);\n\t\t\t\t} else {\n\t\t\t\t\t// Middle, need to split\n\t\t\t\t\tnn = startContainer.splitText(startOffset);\n\t\t\t\t\tstartContainer.parentNode.insertBefore(n, nn);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Insert element node\n\t\t\t\tif (startContainer.childNodes.length > 0)\n\t\t\t\t\to = startContainer.childNodes[startOffset];\n\n\t\t\t\tif (o)\n\t\t\t\t\tstartContainer.insertBefore(n, o);\n\t\t\t\telse\n\t\t\t\t\tstartContainer.appendChild(n);\n\t\t\t}\n\t\t};\n\n\t\tfunction surroundContents(n) {\n\t\t\tvar f = t.extractContents();\n\n\t\t\tt.insertNode(n);\n\t\t\tn.appendChild(f);\n\t\t\tt.selectNode(n);\n\t\t};\n\n\t\tfunction cloneRange() {\n\t\t\treturn extend(new Range(dom), {\n\t\t\t\tstartContainer : t[START_CONTAINER],\n\t\t\t\tstartOffset : t[START_OFFSET],\n\t\t\t\tendContainer : t[END_CONTAINER],\n\t\t\t\tendOffset : t[END_OFFSET],\n\t\t\t\tcollapsed : t.collapsed,\n\t\t\t\tcommonAncestorContainer : t.commonAncestorContainer\n\t\t\t});\n\t\t};\n\n\t\t// Private methods\n\n\t\tfunction _getSelectedNode(container, offset) {\n\t\t\tvar child;\n\n\t\t\tif (container.nodeType == 3 /* TEXT_NODE */)\n\t\t\t\treturn container;\n\n\t\t\tif (offset < 0)\n\t\t\t\treturn container;\n\n\t\t\tchild = container.firstChild;\n\t\t\twhile (child && offset > 0) {\n\t\t\t\t--offset;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\n\t\t\tif (child)\n\t\t\t\treturn child;\n\n\t\t\treturn container;\n\t\t};\n\n\t\tfunction _isCollapsed() {\n\t\t\treturn (t[START_CONTAINER] == t[END_CONTAINER] && t[START_OFFSET] == t[END_OFFSET]);\n\t\t};\n\n\t\tfunction _compareBoundaryPoints(containerA, offsetA, containerB, offsetB) {\n\t\t\tvar c, offsetC, n, cmnRoot, childA, childB;\n\t\t\t\n\t\t\t// In the first case the boundary-points have the same container. A is before B\n\t\t\t// if its offset is less than the offset of B, A is equal to B if its offset is\n\t\t\t// equal to the offset of B, and A is after B if its offset is greater than the\n\t\t\t// offset of B.\n\t\t\tif (containerA == containerB) {\n\t\t\t\tif (offsetA == offsetB)\n\t\t\t\t\treturn 0; // equal\n\n\t\t\t\tif (offsetA < offsetB)\n\t\t\t\t\treturn -1; // before\n\n\t\t\t\treturn 1; // after\n\t\t\t}\n\n\t\t\t// In the second case a child node C of the container of A is an ancestor\n\t\t\t// container of B. In this case, A is before B if the offset of A is less than or\n\t\t\t// equal to the index of the child node C and A is after B otherwise.\n\t\t\tc = containerB;\n\t\t\twhile (c && c.parentNode != containerA)\n\t\t\t\tc = c.parentNode;\n\n\t\t\tif (c) {\n\t\t\t\toffsetC = 0;\n\t\t\t\tn = containerA.firstChild;\n\n\t\t\t\twhile (n != c && offsetC < offsetA) {\n\t\t\t\t\toffsetC++;\n\t\t\t\t\tn = n.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tif (offsetA <= offsetC)\n\t\t\t\t\treturn -1; // before\n\n\t\t\t\treturn 1; // after\n\t\t\t}\n\n\t\t\t// In the third case a child node C of the container of B is an ancestor container\n\t\t\t// of A. In this case, A is before B if the index of the child node C is less than\n\t\t\t// the offset of B and A is after B otherwise.\n\t\t\tc = containerA;\n\t\t\twhile (c && c.parentNode != containerB) {\n\t\t\t\tc = c.parentNode;\n\t\t\t}\n\n\t\t\tif (c) {\n\t\t\t\toffsetC = 0;\n\t\t\t\tn = containerB.firstChild;\n\n\t\t\t\twhile (n != c && offsetC < offsetB) {\n\t\t\t\t\toffsetC++;\n\t\t\t\t\tn = n.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tif (offsetC < offsetB)\n\t\t\t\t\treturn -1; // before\n\n\t\t\t\treturn 1; // after\n\t\t\t}\n\n\t\t\t// In the fourth case, none of three other cases hold: the containers of A and B\n\t\t\t// are siblings or descendants of sibling nodes. In this case, A is before B if\n\t\t\t// the container of A is before the container of B in a pre-order traversal of the\n\t\t\t// Ranges' context tree and A is after B otherwise.\n\t\t\tcmnRoot = dom.findCommonAncestor(containerA, containerB);\n\t\t\tchildA = containerA;\n\n\t\t\twhile (childA && childA.parentNode != cmnRoot)\n\t\t\t\tchildA = childA.parentNode;\n\n\t\t\tif (!childA)\n\t\t\t\tchildA = cmnRoot;\n\n\t\t\tchildB = containerB;\n\t\t\twhile (childB && childB.parentNode != cmnRoot)\n\t\t\t\tchildB = childB.parentNode;\n\n\t\t\tif (!childB)\n\t\t\t\tchildB = cmnRoot;\n\n\t\t\tif (childA == childB)\n\t\t\t\treturn 0; // equal\n\n\t\t\tn = cmnRoot.firstChild;\n\t\t\twhile (n) {\n\t\t\t\tif (n == childA)\n\t\t\t\t\treturn -1; // before\n\n\t\t\t\tif (n == childB)\n\t\t\t\t\treturn 1; // after\n\n\t\t\t\tn = n.nextSibling;\n\t\t\t}\n\t\t};\n\n\t\tfunction _setEndPoint(st, n, o) {\n\t\t\tvar ec, sc;\n\n\t\t\tif (st) {\n\t\t\t\tt[START_CONTAINER] = n;\n\t\t\t\tt[START_OFFSET] = o;\n\t\t\t} else {\n\t\t\t\tt[END_CONTAINER] = n;\n\t\t\t\tt[END_OFFSET] = o;\n\t\t\t}\n\n\t\t\t// If one boundary-point of a Range is set to have a root container\n\t\t\t// other than the current one for the Range, the Range is collapsed to\n\t\t\t// the new position. This enforces the restriction that both boundary-\n\t\t\t// points of a Range must have the same root container.\n\t\t\tec = t[END_CONTAINER];\n\t\t\twhile (ec.parentNode)\n\t\t\t\tec = ec.parentNode;\n\n\t\t\tsc = t[START_CONTAINER];\n\t\t\twhile (sc.parentNode)\n\t\t\t\tsc = sc.parentNode;\n\n\t\t\tif (sc == ec) {\n\t\t\t\t// The start position of a Range is guaranteed to never be after the\n\t\t\t\t// end position. To enforce this restriction, if the start is set to\n\t\t\t\t// be at a position after the end, the Range is collapsed to that\n\t\t\t\t// position.\n\t\t\t\tif (_compareBoundaryPoints(t[START_CONTAINER], t[START_OFFSET], t[END_CONTAINER], t[END_OFFSET]) > 0)\n\t\t\t\t\tt.collapse(st);\n\t\t\t} else\n\t\t\t\tt.collapse(st);\n\n\t\t\tt.collapsed = _isCollapsed();\n\t\t\tt.commonAncestorContainer = dom.findCommonAncestor(t[START_CONTAINER], t[END_CONTAINER]);\n\t\t};\n\n\t\tfunction _traverse(how) {\n\t\t\tvar c, endContainerDepth = 0, startContainerDepth = 0, p, depthDiff, startNode, endNode, sp, ep;\n\n\t\t\tif (t[START_CONTAINER] == t[END_CONTAINER])\n\t\t\t\treturn _traverseSameContainer(how);\n\n\t\t\tfor (c = t[END_CONTAINER], p = c.parentNode; p; c = p, p = p.parentNode) {\n\t\t\t\tif (p == t[START_CONTAINER])\n\t\t\t\t\treturn _traverseCommonStartContainer(c, how);\n\n\t\t\t\t++endContainerDepth;\n\t\t\t}\n\n\t\t\tfor (c = t[START_CONTAINER], p = c.parentNode; p; c = p, p = p.parentNode) {\n\t\t\t\tif (p == t[END_CONTAINER])\n\t\t\t\t\treturn _traverseCommonEndContainer(c, how);\n\n\t\t\t\t++startContainerDepth;\n\t\t\t}\n\n\t\t\tdepthDiff = startContainerDepth - endContainerDepth;\n\n\t\t\tstartNode = t[START_CONTAINER];\n\t\t\twhile (depthDiff > 0) {\n\t\t\t\tstartNode = startNode.parentNode;\n\t\t\t\tdepthDiff--;\n\t\t\t}\n\n\t\t\tendNode = t[END_CONTAINER];\n\t\t\twhile (depthDiff < 0) {\n\t\t\t\tendNode = endNode.parentNode;\n\t\t\t\tdepthDiff++;\n\t\t\t}\n\n\t\t\t// ascend the ancestor hierarchy until we have a common parent.\n\t\t\tfor (sp = startNode.parentNode, ep = endNode.parentNode; sp != ep; sp = sp.parentNode, ep = ep.parentNode) {\n\t\t\t\tstartNode = sp;\n\t\t\t\tendNode = ep;\n\t\t\t}\n\n\t\t\treturn _traverseCommonAncestors(startNode, endNode, how);\n\t\t};\n\n\t\t function _traverseSameContainer(how) {\n\t\t\tvar frag, s, sub, n, cnt, sibling, xferNode;\n\n\t\t\tif (how != DELETE)\n\t\t\t\tfrag = doc.createDocumentFragment();\n\n\t\t\t// If selection is empty, just return the fragment\n\t\t\tif (t[START_OFFSET] == t[END_OFFSET])\n\t\t\t\treturn frag;\n\n\t\t\t// Text node needs special case handling\n\t\t\tif (t[START_CONTAINER].nodeType == 3 /* TEXT_NODE */) {\n\t\t\t\t// get the substring\n\t\t\t\ts = t[START_CONTAINER].nodeValue;\n\t\t\t\tsub = s.substring(t[START_OFFSET], t[END_OFFSET]);\n\n\t\t\t\t// set the original text node to its new value\n\t\t\t\tif (how != CLONE) {\n\t\t\t\t\tt[START_CONTAINER].deleteData(t[START_OFFSET], t[END_OFFSET] - t[START_OFFSET]);\n\n\t\t\t\t\t// Nothing is partially selected, so collapse to start point\n\t\t\t\t\tt.collapse(TRUE);\n\t\t\t\t}\n\n\t\t\t\tif (how == DELETE)\n\t\t\t\t\treturn;\n\n\t\t\t\tfrag.appendChild(doc.createTextNode(sub));\n\t\t\t\treturn frag;\n\t\t\t}\n\n\t\t\t// Copy nodes between the start/end offsets.\n\t\t\tn = _getSelectedNode(t[START_CONTAINER], t[START_OFFSET]);\n\t\t\tcnt = t[END_OFFSET] - t[START_OFFSET];\n\n\t\t\twhile (cnt > 0) {\n\t\t\t\tsibling = n.nextSibling;\n\t\t\t\txferNode = _traverseFullySelected(n, how);\n\n\t\t\t\tif (frag)\n\t\t\t\t\tfrag.appendChild( xferNode );\n\n\t\t\t\t--cnt;\n\t\t\t\tn = sibling;\n\t\t\t}\n\n\t\t\t// Nothing is partially selected, so collapse to start point\n\t\t\tif (how != CLONE)\n\t\t\t\tt.collapse(TRUE);\n\n\t\t\treturn frag;\n\t\t};\n\n\t\tfunction _traverseCommonStartContainer(endAncestor, how) {\n\t\t\tvar frag, n, endIdx, cnt, sibling, xferNode;\n\n\t\t\tif (how != DELETE)\n\t\t\t\tfrag = doc.createDocumentFragment();\n\n\t\t\tn = _traverseRightBoundary(endAncestor, how);\n\n\t\t\tif (frag)\n\t\t\t\tfrag.appendChild(n);\n\n\t\t\tendIdx = nodeIndex(endAncestor);\n\t\t\tcnt = endIdx - t[START_OFFSET];\n\n\t\t\tif (cnt <= 0) {\n\t\t\t\t// Collapse to just before the endAncestor, which\n\t\t\t\t// is partially selected.\n\t\t\t\tif (how != CLONE) {\n\t\t\t\t\tt.setEndBefore(endAncestor);\n\t\t\t\t\tt.collapse(FALSE);\n\t\t\t\t}\n\n\t\t\t\treturn frag;\n\t\t\t}\n\n\t\t\tn = endAncestor.previousSibling;\n\t\t\twhile (cnt > 0) {\n\t\t\t\tsibling = n.previousSibling;\n\t\t\t\txferNode = _traverseFullySelected(n, how);\n\n\t\t\t\tif (frag)\n\t\t\t\t\tfrag.insertBefore(xferNode, frag.firstChild);\n\n\t\t\t\t--cnt;\n\t\t\t\tn = sibling;\n\t\t\t}\n\n\t\t\t// Collapse to just before the endAncestor, which\n\t\t\t// is partially selected.\n\t\t\tif (how != CLONE) {\n\t\t\t\tt.setEndBefore(endAncestor);\n\t\t\t\tt.collapse(FALSE);\n\t\t\t}\n\n\t\t\treturn frag;\n\t\t};\n\n\t\tfunction _traverseCommonEndContainer(startAncestor, how) {\n\t\t\tvar frag, startIdx, n, cnt, sibling, xferNode;\n\n\t\t\tif (how != DELETE)\n\t\t\t\tfrag = doc.createDocumentFragment();\n\n\t\t\tn = _traverseLeftBoundary(startAncestor, how);\n\t\t\tif (frag)\n\t\t\t\tfrag.appendChild(n);\n\n\t\t\tstartIdx = nodeIndex(startAncestor);\n\t\t\t++startIdx; // Because we already traversed it\n\n\t\t\tcnt = t[END_OFFSET] - startIdx;\n\t\t\tn = startAncestor.nextSibling;\n\t\t\twhile (cnt > 0) {\n\t\t\t\tsibling = n.nextSibling;\n\t\t\t\txferNode = _traverseFullySelected(n, how);\n\n\t\t\t\tif (frag)\n\t\t\t\t\tfrag.appendChild(xferNode);\n\n\t\t\t\t--cnt;\n\t\t\t\tn = sibling;\n\t\t\t}\n\n\t\t\tif (how != CLONE) {\n\t\t\t\tt.setStartAfter(startAncestor);\n\t\t\t\tt.collapse(TRUE);\n\t\t\t}\n\n\t\t\treturn frag;\n\t\t};\n\n\t\tfunction _traverseCommonAncestors(startAncestor, endAncestor, how) {\n\t\t\tvar n, frag, commonParent, startOffset, endOffset, cnt, sibling, nextSibling;\n\n\t\t\tif (how != DELETE)\n\t\t\t\tfrag = doc.createDocumentFragment();\n\n\t\t\tn = _traverseLeftBoundary(startAncestor, how);\n\t\t\tif (frag)\n\t\t\t\tfrag.appendChild(n);\n\n\t\t\tcommonParent = startAncestor.parentNode;\n\t\t\tstartOffset = nodeIndex(startAncestor);\n\t\t\tendOffset = nodeIndex(endAncestor);\n\t\t\t++startOffset;\n\n\t\t\tcnt = endOffset - startOffset;\n\t\t\tsibling = startAncestor.nextSibling;\n\n\t\t\twhile (cnt > 0) {\n\t\t\t\tnextSibling = sibling.nextSibling;\n\t\t\t\tn = _traverseFullySelected(sibling, how);\n\n\t\t\t\tif (frag)\n\t\t\t\t\tfrag.appendChild(n);\n\n\t\t\t\tsibling = nextSibling;\n\t\t\t\t--cnt;\n\t\t\t}\n\n\t\t\tn = _traverseRightBoundary(endAncestor, how);\n\n\t\t\tif (frag)\n\t\t\t\tfrag.appendChild(n);\n\n\t\t\tif (how != CLONE) {\n\t\t\t\tt.setStartAfter(startAncestor);\n\t\t\t\tt.collapse(TRUE);\n\t\t\t}\n\n\t\t\treturn frag;\n\t\t};\n\n\t\tfunction _traverseRightBoundary(root, how) {\n\t\t\tvar next = _getSelectedNode(t[END_CONTAINER], t[END_OFFSET] - 1), parent, clonedParent, prevSibling, clonedChild, clonedGrandParent, isFullySelected = next != t[END_CONTAINER];\n\n\t\t\tif (next == root)\n\t\t\t\treturn _traverseNode(next, isFullySelected, FALSE, how);\n\n\t\t\tparent = next.parentNode;\n\t\t\tclonedParent = _traverseNode(parent, FALSE, FALSE, how);\n\n\t\t\twhile (parent) {\n\t\t\t\twhile (next) {\n\t\t\t\t\tprevSibling = next.previousSibling;\n\t\t\t\t\tclonedChild = _traverseNode(next, isFullySelected, FALSE, how);\n\n\t\t\t\t\tif (how != DELETE)\n\t\t\t\t\t\tclonedParent.insertBefore(clonedChild, clonedParent.firstChild);\n\n\t\t\t\t\tisFullySelected = TRUE;\n\t\t\t\t\tnext = prevSibling;\n\t\t\t\t}\n\n\t\t\t\tif (parent == root)\n\t\t\t\t\treturn clonedParent;\n\n\t\t\t\tnext = parent.previousSibling;\n\t\t\t\tparent = parent.parentNode;\n\n\t\t\t\tclonedGrandParent = _traverseNode(parent, FALSE, FALSE, how);\n\n\t\t\t\tif (how != DELETE)\n\t\t\t\t\tclonedGrandParent.appendChild(clonedParent);\n\n\t\t\t\tclonedParent = clonedGrandParent;\n\t\t\t}\n\t\t};\n\n\t\tfunction _traverseLeftBoundary(root, how) {\n\t\t\tvar next = _getSelectedNode(t[START_CONTAINER], t[START_OFFSET]), isFullySelected = next != t[START_CONTAINER], parent, clonedParent, nextSibling, clonedChild, clonedGrandParent;\n\n\t\t\tif (next == root)\n\t\t\t\treturn _traverseNode(next, isFullySelected, TRUE, how);\n\n\t\t\tparent = next.parentNode;\n\t\t\tclonedParent = _traverseNode(parent, FALSE, TRUE, how);\n\n\t\t\twhile (parent) {\n\t\t\t\twhile (next) {\n\t\t\t\t\tnextSibling = next.nextSibling;\n\t\t\t\t\tclonedChild = _traverseNode(next, isFullySelected, TRUE, how);\n\n\t\t\t\t\tif (how != DELETE)\n\t\t\t\t\t\tclonedParent.appendChild(clonedChild);\n\n\t\t\t\t\tisFullySelected = TRUE;\n\t\t\t\t\tnext = nextSibling;\n\t\t\t\t}\n\n\t\t\t\tif (parent == root)\n\t\t\t\t\treturn clonedParent;\n\n\t\t\t\tnext = parent.nextSibling;\n\t\t\t\tparent = parent.parentNode;\n\n\t\t\t\tclonedGrandParent = _traverseNode(parent, FALSE, TRUE, how);\n\n\t\t\t\tif (how != DELETE)\n\t\t\t\t\tclonedGrandParent.appendChild(clonedParent);\n\n\t\t\t\tclonedParent = clonedGrandParent;\n\t\t\t}\n\t\t};\n\n\t\tfunction _traverseNode(n, isFullySelected, isLeft, how) {\n\t\t\tvar txtValue, newNodeValue, oldNodeValue, offset, newNode;\n\n\t\t\tif (isFullySelected)\n\t\t\t\treturn _traverseFullySelected(n, how);\n\n\t\t\tif (n.nodeType == 3 /* TEXT_NODE */) {\n\t\t\t\ttxtValue = n.nodeValue;\n\n\t\t\t\tif (isLeft) {\n\t\t\t\t\toffset = t[START_OFFSET];\n\t\t\t\t\tnewNodeValue = txtValue.substring(offset);\n\t\t\t\t\toldNodeValue = txtValue.substring(0, offset);\n\t\t\t\t} else {\n\t\t\t\t\toffset = t[END_OFFSET];\n\t\t\t\t\tnewNodeValue = txtValue.substring(0, offset);\n\t\t\t\t\toldNodeValue = txtValue.substring(offset);\n\t\t\t\t}\n\n\t\t\t\tif (how != CLONE)\n\t\t\t\t\tn.nodeValue = oldNodeValue;\n\n\t\t\t\tif (how == DELETE)\n\t\t\t\t\treturn;\n\n\t\t\t\tnewNode = n.cloneNode(FALSE);\n\t\t\t\tnewNode.nodeValue = newNodeValue;\n\n\t\t\t\treturn newNode;\n\t\t\t}\n\n\t\t\tif (how == DELETE)\n\t\t\t\treturn;\n\n\t\t\treturn n.cloneNode(FALSE);\n\t\t};\n\n\t\tfunction _traverseFullySelected(n, how) {\n\t\t\tif (how != DELETE)\n\t\t\t\treturn how == CLONE ? n.cloneNode(TRUE) : n;\n\n\t\t\tn.parentNode.removeChild(n);\n\t\t};\n\t};\n\n\tns.Range = Range;\n})(tinymce.dom);\n","Magento_Tinymce3/tiny_mce/classes/dom/TreeWalker.js":"/**\n * TreeWalker.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\ntinymce.dom.TreeWalker = function(start_node, root_node) {\n\tvar node = start_node;\n\n\tfunction findSibling(node, start_name, sibling_name, shallow) {\n\t\tvar sibling, parent;\n\n\t\tif (node) {\n\t\t\t// Walk into nodes if it has a start\n\t\t\tif (!shallow && node[start_name])\n\t\t\t\treturn node[start_name];\n\n\t\t\t// Return the sibling if it has one\n\t\t\tif (node != root_node) {\n\t\t\t\tsibling = node[sibling_name];\n\t\t\t\tif (sibling)\n\t\t\t\t\treturn sibling;\n\n\t\t\t\t// Walk up the parents to look for siblings\n\t\t\t\tfor (parent = node.parentNode; parent && parent != root_node; parent = parent.parentNode) {\n\t\t\t\t\tsibling = parent[sibling_name];\n\t\t\t\t\tif (sibling)\n\t\t\t\t\t\treturn sibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Returns the current node.\n\t *\n\t * @return {Node} Current node where the walker is.\n\t */\n\tthis.current = function() {\n\t\treturn node;\n\t};\n\n\t/**\n\t * Walks to the next node in tree.\n\t *\n\t * @return {Node} Current node where the walker is after moving to the next node.\n\t */\n\tthis.next = function(shallow) {\n\t\treturn (node = findSibling(node, 'firstChild', 'nextSibling', shallow));\n\t};\n\n\t/**\n\t * Walks to the previous node in tree.\n\t *\n\t * @return {Node} Current node where the walker is after moving to the previous node.\n\t */\n\tthis.prev = function(shallow) {\n\t\treturn (node = findSibling(node, 'lastChild', 'previousSibling', shallow));\n\t};\n};\n","Magento_Tinymce3/tiny_mce/classes/dom/TridentSelection.js":"/**\n * TridentSelection.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function() {\n\tfunction Selection(selection) {\n\t\tvar self = this, dom = selection.dom, TRUE = true, FALSE = false;\n\n\t\tfunction getPosition(rng, start) {\n\t\t\tvar checkRng, startIndex = 0, endIndex, inside,\n\t\t\t\tchildren, child, offset, index, position = -1, parent;\n\n\t\t\t// Setup test range, collapse it and get the parent\n\t\t\tcheckRng = rng.duplicate();\n\t\t\tcheckRng.collapse(start);\n\t\t\tparent = checkRng.parentElement();\n\n\t\t\t// Check if the selection is within the right document\n\t\t\tif (parent.ownerDocument !== selection.dom.doc)\n\t\t\t\treturn;\n\n\t\t\t// IE will report non editable elements as it's parent so look for an editable one\n\t\t\twhile (parent.contentEditable === \"false\") {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\t// If parent doesn't have any children then return that we are inside the element\n\t\t\tif (!parent.hasChildNodes()) {\n\t\t\t\treturn {node : parent, inside : 1};\n\t\t\t}\n\n\t\t\t// Setup node list and endIndex\n\t\t\tchildren = parent.children;\n\t\t\tendIndex = children.length - 1;\n\n\t\t\t// Perform a binary search for the position\n\t\t\twhile (startIndex <= endIndex) {\n\t\t\t\tindex = Math.floor((startIndex + endIndex) / 2);\n\n\t\t\t\t// Move selection to node and compare the ranges\n\t\t\t\tchild = children[index];\n\t\t\t\tcheckRng.moveToElementText(child);\n\t\t\t\tposition = checkRng.compareEndPoints(start ? 'StartToStart' : 'EndToEnd', rng);\n\n\t\t\t\t// Before/after or an exact match\n\t\t\t\tif (position > 0) {\n\t\t\t\t\tendIndex = index - 1;\n\t\t\t\t} else if (position < 0) {\n\t\t\t\t\tstartIndex = index + 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn {node : child};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if child position is before or we didn't find a position\n\t\t\tif (position < 0) {\n\t\t\t\t// No element child was found use the parent element and the offset inside that\n\t\t\t\tif (!child) {\n\t\t\t\t\tcheckRng.moveToElementText(parent);\n\t\t\t\t\tcheckRng.collapse(true);\n\t\t\t\t\tchild = parent;\n\t\t\t\t\tinside = true;\n\t\t\t\t} else\n\t\t\t\t\tcheckRng.collapse(false);\n\n\t\t\t\tcheckRng.setEndPoint(start ? 'EndToStart' : 'EndToEnd', rng);\n\n\t\t\t\t// Fix for edge case: <div style=\"width: 100px; height:100px;\"><table>..</table>ab|c</div>\n\t\t\t\tif (checkRng.compareEndPoints(start ? 'StartToStart' : 'StartToEnd', rng) > 0) {\n\t\t\t\t\tcheckRng = rng.duplicate();\n\t\t\t\t\tcheckRng.collapse(start);\n\n\t\t\t\t\toffset = -1;\n\t\t\t\t\twhile (parent == checkRng.parentElement()) {\n\t\t\t\t\t\tif (checkRng.move('character', -1) == 0)\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toffset = offset || checkRng.text.replace('\\r\\n', ' ').length;\n\t\t\t} else {\n\t\t\t\t// Child position is after the selection endpoint\n\t\t\t\tcheckRng.collapse(true);\n\t\t\t\tcheckRng.setEndPoint(start ? 'StartToStart' : 'StartToEnd', rng);\n\n\t\t\t\t// Get the length of the text to find where the endpoint is relative to it's container\n\t\t\t\toffset = checkRng.text.replace('\\r\\n', ' ').length;\n\t\t\t}\n\n\t\t\treturn {node : child, position : position, offset : offset, inside : inside};\n\t\t};\n\n\t\t// Returns a W3C DOM compatible range object by using the IE Range API\n\t\tfunction getRange() {\n\t\t\tvar ieRange = selection.getRng(), domRange = dom.createRng(), element, collapsed, tmpRange, element2, bookmark, fail;\n\n\t\t\t// If selection is outside the current document just return an empty range\n\t\t\telement = ieRange.item ? ieRange.item(0) : ieRange.parentElement();\n\t\t\tif (element.ownerDocument != dom.doc)\n\t\t\t\treturn domRange;\n\n\t\t\tcollapsed = selection.isCollapsed();\n\n\t\t\t// Handle control selection\n\t\t\tif (ieRange.item) {\n\t\t\t\tdomRange.setStart(element.parentNode, dom.nodeIndex(element));\n\t\t\t\tdomRange.setEnd(domRange.startContainer, domRange.startOffset + 1);\n\n\t\t\t\treturn domRange;\n\t\t\t}\n\n\t\t\tfunction findEndPoint(start) {\n\t\t\t\tvar endPoint = getPosition(ieRange, start), container, offset, textNodeOffset = 0, sibling, undef, nodeValue;\n\n\t\t\t\tcontainer = endPoint.node;\n\t\t\t\toffset = endPoint.offset;\n\n\t\t\t\tif (endPoint.inside && !container.hasChildNodes()) {\n\t\t\t\t\tdomRange[start ? 'setStart' : 'setEnd'](container, 0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (offset === undef) {\n\t\t\t\t\tdomRange[start ? 'setStartBefore' : 'setEndAfter'](container);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (endPoint.position < 0) {\n\t\t\t\t\tsibling = endPoint.inside ? container.firstChild : container.nextSibling;\n\n\t\t\t\t\tif (!sibling) {\n\t\t\t\t\t\tdomRange[start ? 'setStartAfter' : 'setEndAfter'](container);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!offset) {\n\t\t\t\t\t\tif (sibling.nodeType == 3)\n\t\t\t\t\t\t\tdomRange[start ? 'setStart' : 'setEnd'](sibling, 0);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdomRange[start ? 'setStartBefore' : 'setEndBefore'](sibling);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Find the text node and offset\n\t\t\t\t\twhile (sibling) {\n\t\t\t\t\t\tnodeValue = sibling.nodeValue;\n\t\t\t\t\t\ttextNodeOffset += nodeValue.length;\n\n\t\t\t\t\t\t// We are at or passed the position we where looking for\n\t\t\t\t\t\tif (textNodeOffset >= offset) {\n\t\t\t\t\t\t\tcontainer = sibling;\n\t\t\t\t\t\t\ttextNodeOffset -= offset;\n\t\t\t\t\t\t\ttextNodeOffset = nodeValue.length - textNodeOffset;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsibling = sibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Find the text node and offset\n\t\t\t\t\tsibling = container.previousSibling;\n\n\t\t\t\t\tif (!sibling)\n\t\t\t\t\t\treturn domRange[start ? 'setStartBefore' : 'setEndBefore'](container);\n\n\t\t\t\t\t// If there isn't any text to loop then use the first position\n\t\t\t\t\tif (!offset) {\n\t\t\t\t\t\tif (container.nodeType == 3)\n\t\t\t\t\t\t\tdomRange[start ? 'setStart' : 'setEnd'](sibling, container.nodeValue.length);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdomRange[start ? 'setStartAfter' : 'setEndAfter'](sibling);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (sibling) {\n\t\t\t\t\t\ttextNodeOffset += sibling.nodeValue.length;\n\n\t\t\t\t\t\t// We are at or passed the position we where looking for\n\t\t\t\t\t\tif (textNodeOffset >= offset) {\n\t\t\t\t\t\t\tcontainer = sibling;\n\t\t\t\t\t\t\ttextNodeOffset -= offset;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsibling = sibling.previousSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdomRange[start ? 'setStart' : 'setEnd'](container, textNodeOffset);\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\t// Find start point\n\t\t\t\tfindEndPoint(true);\n\n\t\t\t\t// Find end point if needed\n\t\t\t\tif (!collapsed)\n\t\t\t\t\tfindEndPoint();\n\t\t\t} catch (ex) {\n\t\t\t\t// IE has a nasty bug where text nodes might throw \"invalid argument\" when you\n\t\t\t\t// access the nodeValue or other properties of text nodes. This seems to happend when\n\t\t\t\t// text nodes are split into two nodes by a delete/backspace call. So lets detect it and try to fix it.\n\t\t\t\tif (ex.number == -2147024809) {\n\t\t\t\t\t// Get the current selection\n\t\t\t\t\tbookmark = self.getBookmark(2);\n\n\t\t\t\t\t// Get start element\n\t\t\t\t\ttmpRange = ieRange.duplicate();\n\t\t\t\t\ttmpRange.collapse(true);\n\t\t\t\t\telement = tmpRange.parentElement();\n\n\t\t\t\t\t// Get end element\n\t\t\t\t\tif (!collapsed) {\n\t\t\t\t\t\ttmpRange = ieRange.duplicate();\n\t\t\t\t\t\ttmpRange.collapse(false);\n\t\t\t\t\t\telement2 = tmpRange.parentElement();\n\t\t\t\t\t\telement2.innerHTML = element2.innerHTML;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove the broken elements\n\t\t\t\t\telement.innerHTML = element.innerHTML;\n\n\t\t\t\t\t// Restore the selection\n\t\t\t\t\tself.moveToBookmark(bookmark);\n\n\t\t\t\t\t// Since the range has moved we need to re-get it\n\t\t\t\t\tieRange = selection.getRng();\n\n\t\t\t\t\t// Find start point\n\t\t\t\t\tfindEndPoint(true);\n\n\t\t\t\t\t// Find end point if needed\n\t\t\t\t\tif (!collapsed)\n\t\t\t\t\t\tfindEndPoint();\n\t\t\t\t} else\n\t\t\t\t\tthrow ex; // Throw other errors\n\t\t\t}\n\n\t\t\treturn domRange;\n\t\t};\n\n\t\tthis.getBookmark = function(type) {\n\t\t\tvar rng = selection.getRng(), start, end, bookmark = {};\n\n\t\t\tfunction getIndexes(node) {\n\t\t\t\tvar node, parent, root, children, i, indexes = [];\n\n\t\t\t\tparent = node.parentNode;\n\t\t\t\troot = dom.getRoot().parentNode;\n\n\t\t\t\twhile (parent != root && parent.nodeType !== 9) {\n\t\t\t\t\tchildren = parent.children;\n\n\t\t\t\t\ti = children.length;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (node === children[i]) {\n\t\t\t\t\t\t\tindexes.push(i);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnode = parent;\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\n\t\t\t\treturn indexes;\n\t\t\t};\n\n\t\t\tfunction getBookmarkEndPoint(start) {\n\t\t\t\tvar position;\n\n\t\t\t\tposition = getPosition(rng, start);\n\t\t\t\tif (position) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tposition : position.position,\n\t\t\t\t\t\toffset : position.offset,\n\t\t\t\t\t\tindexes : getIndexes(position.node),\n\t\t\t\t\t\tinside : position.inside\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Non ubstructive bookmark\n\t\t\tif (type === 2) {\n\t\t\t\t// Handle text selection\n\t\t\t\tif (!rng.item) {\n\t\t\t\t\tbookmark.start = getBookmarkEndPoint(true);\n\n\t\t\t\t\tif (!selection.isCollapsed())\n\t\t\t\t\t\tbookmark.end = getBookmarkEndPoint();\n\t\t\t\t} else\n\t\t\t\t\tbookmark.start = {ctrl : true, indexes : getIndexes(rng.item(0))};\n\t\t\t}\n\n\t\t\treturn bookmark;\n\t\t};\n\n\t\tthis.moveToBookmark = function(bookmark) {\n\t\t\tvar rng, body = dom.doc.body;\n\n\t\t\tfunction resolveIndexes(indexes) {\n\t\t\t\tvar node, i, idx, children;\n\n\t\t\t\tnode = dom.getRoot();\n\t\t\t\tfor (i = indexes.length - 1; i >= 0; i--) {\n\t\t\t\t\tchildren = node.children;\n\t\t\t\t\tidx = indexes[i];\n\n\t\t\t\t\tif (idx <= children.length - 1) {\n\t\t\t\t\t\tnode = children[idx];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn node;\n\t\t\t};\n\t\t\t\n\t\t\tfunction setBookmarkEndPoint(start) {\n\t\t\t\tvar endPoint = bookmark[start ? 'start' : 'end'], moveLeft, moveRng, undef;\n\n\t\t\t\tif (endPoint) {\n\t\t\t\t\tmoveLeft = endPoint.position > 0;\n\n\t\t\t\t\tmoveRng = body.createTextRange();\n\t\t\t\t\tmoveRng.moveToElementText(resolveIndexes(endPoint.indexes));\n\n\t\t\t\t\toffset = endPoint.offset;\n\t\t\t\t\tif (offset !== undef) {\n\t\t\t\t\t\tmoveRng.collapse(endPoint.inside || moveLeft);\n\t\t\t\t\t\tmoveRng.moveStart('character', moveLeft ? -offset : offset);\n\t\t\t\t\t} else\n\t\t\t\t\t\tmoveRng.collapse(start);\n\n\t\t\t\t\trng.setEndPoint(start ? 'StartToStart' : 'EndToStart', moveRng);\n\n\t\t\t\t\tif (start)\n\t\t\t\t\t\trng.collapse(true);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (bookmark.start) {\n\t\t\t\tif (bookmark.start.ctrl) {\n\t\t\t\t\trng = body.createControlRange();\n\t\t\t\t\trng.addElement(resolveIndexes(bookmark.start.indexes));\n\t\t\t\t\trng.select();\n\t\t\t\t} else {\n\t\t\t\t\trng = body.createTextRange();\n\t\t\t\t\tsetBookmarkEndPoint(true);\n\t\t\t\t\tsetBookmarkEndPoint();\n\t\t\t\t\trng.select();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.addRange = function(rng) {\n\t\t\tvar ieRng, ctrlRng, startContainer, startOffset, endContainer, endOffset, doc = selection.dom.doc, body = doc.body;\n\n\t\t\tfunction setEndPoint(start) {\n\t\t\t\tvar container, offset, marker, tmpRng, nodes;\n\n\t\t\t\tmarker = dom.create('a');\n\t\t\t\tcontainer = start ? startContainer : endContainer;\n\t\t\t\toffset = start ? startOffset : endOffset;\n\t\t\t\ttmpRng = ieRng.duplicate();\n\n\t\t\t\tif (container == doc || container == doc.documentElement) {\n\t\t\t\t\tcontainer = body;\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\n\t\t\t\tif (container.nodeType == 3) {\n\t\t\t\t\tcontainer.parentNode.insertBefore(marker, container);\n\t\t\t\t\ttmpRng.moveToElementText(marker);\n\t\t\t\t\ttmpRng.moveStart('character', offset);\n\t\t\t\t\tdom.remove(marker);\n\t\t\t\t\tieRng.setEndPoint(start ? 'StartToStart' : 'EndToEnd', tmpRng);\n\t\t\t\t} else {\n\t\t\t\t\tnodes = container.childNodes;\n\n\t\t\t\t\tif (nodes.length) {\n\t\t\t\t\t\tif (offset >= nodes.length) {\n\t\t\t\t\t\t\tdom.insertAfter(marker, nodes[nodes.length - 1]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontainer.insertBefore(marker, nodes[offset]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttmpRng.moveToElementText(marker);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Empty node selection for example <div>|</div>\n\t\t\t\t\t\tmarker = doc.createTextNode('\\uFEFF');\n\t\t\t\t\t\tcontainer.appendChild(marker);\n\t\t\t\t\t\ttmpRng.moveToElementText(marker.parentNode);\n\t\t\t\t\t\ttmpRng.collapse(TRUE);\n\t\t\t\t\t}\n\n\t\t\t\t\tieRng.setEndPoint(start ? 'StartToStart' : 'EndToEnd', tmpRng);\n\t\t\t\t\tdom.remove(marker);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Setup some shorter versions\n\t\t\tstartContainer = rng.startContainer;\n\t\t\tstartOffset = rng.startOffset;\n\t\t\tendContainer = rng.endContainer;\n\t\t\tendOffset = rng.endOffset;\n\t\t\tieRng = body.createTextRange();\n\n\t\t\t// If single element selection then try making a control selection out of it\n\t\t\tif (startContainer == endContainer && startContainer.nodeType == 1 && startOffset == endOffset - 1) {\n\t\t\t\tif (startOffset == endOffset - 1) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tctrlRng = body.createControlRange();\n\t\t\t\t\t\tctrlRng.addElement(startContainer.childNodes[startOffset]);\n\t\t\t\t\t\tctrlRng.select();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t// Ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set start/end point of selection\n\t\t\tsetEndPoint(true);\n\t\t\tsetEndPoint();\n\n\t\t\t// Select the new range and scroll it into view\n\t\t\tieRng.select();\n\t\t};\n\n\t\t// Expose range method\n\t\tthis.getRangeAt = getRange;\n\t};\n\n\t// Expose the selection object\n\ttinymce.dom.TridentSelection = Selection;\n})();\n","Magento_Tinymce3/tiny_mce/classes/dom/Serializer.js":"/**\n * Serializer.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\t/**\n\t * This class is used to serialize DOM trees into a string. Consult the TinyMCE Wiki API for more details and examples on how to use this class. \n\t *\n\t * @class tinymce.dom.Serializer\n\t */\n\n\t/**\n\t * Constucts a new DOM serializer class.\n\t *\n\t * @constructor\n\t * @method Serializer\n\t * @param {Object} settings Serializer settings object.\n\t * @param {tinymce.dom.DOMUtils} dom DOMUtils instance reference.\n\t * @param {tinymce.html.Schema} schema Optional schema reference.\n\t */\n\ttinymce.dom.Serializer = function(settings, dom, schema) {\n\t\tvar onPreProcess, onPostProcess, isIE = tinymce.isIE, each = tinymce.each, htmlParser;\n\n\t\t// Support the old apply_source_formatting option\n\t\tif (!settings.apply_source_formatting)\n\t\t\tsettings.indent = false;\n\n\t\tsettings.remove_trailing_brs = true;\n\n\t\t// Default DOM and Schema if they are undefined\n\t\tdom = dom || tinymce.DOM;\n\t\tschema = schema || new tinymce.html.Schema(settings);\n\t\tsettings.entity_encoding = settings.entity_encoding || 'named';\n\n\t\t/**\n\t\t * This event gets executed before a HTML fragment gets serialized into a HTML string. This event enables you to do modifications to the DOM before the serialization occurs. It's important to know that the element that is getting serialized is cloned so it's not inside a document.\n\t\t *\n\t\t * @event onPreProcess\n\t\t * @param {tinymce.dom.Serializer} sender object/Serializer instance that is serializing an element.\n\t\t * @param {Object} args Object containing things like the current node.\n\t\t * @example\n\t\t * // Adds an observer to the onPreProcess event\n\t\t * serializer.onPreProcess.add(function(se, o) {\n\t\t *     // Add a class to each paragraph\n\t\t *     se.dom.addClass(se.dom.select('p', o.node), 'myclass');\n\t\t * });\n\t\t */\n\t\tonPreProcess = new tinymce.util.Dispatcher(self);\n\n\t\t/**\n\t\t * This event gets executed after a HTML fragment has been serialized into a HTML string. This event enables you to do modifications to the HTML string like regexp replaces etc. \n\t\t *\n\t\t * @event onPreProcess\n\t\t * @param {tinymce.dom.Serializer} sender object/Serializer instance that is serializing an element.\n\t\t * @param {Object} args Object containing things like the current contents. \n\t\t * @example\n\t\t * // Adds an observer to the onPostProcess event\n\t\t * serializer.onPostProcess.add(function(se, o) {\n\t\t *    // Remove all paragraphs and replace with BR\n\t\t *    o.content = o.content.replace(/<p[^>]+>|<p>/g, '');\n\t\t *    o.content = o.content.replace(/<\\/p>/g, '<br />');\n\t\t * });\n\t\t */\n\t\tonPostProcess = new tinymce.util.Dispatcher(self);\n\n\t\thtmlParser = new tinymce.html.DomParser(settings, schema);\n\n\t\t// Convert move data-mce-src, data-mce-href and data-mce-style into nodes or process them if needed\n\t\thtmlParser.addAttributeFilter('src,href,style', function(nodes, name) {\n\t\t\tvar i = nodes.length, node, value, internalName = 'data-mce-' + name, urlConverter = settings.url_converter, urlConverterScope = settings.url_converter_scope, undef;\n\n\t\t\twhile (i--) {\n\t\t\t\tnode = nodes[i];\n\n\t\t\t\tvalue = node.attributes.map[internalName];\n\t\t\t\tif (value !== undef) {\n\t\t\t\t\t// Set external name to internal value and remove internal\n\t\t\t\t\tnode.attr(name, value.length > 0 ? value : null);\n\t\t\t\t\tnode.attr(internalName, null);\n\t\t\t\t} else {\n\t\t\t\t\t// No internal attribute found then convert the value we have in the DOM\n\t\t\t\t\tvalue = node.attributes.map[name];\n\n\t\t\t\t\tif (name === \"style\")\n\t\t\t\t\t\tvalue = dom.serializeStyle(dom.parseStyle(value), node.name);\n\t\t\t\t\telse if (urlConverter)\n\t\t\t\t\t\tvalue = urlConverter.call(urlConverterScope, value, name, node.name);\n\n\t\t\t\t\tnode.attr(name, value.length > 0 ? value : null);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Remove internal classes mceItem<..>\n\t\thtmlParser.addAttributeFilter('class', function(nodes, name) {\n\t\t\tvar i = nodes.length, node, value;\n\n\t\t\twhile (i--) {\n\t\t\t\tnode = nodes[i];\n\t\t\t\tvalue = node.attr('class').replace(/\\s*mce(Item\\w+|Selected)\\s*/g, '');\n\t\t\t\tnode.attr('class', value.length > 0 ? value : null);\n\t\t\t}\n\t\t});\n\n\t\t// Remove bookmark elements\n\t\thtmlParser.addAttributeFilter('data-mce-type', function(nodes, name, args) {\n\t\t\tvar i = nodes.length, node;\n\n\t\t\twhile (i--) {\n\t\t\t\tnode = nodes[i];\n\n\t\t\t\tif (node.attributes.map['data-mce-type'] === 'bookmark' && !args.cleanup)\n\t\t\t\t\tnode.remove();\n\t\t\t}\n\t\t});\n\n\t\t// Force script into CDATA sections and remove the mce- prefix also add comments around styles\n\t\thtmlParser.addNodeFilter('script,style', function(nodes, name) {\n\t\t\tvar i = nodes.length, node, value;\n\n\t\t\tfunction trim(value) {\n\t\t\t\treturn value.replace(/(<!--\\[CDATA\\[|\\]\\]-->)/g, '\\n')\n\t\t\t\t\t\t.replace(/^[\\r\\n]*|[\\r\\n]*$/g, '')\n\t\t\t\t\t\t.replace(/^\\s*(\\/\\/\\s*<!--|\\/\\/\\s*<!\\[CDATA\\[|<!--|<!\\[CDATA\\[)[\\r\\n]*/g, '')\n\t\t\t\t\t\t.replace(/\\s*(\\/\\/\\s*\\]\\]>|\\/\\/\\s*-->|\\]\\]>|-->|\\]\\]-->)\\s*$/g, '');\n\t\t\t};\n\n\t\t\twhile (i--) {\n\t\t\t\tnode = nodes[i];\n\t\t\t\tvalue = node.firstChild ? node.firstChild.value : '';\n\n\t\t\t\tif (name === \"script\") {\n\t\t\t\t\t// Remove mce- prefix from script elements\n\t\t\t\t\tnode.attr('type', (node.attr('type') || 'text/javascript').replace(/^mce\\-/, ''));\n\n\t\t\t\t\tif (value.length > 0)\n\t\t\t\t\t\tnode.firstChild.value = '// <![CDATA[\\n' + trim(value) + '\\n// ]]>';\n\t\t\t\t} else {\n\t\t\t\t\tif (value.length > 0)\n\t\t\t\t\t\tnode.firstChild.value = '<!--\\n' + trim(value) + '\\n-->';\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Convert comments to cdata and handle protected comments\n\t\thtmlParser.addNodeFilter('#comment', function(nodes, name) {\n\t\t\tvar i = nodes.length, node;\n\n\t\t\twhile (i--) {\n\t\t\t\tnode = nodes[i];\n\n\t\t\t\tif (node.value.indexOf('[CDATA[') === 0) {\n\t\t\t\t\tnode.name = '#cdata';\n\t\t\t\t\tnode.type = 4;\n\t\t\t\t\tnode.value = node.value.replace(/^\\[CDATA\\[|\\]\\]$/g, '');\n\t\t\t\t} else if (node.value.indexOf('mce:protected ') === 0) {\n\t\t\t\t\tnode.name = \"#text\";\n\t\t\t\t\tnode.type = 3;\n\t\t\t\t\tnode.raw = true;\n\t\t\t\t\tnode.value = unescape(node.value).substr(14);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\thtmlParser.addNodeFilter('xml:namespace,input', function(nodes, name) {\n\t\t\tvar i = nodes.length, node;\n\n\t\t\twhile (i--) {\n\t\t\t\tnode = nodes[i];\n\t\t\t\tif (node.type === 7)\n\t\t\t\t\tnode.remove();\n\t\t\t\telse if (node.type === 1) {\n\t\t\t\t\tif (name === \"input\" && !(\"type\" in node.attributes.map))\n\t\t\t\t\t\tnode.attr('type', 'text');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Fix list elements, TODO: Replace this later\n\t\tif (settings.fix_list_elements) {\n\t\t\thtmlParser.addNodeFilter('ul,ol', function(nodes, name) {\n\t\t\t\tvar i = nodes.length, node, parentNode;\n\n\t\t\t\twhile (i--) {\n\t\t\t\t\tnode = nodes[i];\n\t\t\t\t\tparentNode = node.parent;\n\n\t\t\t\t\tif (parentNode.name === 'ul' || parentNode.name === 'ol') {\n\t\t\t\t\t\tif (node.prev && node.prev.name === 'li') {\n\t\t\t\t\t\t\tnode.prev.append(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Remove internal data attributes\n\t\thtmlParser.addAttributeFilter('data-mce-src,data-mce-href,data-mce-style', function(nodes, name) {\n\t\t\tvar i = nodes.length;\n\n\t\t\twhile (i--) {\n\t\t\t\tnodes[i].attr(name, null);\n\t\t\t}\n\t\t});\n\n\t\t// Return public methods\n\t\treturn {\n\t\t\t/**\n\t\t\t * Schema instance that was used to when the Serializer was constructed.\n\t\t\t *\n\t\t\t * @field {tinymce.html.Schema} schema\n\t\t\t */\n\t\t\tschema : schema,\n\n\t\t\t/**\n\t\t\t * Adds a node filter function to the parser used by the serializer, the parser will collect the specified nodes by name\n\t\t\t * and then execute the callback ones it has finished parsing the document.\n\t\t\t *\n\t\t\t * @example\n\t\t\t * parser.addNodeFilter('p,h1', function(nodes, name) {\n\t\t\t *\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t\t *\t\t\tconsole.log(nodes[i].name);\n\t\t\t *\t\t}\n\t\t\t * });\n\t\t\t * @method addNodeFilter\n\t\t\t * @method {String} name Comma separated list of nodes to collect.\n\t\t\t * @param {function} callback Callback function to execute once it has collected nodes.\n\t\t\t */\n\t\t\taddNodeFilter : htmlParser.addNodeFilter,\n\n\t\t\t/**\n\t\t\t * Adds a attribute filter function to the parser used by the serializer, the parser will collect nodes that has the specified attributes\n\t\t\t * and then execute the callback ones it has finished parsing the document.\n\t\t\t *\n\t\t\t * @example\n\t\t\t * parser.addAttributeFilter('src,href', function(nodes, name) {\n\t\t\t *\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t\t *\t\t\tconsole.log(nodes[i].name);\n\t\t\t *\t\t}\n\t\t\t * });\n\t\t\t * @method addAttributeFilter\n\t\t\t * @method {String} name Comma separated list of nodes to collect.\n\t\t\t * @param {function} callback Callback function to execute once it has collected nodes.\n\t\t\t */\n\t\t\taddAttributeFilter : htmlParser.addAttributeFilter,\n\n\t\t\t/**\n\t\t\t * Fires when the Serializer does a preProcess on the contents.\n\t\t\t *\n\t\t\t * @event onPreProcess\n\t\t\t * @param {tinymce.Editor} sender Editor instance.\n\t\t\t * @param {Object} obj PreProcess object.\n\t\t\t * @option {Node} node DOM node for the item being serialized.\n\t\t\t * @option {String} format The specified output format normally \"html\".\n\t\t\t * @option {Boolean} get Is true if the process is on a getContent operation.\n\t\t\t * @option {Boolean} set Is true if the process is on a setContent operation.\n\t\t\t * @option {Boolean} cleanup Is true if the process is on a cleanup operation.\n\t\t\t */\n\t\t\tonPreProcess : onPreProcess,\n\n\t\t\t/**\n\t\t\t * Fires when the Serializer does a postProcess on the contents.\n\t\t\t *\n\t\t\t * @event onPostProcess\n\t\t\t * @param {tinymce.Editor} sender Editor instance.\n\t\t\t * @param {Object} obj PreProcess object.\n\t\t\t */\n\t\t\tonPostProcess : onPostProcess,\n\n\t\t\t/**\n\t\t\t * Serializes the specified browser DOM node into a HTML string.\n\t\t\t *\n\t\t\t * @method serialize\n\t\t\t * @param {DOMNode} node DOM node to serialize.\n\t\t\t * @param {Object} args Arguments option that gets passed to event handlers.\n\t\t\t */\n\t\t\tserialize : function(node, args) {\n\t\t\t\tvar impl, doc, oldDoc, htmlSerializer, content;\n\n\t\t\t\t// Explorer won't clone contents of script and style and the\n\t\t\t\t// selected index of select elements are cleared on a clone operation.\n\t\t\t\tif (isIE && dom.select('script,style,select,map').length > 0) {\n\t\t\t\t\tcontent = node.innerHTML;\n\t\t\t\t\tnode = node.cloneNode(false);\n\t\t\t\t\tdom.setHTML(node, content);\n\t\t\t\t} else\n\t\t\t\t\tnode = node.cloneNode(true);\n\n\t\t\t\t// Nodes needs to be attached to something in WebKit/Opera\n\t\t\t\t// Older builds of Opera crashes if you attach the node to an document created dynamically\n\t\t\t\t// and since we can't feature detect a crash we need to sniff the acutal build number\n\t\t\t\t// This fix will make DOM ranges and make Sizzle happy!\n\t\t\t\timpl = node.ownerDocument.implementation;\n\t\t\t\tif (impl.createHTMLDocument) {\n\t\t\t\t\t// Create an empty HTML document\n\t\t\t\t\tdoc = impl.createHTMLDocument(\"\");\n\n\t\t\t\t\t// Add the element or it's children if it's a body element to the new document\n\t\t\t\t\teach(node.nodeName == 'BODY' ? node.childNodes : [node], function(node) {\n\t\t\t\t\t\tdoc.body.appendChild(doc.importNode(node, true));\n\t\t\t\t\t});\n\n\t\t\t\t\t// Grab first child or body element for serialization\n\t\t\t\t\tif (node.nodeName != 'BODY')\n\t\t\t\t\t\tnode = doc.body.firstChild;\n\t\t\t\t\telse\n\t\t\t\t\t\tnode = doc.body;\n\n\t\t\t\t\t// set the new document in DOMUtils so createElement etc works\n\t\t\t\t\toldDoc = dom.doc;\n\t\t\t\t\tdom.doc = doc;\n\t\t\t\t}\n\n\t\t\t\targs = args || {};\n\t\t\t\targs.format = args.format || 'html';\n\n\t\t\t\t// Pre process\n\t\t\t\tif (!args.no_events) {\n\t\t\t\t\targs.node = node;\n\t\t\t\t\tonPreProcess.dispatch(self, args);\n\t\t\t\t}\n\n\t\t\t\t// Setup serializer\n\t\t\t\thtmlSerializer = new tinymce.html.Serializer(settings, schema);\n\n\t\t\t\t// Parse and serialize HTML\n\t\t\t\targs.content = htmlSerializer.serialize(\n\t\t\t\t\thtmlParser.parse(args.getInner ? node.innerHTML : tinymce.trim(dom.getOuterHTML(node), args), args)\n\t\t\t\t);\n\n\t\t\t\t// Replace all BOM characters for now until we can find a better solution\n\t\t\t\tif (!args.cleanup)\n\t\t\t\t\targs.content = args.content.replace(/\\uFEFF|\\u200B/g, '');\n\n\t\t\t\t// Post process\n\t\t\t\tif (!args.no_events)\n\t\t\t\t\tonPostProcess.dispatch(self, args);\n\n\t\t\t\t// Restore the old document if it was changed\n\t\t\t\tif (oldDoc)\n\t\t\t\t\tdom.doc = oldDoc;\n\n\t\t\t\targs.node = null;\n\n\t\t\t\treturn args.content;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Adds valid elements rules to the serializers schema instance this enables you to specify things\n\t\t\t * like what elements should be outputted and what attributes specific elements might have.\n\t\t\t * Consult the Wiki for more details on this format.\n\t\t\t *\n\t\t\t * @method addRules\n\t\t\t * @param {String} rules Valid elements rules string to add to schema.\n\t\t\t */\n\t\t\taddRules : function(rules) {\n\t\t\t\tschema.addValidElements(rules);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the valid elements rules to the serializers schema instance this enables you to specify things\n\t\t\t * like what elements should be outputted and what attributes specific elements might have.\n\t\t\t * Consult the Wiki for more details on this format.\n\t\t\t *\n\t\t\t * @method setRules\n\t\t\t * @param {String} rules Valid elements rules string.\n\t\t\t */\n\t\t\tsetRules : function(rules) {\n\t\t\t\tschema.setValidElements(rules);\n\t\t\t}\n\t\t};\n\t};\n})(tinymce);","Magento_Tinymce3/tiny_mce/classes/dom/Element.js":"/**\n * Element.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\t/**\n\t * Element class, this enables element blocking in IE. Element blocking is a method to block out select blockes that\n\t * gets visible though DIVs on IE 6 it uses a iframe for this blocking. This class also shortens the length of some DOM API calls\n\t * since it's bound to an element.\n\t *\n\t * @class tinymce.dom.Element\n\t * @example\n\t * // Creates an basic element for an existing element\n\t * var elm = new tinymce.dom.Element('someid');\n\t * \n\t * elm.setStyle('background-color', 'red');\n\t * elm.moveTo(10, 10);\n\t */\n\n\t/**\n\t * Constructs a new Element instance. Consult the Wiki for more details on this class.\n\t *\n\t * @constructor\n\t * @method Element\n\t * @param {String} id Element ID to bind/execute methods on.\n\t * @param {Object} settings Optional settings name/value collection.\n\t */\n\ttinymce.dom.Element = function(id, settings) {\n\t\tvar t = this, dom, el;\n\n\t\tt.settings = settings = settings || {};\n\t\tt.id = id;\n\t\tt.dom = dom = settings.dom || tinymce.DOM;\n\n\t\t// Only IE leaks DOM references, this is a lot faster\n\t\tif (!tinymce.isIE)\n\t\t\tel = dom.get(t.id);\n\n\t\ttinymce.each(\n\t\t\t\t('getPos,getRect,getParent,add,setStyle,getStyle,setStyles,' + \n\t\t\t\t'setAttrib,setAttribs,getAttrib,addClass,removeClass,' + \n\t\t\t\t'hasClass,getOuterHTML,setOuterHTML,remove,show,hide,' + \n\t\t\t\t'isHidden,setHTML,get').split(/,/)\n\t\t\t, function(k) {\n\t\t\t\tt[k] = function() {\n\t\t\t\t\tvar a = [id], i;\n\n\t\t\t\t\tfor (i = 0; i < arguments.length; i++)\n\t\t\t\t\t\ta.push(arguments[i]);\n\n\t\t\t\t\ta = dom[k].apply(dom, a);\n\t\t\t\t\tt.update(k);\n\n\t\t\t\t\treturn a;\n\t\t\t\t};\n\t\t});\n\n\t\ttinymce.extend(t, {\n\t\t\t/**\n\t\t\t * Adds a event handler to the element.\n\t\t\t *\n\t\t\t * @method on\n\t\t\t * @param {String} n Event name like for example \"click\".\n\t\t\t * @param {function} f Function to execute on the specified event.\n\t\t\t * @param {Object} s Optional scope to execute function on.\n\t\t\t * @return {function} Event handler function the same as the input function.\n\t\t\t */\n\t\t\ton : function(n, f, s) {\n\t\t\t\treturn tinymce.dom.Event.add(t.id, n, f, s);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the absolute X, Y cordinate of the element.\n\t\t\t *\n\t\t\t * @method getXY\n\t\t\t * @return {Object} Objext with x, y cordinate fields.\n\t\t\t */\n\t\t\tgetXY : function() {\n\t\t\t\treturn {\n\t\t\t\t\tx : parseInt(t.getStyle('left')),\n\t\t\t\t\ty : parseInt(t.getStyle('top'))\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the size of the element by a object with w and h fields.\n\t\t\t *\n\t\t\t * @method getSize\n\t\t\t * @return {Object} Object with element size with a w and h field.\n\t\t\t */\n\t\t\tgetSize : function() {\n\t\t\t\tvar n = dom.get(t.id);\n\n\t\t\t\treturn {\n\t\t\t\t\tw : parseInt(t.getStyle('width') || n.clientWidth),\n\t\t\t\t\th : parseInt(t.getStyle('height') || n.clientHeight)\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Moves the element to a specific absolute position.\n\t\t\t *\n\t\t\t * @method moveTo\n\t\t\t * @param {Number} x X cordinate of element position.\n\t\t\t * @param {Number} y Y cordinate of element position.\n\t\t\t */\n\t\t\tmoveTo : function(x, y) {\n\t\t\t\tt.setStyles({left : x, top : y});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Moves the element relative to the current position.\n\t\t\t *\n\t\t\t * @method moveBy\n\t\t\t * @param {Number} x Relative X cordinate of element position.\n\t\t\t * @param {Number} y Relative Y cordinate of element position.\n\t\t\t */\n\t\t\tmoveBy : function(x, y) {\n\t\t\t\tvar p = t.getXY();\n\n\t\t\t\tt.moveTo(p.x + x, p.y + y);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Resizes the element to a specific size.\n\t\t\t *\n\t\t\t * @method resizeTo\n\t\t\t * @param {Number} w New width of element.\n\t\t\t * @param {Numner} h New height of element.\n\t\t\t */\n\t\t\tresizeTo : function(w, h) {\n\t\t\t\tt.setStyles({width : w, height : h});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Resizes the element relative to the current sizeto a specific size.\n\t\t\t *\n\t\t\t * @method resizeBy\n\t\t\t * @param {Number} w Relative width of element.\n\t\t\t * @param {Numner} h Relative height of element.\n\t\t\t */\n\t\t\tresizeBy : function(w, h) {\n\t\t\t\tvar s = t.getSize();\n\n\t\t\t\tt.resizeTo(s.w + w, s.h + h);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Updates the element blocker in IE6 based on the style information of the element.\n\t\t\t *\n\t\t\t * @method update\n\t\t\t * @param {String} k Optional function key. Used internally.\n\t\t\t */\n\t\t\tupdate : function(k) {\n\t\t\t\tvar b;\n\n\t\t\t\tif (tinymce.isIE6 && settings.blocker) {\n\t\t\t\t\tk = k || '';\n\n\t\t\t\t\t// Ignore getters\n\t\t\t\t\tif (k.indexOf('get') === 0 || k.indexOf('has') === 0 || k.indexOf('is') === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t// Remove blocker on remove\n\t\t\t\t\tif (k == 'remove') {\n\t\t\t\t\t\tdom.remove(t.blocker);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!t.blocker) {\n\t\t\t\t\t\tt.blocker = dom.uniqueId();\n\t\t\t\t\t\tb = dom.add(settings.container || dom.getRoot(), 'iframe', {id : t.blocker, style : 'position:absolute;', frameBorder : 0, src : 'javascript:\"\"'});\n\t\t\t\t\t\tdom.setStyle(b, 'opacity', 0);\n\t\t\t\t\t} else\n\t\t\t\t\t\tb = dom.get(t.blocker);\n\n\t\t\t\t\tdom.setStyles(b, {\n\t\t\t\t\t\tleft : t.getStyle('left', 1),\n\t\t\t\t\t\ttop : t.getStyle('top', 1),\n\t\t\t\t\t\twidth : t.getStyle('width', 1),\n\t\t\t\t\t\theight : t.getStyle('height', 1),\n\t\t\t\t\t\tdisplay : t.getStyle('display', 1),\n\t\t\t\t\t\tzIndex : parseInt(t.getStyle('zIndex', 1) || 0) - 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/dom/ScriptLoader.js":"/**\n * ScriptLoader.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\t/**\n\t * This class handles asynchronous/synchronous loading of JavaScript files it will execute callbacks when various items gets loaded. This class is useful to load external JavaScript files. \n\t *\n\t * @class tinymce.dom.ScriptLoader\n\t * @example\n\t * // Load a script from a specific URL using the global script loader\n\t * tinymce.ScriptLoader.load('somescript.js');\n\t * \n\t * // Load a script using a unique instance of the script loader\n\t * var scriptLoader = new tinymce.dom.ScriptLoader();\n\t * \n\t * scriptLoader.load('somescript.js');\n\t * \n\t * // Load multiple scripts\n\t * var scriptLoader = new tinymce.dom.ScriptLoader();\n\t * \n\t * scriptLoader.add('somescript1.js');\n\t * scriptLoader.add('somescript2.js');\n\t * scriptLoader.add('somescript3.js');\n\t * \n\t * scriptLoader.loadQueue(function() {\n\t *    alert('All scripts are now loaded.');\n\t * });\n\t */\n\ttinymce.dom.ScriptLoader = function(settings) {\n\t\tvar QUEUED = 0,\n\t\t\tLOADING = 1,\n\t\t\tLOADED = 2,\n\t\t\tstates = {},\n\t\t\tqueue = [],\n\t\t\tscriptLoadedCallbacks = {},\n\t\t\tqueueLoadedCallbacks = [],\n\t\t\tloading = 0,\n\t\t\tundefined;\n\n\t\t/**\n\t\t * Loads a specific script directly without adding it to the load queue.\n\t\t *\n\t\t * @method load\n\t\t * @param {String} url Absolute URL to script to add.\n\t\t * @param {function} callback Optional callback function to execute ones this script gets loaded.\n\t\t * @param {Object} scope Optional scope to execute callback in.\n\t\t */\n\t\tfunction loadScript(url, callback) {\n\t\t\tvar t = this, dom = tinymce.DOM, elm, uri, loc, id;\n\n\t\t\t// Execute callback when script is loaded\n\t\t\tfunction done() {\n\t\t\t\tdom.remove(id);\n\n\t\t\t\tif (elm)\n\t\t\t\t\telm.onreadystatechange = elm.onload = elm = null;\n\n\t\t\t\tcallback();\n\t\t\t};\n\t\t\t\n\t\t\tfunction error() {\n\t\t\t\t// Report the error so it's easier for people to spot loading errors\n\t\t\t\tif (typeof(console) !== \"undefined\" && console.log)\n\t\t\t\t\tconsole.log(\"Failed to load: \" + url);\n\n\t\t\t\t// We can't mark it as done if there is a load error since\n\t\t\t\t// A) We don't want to produce 404 errors on the server and\n\t\t\t\t// B) the onerror event won't fire on all browsers.\n\t\t\t\t// done();\n\t\t\t};\n\n\t\t\tid = dom.uniqueId();\n\n\t\t\tif (tinymce.isIE6) {\n\t\t\t\turi = new tinymce.util.URI(url);\n\t\t\t\tloc = location;\n\n\t\t\t\t// If script is from same domain and we\n\t\t\t\t// use IE 6 then use XHR since it's more reliable\n\t\t\t\tif (uri.host == loc.hostname && uri.port == loc.port && (uri.protocol + ':') == loc.protocol && uri.protocol.toLowerCase() != 'file') {\n\t\t\t\t\ttinymce.util.XHR.send({\n\t\t\t\t\t\turl : tinymce._addVer(uri.getURI()),\n\t\t\t\t\t\tsuccess : function(content) {\n\t\t\t\t\t\t\t// Create new temp script element\n\t\t\t\t\t\t\tvar script = dom.create('script', {\n\t\t\t\t\t\t\t\ttype : 'text/javascript'\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Evaluate script in global scope\n\t\t\t\t\t\t\tscript.text = content;\n\t\t\t\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\n\t\t\t\t\t\t\tdom.remove(script);\n\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\n\t\t\t\t\t\terror : error\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create new script element\n\t\t\telm = dom.create('script', {\n\t\t\t\tid : id,\n\t\t\t\ttype : 'text/javascript',\n\t\t\t\tsrc : tinymce._addVer(url)\n\t\t\t});\n\n\t\t\t// Add onload listener for non IE browsers since IE9\n\t\t\t// fires onload event before the script is parsed and executed\n\t\t\tif (!tinymce.isIE)\n\t\t\t\telm.onload = done;\n\n\t\t\t// Add onerror event will get fired on some browsers but not all of them\n\t\t\telm.onerror = error;\n\n\t\t\t// Opera 9.60 doesn't seem to fire the onreadystate event at correctly\n\t\t\tif (!tinymce.isOpera) {\n\t\t\t\telm.onreadystatechange = function() {\n\t\t\t\t\tvar state = elm.readyState;\n\n\t\t\t\t\t// Loaded state is passed on IE 6 however there\n\t\t\t\t\t// are known issues with this method but we can't use\n\t\t\t\t\t// XHR in a cross domain loading\n\t\t\t\t\tif (state == 'complete' || state == 'loaded')\n\t\t\t\t\t\tdone();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Most browsers support this feature so we report errors\n\t\t\t// for those at least to help users track their missing plugins etc\n\t\t\t// todo: Removed since it produced error if the document is unloaded by navigating away, re-add it as an option\n\t\t\t/*elm.onerror = function() {\n\t\t\t\talert('Failed to load: ' + url);\n\t\t\t};*/\n\n\t\t\t// Add script to document\n\t\t\t(document.getElementsByTagName('head')[0] || document.body).appendChild(elm);\n\t\t};\n\n\t\t/**\n\t\t * Returns true/false if a script has been loaded or not.\n\t\t *\n\t\t * @method isDone\n\t\t * @param {String} url URL to check for.\n\t\t * @return [Boolean} true/false if the URL is loaded.\n\t\t */\n\t\tthis.isDone = function(url) {\n\t\t\treturn states[url] == LOADED;\n\t\t};\n\n\t\t/**\n\t\t * Marks a specific script to be loaded. This can be useful if a script got loaded outside\n\t\t * the script loader or to skip it from loading some script.\n\t\t *\n\t\t * @method markDone\n\t\t * @param {string} u Absolute URL to the script to mark as loaded.\n\t\t */\n\t\tthis.markDone = function(url) {\n\t\t\tstates[url] = LOADED;\n\t\t};\n\n\t\t/**\n\t\t * Adds a specific script to the load queue of the script loader.\n\t\t *\n\t\t * @method add\n\t\t * @param {String} url Absolute URL to script to add.\n\t\t * @param {function} callback Optional callback function to execute ones this script gets loaded.\n\t\t * @param {Object} scope Optional scope to execute callback in.\n\t\t */\n\t\tthis.add = this.load = function(url, callback, scope) {\n\t\t\tvar item, state = states[url];\n\n\t\t\t// Add url to load queue\n\t\t\tif (state == undefined) {\n\t\t\t\tqueue.push(url);\n\t\t\t\tstates[url] = QUEUED;\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\t// Store away callback for later execution\n\t\t\t\tif (!scriptLoadedCallbacks[url])\n\t\t\t\t\tscriptLoadedCallbacks[url] = [];\n\n\t\t\t\tscriptLoadedCallbacks[url].push({\n\t\t\t\t\tfunc : callback,\n\t\t\t\t\tscope : scope || this\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Starts the loading of the queue.\n\t\t *\n\t\t * @method loadQueue\n\t\t * @param {function} callback Optional callback to execute when all queued items are loaded.\n\t\t * @param {Object} scope Optional scope to execute the callback in.\n\t\t */\n\t\tthis.loadQueue = function(callback, scope) {\n\t\t\tthis.loadScripts(queue, callback, scope);\n\t\t};\n\n\t\t/**\n\t\t * Loads the specified queue of files and executes the callback ones they are loaded.\n\t\t * This method is generally not used outside this class but it might be useful in some scenarios. \n\t\t *\n\t\t * @method loadScripts\n\t\t * @param {Array} scripts Array of queue items to load.\n\t\t * @param {function} callback Optional callback to execute ones all items are loaded.\n\t\t * @param {Object} scope Optional scope to execute callback in.\n\t\t */\n\t\tthis.loadScripts = function(scripts, callback, scope) {\n\t\t\tvar loadScripts;\n\n\t\t\tfunction execScriptLoadedCallbacks(url) {\n\t\t\t\t// Execute URL callback functions\n\t\t\t\ttinymce.each(scriptLoadedCallbacks[url], function(callback) {\n\t\t\t\t\tcallback.func.call(callback.scope);\n\t\t\t\t});\n\n\t\t\t\tscriptLoadedCallbacks[url] = undefined;\n\t\t\t};\n\n\t\t\tqueueLoadedCallbacks.push({\n\t\t\t\tfunc : callback,\n\t\t\t\tscope : scope || this\n\t\t\t});\n\n\t\t\tloadScripts = function() {\n\t\t\t\tvar loadingScripts = tinymce.grep(scripts);\n\n\t\t\t\t// Current scripts has been handled\n\t\t\t\tscripts.length = 0;\n\n\t\t\t\t// Load scripts that needs to be loaded\n\t\t\t\ttinymce.each(loadingScripts, function(url) {\n\t\t\t\t\t// Script is already loaded then execute script callbacks directly\n\t\t\t\t\tif (states[url] == LOADED) {\n\t\t\t\t\t\texecScriptLoadedCallbacks(url);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Is script not loading then start loading it\n\t\t\t\t\tif (states[url] != LOADING) {\n\t\t\t\t\t\tstates[url] = LOADING;\n\t\t\t\t\t\tloading++;\n\n\t\t\t\t\t\tloadScript(url, function() {\n\t\t\t\t\t\t\tstates[url] = LOADED;\n\t\t\t\t\t\t\tloading--;\n\n\t\t\t\t\t\t\texecScriptLoadedCallbacks(url);\n\n\t\t\t\t\t\t\t// Load more scripts if they where added by the recently loaded script\n\t\t\t\t\t\t\tloadScripts();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// No scripts are currently loading then execute all pending queue loaded callbacks\n\t\t\t\tif (!loading) {\n\t\t\t\t\ttinymce.each(queueLoadedCallbacks, function(callback) {\n\t\t\t\t\t\tcallback.func.call(callback.scope);\n\t\t\t\t\t});\n\n\t\t\t\t\tqueueLoadedCallbacks.length = 0;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tloadScripts();\n\t\t};\n\t};\n\n\t// Global script loader\n\ttinymce.ScriptLoader = new tinymce.dom.ScriptLoader();\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/util/JSONP.js":"/**\n * JSONP.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\ntinymce.create('static tinymce.util.JSONP', {\n\tcallbacks : {},\n\tcount : 0,\n\n\tsend : function(o) {\n\t\tvar t = this, dom = tinymce.DOM, count = o.count !== undefined ? o.count : t.count, id = 'tinymce_jsonp_' + count;\n\n\t\tt.callbacks[count] = function(json) {\n\t\t\tdom.remove(id);\n\t\t\tdelete t.callbacks[count];\n\n\t\t\to.callback(json);\n\t\t};\n\n\t\tdom.add(dom.doc.body, 'script', {id : id , src : o.url, type : 'text/javascript'});\n\t\tt.count++;\n\t}\n});\n","Magento_Tinymce3/tiny_mce/classes/util/JSON.js":"/**\n * JSON.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function() {\n\tfunction serialize(o, quote) {\n\t\tvar i, v, t;\n\n\t\tquote = quote || '\"';\n\n\t\tif (o == null)\n\t\t\treturn 'null';\n\n\t\tt = typeof o;\n\n\t\tif (t == 'string') {\n\t\t\tv = '\\bb\\tt\\nn\\ff\\rr\\\"\"\\'\\'\\\\\\\\';\n\n\t\t\treturn quote + o.replace(/([\\u0080-\\uFFFF\\x00-\\x1f\\\"\\'\\\\])/g, function(a, b) {\n\t\t\t\t// Make sure single quotes never get encoded inside double quotes for JSON compatibility\n\t\t\t\tif (quote === '\"' && a === \"'\")\n\t\t\t\t\treturn a;\n\n\t\t\t\ti = v.indexOf(b);\n\n\t\t\t\tif (i + 1)\n\t\t\t\t\treturn '\\\\' + v.charAt(i + 1);\n\n\t\t\t\ta = b.charCodeAt().toString(16);\n\n\t\t\t\treturn '\\\\u' + '0000'.substring(a.length) + a;\n\t\t\t}) + quote;\n\t\t}\n\n\t\tif (t == 'object') {\n\t\t\tif (o.hasOwnProperty && o instanceof Array) {\n\t\t\t\t\tfor (i=0, v = '['; i<o.length; i++)\n\t\t\t\t\t\tv += (i > 0 ? ',' : '') + serialize(o[i], quote);\n\n\t\t\t\t\treturn v + ']';\n\t\t\t\t}\n\n\t\t\t\tv = '{';\n\n\t\t\t\tfor (i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tv += typeof o[i] != 'function' ? (v.length > 1 ? ',' + quote : quote) + i + quote +':' + serialize(o[i], quote) : '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v + '}';\n\t\t}\n\n\t\treturn '' + o;\n\t};\n\n\t/**\n\t * JSON parser and serializer class.\n\t *\n\t * @class tinymce.util.JSON\n\t * @static\n\t * @example\n\t * // JSON parse a string into an object\n\t * var obj = tinymce.util.JSON.parse(somestring);\n\t * \n\t * // JSON serialize a object into an string\n\t * var str = tinymce.util.JSON.serialize(obj);\n\t */\n\ttinymce.util.JSON = {\n\t\t/**\n\t\t * Serializes the specified object as a JSON string.\n\t\t *\n\t\t * @method serialize\n\t\t * @param {Object} obj Object to serialize as a JSON string.\n\t\t * @param {String} quote Optional quote string defaults to \".\n\t\t * @return {string} JSON string serialized from input.\n\t\t */\n\t\tserialize: serialize,\n\n\t\t/**\n\t\t * Unserializes/parses the specified JSON string into a object.\n\t\t *\n\t\t * @method parse\n\t\t * @param {string} s JSON String to parse into a JavaScript object.\n\t\t * @return {Object} Object from input JSON string or undefined if it failed.\n\t\t */\n\t\tparse: function(s) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(s);\n\t\t\t} catch (ex) {\n\t\t\t\t// Ignore\n\t\t\t}\n\t\t}\n\n\t\t/**#@-*/\n\t};\n})();\n","Magento_Tinymce3/tiny_mce/classes/util/URI.js":"/**\n * URI.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function() {\n\tvar each = tinymce.each;\n\n\t/**\n\t * This class handles parsing, modification and serialization of URI/URL strings.\n\t * @class tinymce.util.URI\n\t */\n\ttinymce.create('tinymce.util.URI', {\n\t\t/**\n\t\t * Constucts a new URI instance.\n\t\t *\n\t\t * @constructor\n\t\t * @method URI\n\t\t * @param {String} u URI string to parse.\n\t\t * @param {Object} s Optional settings object.\n\t\t */\n\t\tURI : function(u, s) {\n\t\t\tvar t = this, o, a, b, base_url;\n\n\t\t\t// Trim whitespace\n\t\t\tu = tinymce.trim(u);\n\n\t\t\t// Default settings\n\t\t\ts = t.settings = s || {};\n\n\t\t\t// Strange app protocol that isn't http/https or local anchor\n\t\t\t// For example: mailto,skype,tel etc.\n\t\t\tif (/^([\\w\\-]+):([^\\/]{2})/i.test(u) || /^\\s*#/.test(u)) {\n\t\t\t\tt.source = u;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Absolute path with no host, fake host and protocol\n\t\t\tif (u.indexOf('/') === 0 && u.indexOf('//') !== 0)\n\t\t\t\tu = (s.base_uri ? s.base_uri.protocol || 'http' : 'http') + '://mce_host' + u;\n\n\t\t\t// Relative path http:// or protocol relative //path\n\t\t\tif (!/^[\\w-]*:?\\/\\//.test(u)) {\n\t\t\t\tbase_url = s.base_uri ? s.base_uri.path : new tinymce.util.URI(location.href).directory;\n\t\t\t\tu = ((s.base_uri && s.base_uri.protocol) || 'http') + '://mce_host' + t.toAbsPath(base_url, u);\n\t\t\t}\n\n\t\t\t// Parse URL (Credits goes to Steave, http://blog.stevenlevithan.com/archives/parseuri)\n\t\t\tu = u.replace(/@@/g, '(mce_at)'); // Zope 3 workaround, they use @@something\n\t\t\tu = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/.exec(u);\n\t\t\teach([\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"], function(v, i) {\n\t\t\t\tvar s = u[i];\n\n\t\t\t\t// Zope 3 workaround, they use @@something\n\t\t\t\tif (s)\n\t\t\t\t\ts = s.replace(/\\(mce_at\\)/g, '@@');\n\n\t\t\t\tt[v] = s;\n\t\t\t});\n\n\t\t\tif (b = s.base_uri) {\n\t\t\t\tif (!t.protocol)\n\t\t\t\t\tt.protocol = b.protocol;\n\n\t\t\t\tif (!t.userInfo)\n\t\t\t\t\tt.userInfo = b.userInfo;\n\n\t\t\t\tif (!t.port && t.host == 'mce_host')\n\t\t\t\t\tt.port = b.port;\n\n\t\t\t\tif (!t.host || t.host == 'mce_host')\n\t\t\t\t\tt.host = b.host;\n\n\t\t\t\tt.source = '';\n\t\t\t}\n\n\t\t\t//t.path = t.path || '/';\n\t\t},\n\n\t\t/**\n\t\t * Sets the internal path part of the URI.\n\t\t *\n\t\t * @method setPath\n\t\t * @param {string} p Path string to set.\n\t\t */\n\t\tsetPath : function(p) {\n\t\t\tvar t = this;\n\n\t\t\tp = /^(.*?)\\/?(\\w+)?$/.exec(p);\n\n\t\t\t// Update path parts\n\t\t\tt.path = p[0];\n\t\t\tt.directory = p[1];\n\t\t\tt.file = p[2];\n\n\t\t\t// Rebuild source\n\t\t\tt.source = '';\n\t\t\tt.getURI();\n\t\t},\n\n\t\t/**\n\t\t * Converts the specified URI into a relative URI based on the current URI instance location.\n\t\t *\n\t\t * @method toRelative\n\t\t * @param {String} u URI to convert into a relative path/URI.\n\t\t * @return {String} Relative URI from the point specified in the current URI instance.\n\t\t * @example\n\t\t * // Converts an absolute URL to an relative URL url will be somedir/somefile.htm\n\t\t * var url = new tinymce.util.URI('http://www.site.com/dir/').toRelative('http://www.site.com/dir/somedir/somefile.htm');\n\t\t */\n\t\ttoRelative : function(u) {\n\t\t\tvar t = this, o;\n\n\t\t\tif (u === \"./\")\n\t\t\t\treturn u;\n\n\t\t\tu = new tinymce.util.URI(u, {base_uri : t});\n\n\t\t\t// Not on same domain/port or protocol\n\t\t\tif ((u.host != 'mce_host' && t.host != u.host && u.host) || t.port != u.port || t.protocol != u.protocol)\n\t\t\t\treturn u.getURI();\n\n\t\t\to = t.toRelPath(t.path, u.path);\n\n\t\t\t// Add query\n\t\t\tif (u.query)\n\t\t\t\to += '?' + u.query;\n\n\t\t\t// Add anchor\n\t\t\tif (u.anchor)\n\t\t\t\to += '#' + u.anchor;\n\n\t\t\treturn o;\n\t\t},\n\t\n\t\t/**\n\t\t * Converts the specified URI into a absolute URI based on the current URI instance location.\n\t\t *\n\t\t * @method toAbsolute\n\t\t * @param {String} u URI to convert into a relative path/URI.\n\t\t * @param {Boolean} nh No host and protocol prefix.\n\t\t * @return {String} Absolute URI from the point specified in the current URI instance.\n\t\t * @example\n\t\t * // Converts an relative URL to an absolute URL url will be http://www.site.com/dir/somedir/somefile.htm\n\t\t * var url = new tinymce.util.URI('http://www.site.com/dir/').toAbsolute('somedir/somefile.htm');\n\t\t */\n\t\ttoAbsolute : function(u, nh) {\n\t\t\tvar u = new tinymce.util.URI(u, {base_uri : this});\n\n\t\t\treturn u.getURI(this.host == u.host && this.protocol == u.protocol ? nh : 0);\n\t\t},\n\n\t\t/**\n\t\t * Converts a absolute path into a relative path.\n\t\t *\n\t\t * @method toRelPath\n\t\t * @param {String} base Base point to convert the path from.\n\t\t * @param {String} path Absolute path to convert into a relative path.\n\t\t */\n\t\ttoRelPath : function(base, path) {\n\t\t\tvar items, bp = 0, out = '', i, l;\n\n\t\t\t// Split the paths\n\t\t\tbase = base.substring(0, base.lastIndexOf('/'));\n\t\t\tbase = base.split('/');\n\t\t\titems = path.split('/');\n\n\t\t\tif (base.length >= items.length) {\n\t\t\t\tfor (i = 0, l = base.length; i < l; i++) {\n\t\t\t\t\tif (i >= items.length || base[i] != items[i]) {\n\t\t\t\t\t\tbp = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (base.length < items.length) {\n\t\t\t\tfor (i = 0, l = items.length; i < l; i++) {\n\t\t\t\t\tif (i >= base.length || base[i] != items[i]) {\n\t\t\t\t\t\tbp = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bp == 1)\n\t\t\t\treturn path;\n\n\t\t\tfor (i = 0, l = base.length - (bp - 1); i < l; i++)\n\t\t\t\tout += \"../\";\n\n\t\t\tfor (i = bp - 1, l = items.length; i < l; i++) {\n\t\t\t\tif (i != bp - 1)\n\t\t\t\t\tout += \"/\" + items[i];\n\t\t\t\telse\n\t\t\t\t\tout += items[i];\n\t\t\t}\n\n\t\t\treturn out;\n\t\t},\n\n\t\t/**\n\t\t * Converts a relative path into a absolute path.\n\t\t *\n\t\t * @method toAbsPath\n\t\t * @param {String} base Base point to convert the path from.\n\t\t * @param {String} path Relative path to convert into an absolute path.\n\t\t */\n\t\ttoAbsPath : function(base, path) {\n\t\t\tvar i, nb = 0, o = [], tr, outPath;\n\n\t\t\t// Split paths\n\t\t\ttr = /\\/$/.test(path) ? '/' : '';\n\t\t\tbase = base.split('/');\n\t\t\tpath = path.split('/');\n\n\t\t\t// Remove empty chunks\n\t\t\teach(base, function(k) {\n\t\t\t\tif (k)\n\t\t\t\t\to.push(k);\n\t\t\t});\n\n\t\t\tbase = o;\n\n\t\t\t// Merge relURLParts chunks\n\t\t\tfor (i = path.length - 1, o = []; i >= 0; i--) {\n\t\t\t\t// Ignore empty or .\n\t\t\t\tif (path[i].length == 0 || path[i] == \".\")\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Is parent\n\t\t\t\tif (path[i] == '..') {\n\t\t\t\t\tnb++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Move up\n\t\t\t\tif (nb > 0) {\n\t\t\t\t\tnb--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\to.push(path[i]);\n\t\t\t}\n\n\t\t\ti = base.length - nb;\n\n\t\t\t// If /a/b/c or /\n\t\t\tif (i <= 0)\n\t\t\t\toutPath = o.reverse().join('/');\n\t\t\telse\n\t\t\t\toutPath = base.slice(0, i).join('/') + '/' + o.reverse().join('/');\n\n\t\t\t// Add front / if it's needed\n\t\t\tif (outPath.indexOf('/') !== 0)\n\t\t\t\toutPath = '/' + outPath;\n\n\t\t\t// Add traling / if it's needed\n\t\t\tif (tr && outPath.lastIndexOf('/') !== outPath.length - 1)\n\t\t\t\toutPath += tr;\n\n\t\t\treturn outPath;\n\t\t},\n\n\t\t/**\n\t\t * Returns the full URI of the internal structure.\n\t\t *\n\t\t * @method getURI\n\t\t * @param {Boolean} nh Optional no host and protocol part. Defaults to false.\n\t\t */\n\t\tgetURI : function(nh) {\n\t\t\tvar s, t = this;\n\n\t\t\t// Rebuild source\n\t\t\tif (!t.source || nh) {\n\t\t\t\ts = '';\n\n\t\t\t\tif (!nh) {\n\t\t\t\t\tif (t.protocol)\n\t\t\t\t\t\ts += t.protocol + '://';\n\n\t\t\t\t\tif (t.userInfo)\n\t\t\t\t\t\ts += t.userInfo + '@';\n\n\t\t\t\t\tif (t.host)\n\t\t\t\t\t\ts += t.host;\n\n\t\t\t\t\tif (t.port)\n\t\t\t\t\t\ts += ':' + t.port;\n\t\t\t\t}\n\n\t\t\t\tif (t.path)\n\t\t\t\t\ts += t.path;\n\n\t\t\t\tif (t.query)\n\t\t\t\t\ts += '?' + t.query;\n\n\t\t\t\tif (t.anchor)\n\t\t\t\t\ts += '#' + t.anchor;\n\n\t\t\t\tt.source = s;\n\t\t\t}\n\n\t\t\treturn t.source;\n\t\t}\n\t});\n})();\n","Magento_Tinymce3/tiny_mce/classes/util/Quirks.js":"(function(tinymce) {\n\tvar VK = tinymce.VK, BACKSPACE = VK.BACKSPACE, DELETE = VK.DELETE;\n\n\t/**\n\t * Fixes a WebKit bug when deleting contents using backspace or delete key.\n\t * WebKit will produce a span element if you delete across two block elements.\n\t *\n\t * Example:\n\t * <h1>a</h1><p>|b</p>\n\t *\n\t * Will produce this on backspace:\n\t * <h1>a<span class=\"Apple-style-span\" style=\"<all runtime styles>\">b</span></p>\n\t *\n\t * This fixes the backspace to produce:\n\t * <h1>a|b</p>\n\t *\n\t * See bug: https://bugs.webkit.org/show_bug.cgi?id=45784\n\t *\n\t * This code is a bit of a hack and hopefully it will be fixed soon in WebKit.\n\t */\n\tfunction cleanupStylesWhenDeleting(ed) {\n\t\tvar dom = ed.dom, selection = ed.selection;\n\n\t\ted.onKeyDown.add(function(ed, e) {\n\t\t\tvar rng, blockElm, node, clonedSpan, isDelete;\n\n\t\t\tisDelete = e.keyCode == DELETE;\n\t\t\tif (isDelete || e.keyCode == BACKSPACE) {\n\t\t\t\te.preventDefault();\n\t\t\t\trng = selection.getRng();\n\n\t\t\t\t// Find root block\n\t\t\t\tblockElm = dom.getParent(rng.startContainer, dom.isBlock);\n\n\t\t\t\t// On delete clone the root span of the next block element\n\t\t\t\tif (isDelete)\n\t\t\t\t\tblockElm = dom.getNext(blockElm, dom.isBlock);\n\n\t\t\t\t// Locate root span element and clone it since it would otherwise get merged by the \"apple-style-span\" on delete/backspace\n\t\t\t\tif (blockElm) {\n\t\t\t\t\tnode = blockElm.firstChild;\n\n\t\t\t\t\t// Ignore empty text nodes\n\t\t\t\t\twhile (node && node.nodeType == 3 && node.nodeValue.length == 0)\n\t\t\t\t\t\tnode = node.nextSibling;\n\n\t\t\t\t\tif (node && node.nodeName === 'SPAN') {\n\t\t\t\t\t\tclonedSpan = node.cloneNode(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Do the backspace/delete actiopn\n\t\t\t\ted.getDoc().execCommand(isDelete ? 'ForwardDelete' : 'Delete', false, null);\n\n\t\t\t\t// Find all odd apple-style-spans\n\t\t\t\tblockElm = dom.getParent(rng.startContainer, dom.isBlock);\n\t\t\t\ttinymce.each(dom.select('span.Apple-style-span,font.Apple-style-span', blockElm), function(span) {\n\t\t\t\t\tvar bm = selection.getBookmark();\n\n\t\t\t\t\tif (clonedSpan) {\n\t\t\t\t\t\tdom.replace(clonedSpan.cloneNode(false), span, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdom.remove(span, true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Restore the selection\n\t\t\t\t\tselection.moveToBookmark(bm);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * WebKit and IE doesn't empty the editor if you select all contents and hit backspace or delete. This fix will check if the body is empty\n\t * like a <h1></h1> or <p></p> and then forcefully remove all contents.\n\t */\n\tfunction emptyEditorWhenDeleting(ed) {\n\t\ted.onKeyUp.add(function(ed, e) {\n\t\t\tvar keyCode = e.keyCode;\n\n\t\t\tif (keyCode == DELETE || keyCode == BACKSPACE) {\n\t\t\t\tif (ed.dom.isEmpty(ed.getBody())) {\n\t\t\t\t\ted.setContent('', {format : 'raw'});\n\t\t\t\t\ted.nodeChanged();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * WebKit on MacOS X has a weird issue where it some times fails to properly convert keypresses to input method keystrokes.\n\t * So a fix where we just get the range and set the range back seems to do the trick.\n\t */\n\tfunction inputMethodFocus(ed) {\n\t\ted.dom.bind(ed.getDoc(), 'focusin', function() {\n\t\t\ted.selection.setRng(ed.selection.getRng());\n\t\t});\n\t};\n\n\t/**\n\t * Backspacing in FireFox/IE from a paragraph into a horizontal rule results in a floating text node because the\n\t * browser just deletes the paragraph - the browser fails to merge the text node with a horizontal rule so it is\n\t * left there. TinyMCE sees a floating text node and wraps it in a paragraph on the key up event (ForceBlocks.js\n\t * addRootBlocks), meaning the action does nothing. With this code, FireFox/IE matche the behaviour of other\n     * browsers\n\t */\n\tfunction removeHrOnBackspace(ed) {\n\t\ted.onKeyDown.add(function(ed, e) {\n\t\t\tif (e.keyCode === BACKSPACE) {\n\t\t\t\tif (ed.selection.isCollapsed() && ed.selection.getRng(true).startOffset === 0) {\n\t\t\t\t\tvar node = ed.selection.getNode();\n\t\t\t\t\tvar previousSibling = node.previousSibling;\n\t\t\t\t\tif (previousSibling && previousSibling.nodeName && previousSibling.nodeName.toLowerCase() === \"hr\") {\n\t\t\t\t\t\ted.dom.remove(previousSibling);\n\t\t\t\t\t\ttinymce.dom.Event.cancel(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Firefox 3.x has an issue where the body element won't get proper focus if you click out\n\t * side it's rectangle.\n\t */\n\tfunction focusBody(ed) {\n\t\t// Fix for a focus bug in FF 3.x where the body element\n\t\t// wouldn't get proper focus if the user clicked on the HTML element\n\t\tif (!Range.prototype.getClientRects) { // Detect getClientRects got introduced in FF 4\n\t\t\ted.onMouseDown.add(function(ed, e) {\n\t\t\t\tif (e.target.nodeName === \"HTML\") {\n\t\t\t\t\tvar body = ed.getBody();\n\n\t\t\t\t\t// Blur the body it's focused but not correctly focused\n\t\t\t\t\tbody.blur();\n\n\t\t\t\t\t// Refocus the body after a little while\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tbody.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * WebKit has a bug where it isn't possible to select image, hr or anchor elements\n\t * by clicking on them so we need to fake that.\n\t */\n\tfunction selectControlElements(ed) {\n\t\ted.onClick.add(function(ed, e) {\n\t\t\te = e.target;\n\n\t\t\tif (/^(IMG|HR)$/.test(e.nodeName))\n\t\t\t\ted.selection.select(e);\n\n\t\t\tif (e.nodeName == 'A' && ed.dom.hasClass(e, 'mceItemAnchor'))\n\t\t\t\ted.selection.select(e);\n\n\t\t\ted.nodeChanged();\n\t\t});\n\t};\n\n\t/**\n\t * Fire a nodeChanged when the selection is changed on WebKit this fixes selection issues on iOS5. It only fires the nodeChange\n\t * event every 50ms since it would other wise update the UI when you type and it hogs the CPU.\n\t */\n\tfunction selectionChangeNodeChanged(ed) {\n\t\tvar lastRng, selectionTimer;\n\n\t\ted.dom.bind(ed.getDoc(), 'selectionchange', function() {\n\t\t\tif (selectionTimer) {\n\t\t\t\tclearTimeout(selectionTimer);\n\t\t\t\tselectionTimer = 0;\n\t\t\t}\n\n\t\t\tselectionTimer = window.setTimeout(function() {\n\t\t\t\tvar rng = ed.selection.getRng();\n\n\t\t\t\t// Compare the ranges to see if it was a real change or not\n\t\t\t\tif (!lastRng || !tinymce.dom.RangeUtils.compareRanges(rng, lastRng)) {\n\t\t\t\t\ted.nodeChanged();\n\t\t\t\t\tlastRng = rng;\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t});\n\t}\n\n\t/**\n\t * Screen readers on IE needs to have the role application set on the body.\n\t */\n\tfunction ensureBodyHasRoleApplication(ed) {\n\t\tdocument.body.setAttribute(\"role\", \"application\");\n\t}\n\n\ttinymce.create('tinymce.util.Quirks', {\n\t\tQuirks: function(ed) {\n\t\t\t// WebKit\n\t\t\tif (tinymce.isWebKit) {\n\t\t\t\tcleanupStylesWhenDeleting(ed);\n\t\t\t\temptyEditorWhenDeleting(ed);\n\t\t\t\tinputMethodFocus(ed);\n\t\t\t\tselectControlElements(ed);\n\n\t\t\t\t// iOS\n\t\t\t\tif (tinymce.isIDevice) {\n\t\t\t\t\tselectionChangeNodeChanged(ed);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// IE\n\t\t\tif (tinymce.isIE) {\n\t\t\t\tremoveHrOnBackspace(ed);\n\t\t\t\temptyEditorWhenDeleting(ed);\n\t\t\t\tensureBodyHasRoleApplication(ed);\n\t\t\t}\n\n\t\t\t// Gecko\n\t\t\tif (tinymce.isGecko) {\n\t\t\t\tremoveHrOnBackspace(ed);\n\t\t\t\tfocusBody(ed);\n\t\t\t}\n\t\t}\n\t});\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/util/JSONRequest.js":"/**\n * JSONRequest.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function() {\n\tvar extend = tinymce.extend, JSON = tinymce.util.JSON, XHR = tinymce.util.XHR;\n\n\t/**\n\t * This class enables you to use JSON-RPC to call backend methods.\n\t *\n\t * @class tinymce.util.JSONRequest\n\t * @example\n\t * var json = new tinymce.util.JSONRequest({\n\t *     url : 'somebackend.php'\n\t * });\n\t * \n\t * // Send RPC call 1\n\t * json.send({\n\t *     method : 'someMethod1',\n\t *     params : ['a', 'b'],\n\t *     success : function(result) {\n\t *         console.dir(result);\n\t *     }\n\t * });\n\t * \n\t * // Send RPC call 2\n\t * json.send({\n\t *     method : 'someMethod2',\n\t *     params : ['a', 'b'],\n\t *     success : function(result) {\n\t *         console.dir(result);\n\t *     }\n\t * });\n\t */\n\ttinymce.create('tinymce.util.JSONRequest', {\n\t\t/**\n\t\t * Constructs a new JSONRequest instance.\n\t\t *\n\t\t * @constructor\n\t\t * @method JSONRequest\n\t\t * @param {Object} s Optional settings object.\n\t\t */\n\t\tJSONRequest : function(s) {\n\t\t\tthis.settings = extend({\n\t\t\t}, s);\n\t\t\tthis.count = 0;\n\t\t},\n\n\t\t/**\n\t\t * Sends a JSON-RPC call. Consult the Wiki API documentation for more details on what you can pass to this function.\n\t\t *\n\t\t * @method send\n\t\t * @param {Object} o Call object where there are three field id, method and params this object should also contain callbacks etc.\n\t\t */\n\t\tsend : function(o) {\n\t\t\tvar ecb = o.error, scb = o.success;\n\n\t\t\to = extend(this.settings, o);\n\n\t\t\to.success = function(c, x) {\n\t\t\t\tc = JSON.parse(c);\n\n\t\t\t\tif (typeof(c) == 'undefined') {\n\t\t\t\t\tc = {\n\t\t\t\t\t\terror : 'JSON Parse error.'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (c.error)\n\t\t\t\t\tecb.call(o.error_scope || o.scope, c.error, x);\n\t\t\t\telse\n\t\t\t\t\tscb.call(o.success_scope || o.scope, c.result);\n\t\t\t};\n\n\t\t\to.error = function(ty, x) {\n\t\t\t\tif (ecb)\n\t\t\t\t\tecb.call(o.error_scope || o.scope, ty, x);\n\t\t\t};\n\n\t\t\to.data = JSON.serialize({\n\t\t\t\tid : o.id || 'c' + (this.count++),\n\t\t\t\tmethod : o.method,\n\t\t\t\tparams : o.params\n\t\t\t});\n\n\t\t\t// JSON content type for Ruby on rails. Bug: #1883287\n\t\t\to.content_type = 'application/json';\n\n\t\t\tXHR.send(o);\n\t\t},\n\n\t\t'static' : {\n\t\t\t/**\n\t\t\t * Simple helper function to send a JSON-RPC request without the need to initialize an object.\n\t\t\t * Consult the Wiki API documentation for more details on what you can pass to this function.\n\t\t\t *\n\t\t\t * @method sendRPC\n\t\t\t * @static\n\t\t\t * @param {Object} o Call object where there are three field id, method and params this object should also contain callbacks etc.\n\t\t\t */\n\t\t\tsendRPC : function(o) {\n\t\t\t\treturn new tinymce.util.JSONRequest().send(o);\n\t\t\t}\n\t\t}\n\t});\n}());","Magento_Tinymce3/tiny_mce/classes/util/VK.js":"/**\n * This file exposes a set of the common KeyCodes for use.  Please grow it as needed.\n */\n\n(function(tinymce){\n\ttinymce.VK = {\n\t\tDELETE: 46,\n\t\tBACKSPACE: 8,\n\t\tENTER: 13,\n\t\tTAB: 9,\n        SPACEBAR: 32,\n\t\tUP: 38,\n\t\tDOWN: 40\n\t}\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/util/Dispatcher.js":"/**\n * Dispatcher.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n/**\n * This class is used to dispatch event to observers/listeners.\n * All internal events inside TinyMCE uses this class.\n *\n * @class tinymce.util.Dispatcher\n * @example\n * // Creates a custom event\n * this.onSomething = new tinymce.util.Dispatcher(this);\n * \n * // Dispatch/fire the event\n * this.onSomething.dispatch('some string');\n */\ntinymce.create('tinymce.util.Dispatcher', {\n\tscope : null,\n\tlisteners : null,\n\n\t/**\n\t * Constructs a new event dispatcher object.\n\t *\n\t * @constructor\n\t * @method Dispatcher\n\t * @param {Object} s Optional default execution scope for all observer functions.\n\t */\n\tDispatcher : function(s) {\n\t\tthis.scope = s || this;\n\t\tthis.listeners = [];\n\t},\n\n\t/**\n\t * Add an observer function to be executed when a dispatch call is done.\n\t *\n\t * @method add\n\t * @param {function} cb Callback function to execute when a dispatch event occurs.\n\t * @param {Object} s Optional execution scope, defaults to the one specified in the class constructor.\n\t * @return {function} Returns the same function as the one passed on.\n\t */\n\tadd : function(cb, s) {\n\t\tthis.listeners.push({cb : cb, scope : s || this.scope});\n\n\t\treturn cb;\n\t},\n\n\t/**\n\t * Add an observer function to be executed to the top of the list of observers.\n\t *\n\t * @method addToTop\n\t * @param {function} cb Callback function to execute when a dispatch event occurs.\n\t * @param {Object} s Optional execution scope, defaults to the one specified in the class constructor.\n\t * @return {function} Returns the same function as the one passed on.\n\t */\n\taddToTop : function(cb, s) {\n\t\tthis.listeners.unshift({cb : cb, scope : s || this.scope});\n\n\t\treturn cb;\n\t},\n\n\t/**\n\t * Removes an observer function.\n\t *\n\t * @method remove\n\t * @param {function} cb Observer function to remove.\n\t * @return {function} The same function that got passed in or null if it wasn't found.\n\t */\n\tremove : function(cb) {\n\t\tvar l = this.listeners, o = null;\n\n\t\ttinymce.each(l, function(c, i) {\n\t\t\tif (cb == c.cb) {\n\t\t\t\to = cb;\n\t\t\t\tl.splice(i, 1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\treturn o;\n\t},\n\n\t/**\n\t * Dispatches an event to all observers/listeners.\n\t *\n\t * @method dispatch\n\t * @param {Object} .. Any number of arguments to dispatch.\n\t * @return {Object} Last observer functions return value.\n\t */\n\tdispatch : function() {\n\t\tvar s, a = arguments, i, li = this.listeners, c;\n\n\t\t// Needs to be a real loop since the listener count might change while looping\n\t\t// And this is also more efficient\n\t\tfor (i = 0; i<li.length; i++) {\n\t\t\tc = li[i];\n\t\t\ts = c.cb.apply(c.scope, a);\n\n\t\t\tif (s === false)\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn s;\n\t}\n\n\t/**#@-*/\n});\n","Magento_Tinymce3/tiny_mce/classes/util/XHR.js":"/**\n * XHR.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n/**\n * This class enables you to send XMLHTTPRequests cross browser.\n * @class tinymce.util.XHR\n * @static\n * @example\n * // Sends a low level Ajax request\n * tinymce.util.XHR.send({\n *    url : 'someurl',\n *    success : function(text) {\n *       console.debug(text);\n *    }\n * });\n */\ntinymce.create('static tinymce.util.XHR', {\n\t/**\n\t * Sends a XMLHTTPRequest.\n\t * Consult the Wiki for details on what settings this method takes.\n\t *\n\t * @method send\n\t * @param {Object} o Object will target URL, callbacks and other info needed to make the request.\n\t */\n\tsend : function(o) {\n\t\tvar x, t, w = window, c = 0;\n\n\t\t// Default settings\n\t\to.scope = o.scope || this;\n\t\to.success_scope = o.success_scope || o.scope;\n\t\to.error_scope = o.error_scope || o.scope;\n\t\to.async = o.async === false ? false : true;\n\t\to.data = o.data || '';\n\n\t\tfunction get(s) {\n\t\t\tx = 0;\n\n\t\t\ttry {\n\t\t\t\tx = new ActiveXObject(s);\n\t\t\t} catch (ex) {\n\t\t\t}\n\n\t\t\treturn x;\n\t\t};\n\n\t\tx = w.XMLHttpRequest ? new XMLHttpRequest() : get('Microsoft.XMLHTTP') || get('Msxml2.XMLHTTP');\n\n\t\tif (x) {\n\t\t\tif (x.overrideMimeType)\n\t\t\t\tx.overrideMimeType(o.content_type);\n\n\t\t\tx.open(o.type || (o.data ? 'POST' : 'GET'), o.url, o.async);\n\n\t\t\tif (o.content_type)\n\t\t\t\tx.setRequestHeader('Content-Type', o.content_type);\n\n\t\t\tx.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n\t\t\tx.send(o.data);\n\n\t\t\tfunction ready() {\n\t\t\t\tif (!o.async || x.readyState == 4 || c++ > 10000) {\n\t\t\t\t\tif (o.success && c < 10000 && x.status == 200)\n\t\t\t\t\t\to.success.call(o.success_scope, '' + x.responseText, x, o);\n\t\t\t\t\telse if (o.error)\n\t\t\t\t\t\to.error.call(o.error_scope, c > 10000 ? 'TIMED_OUT' : 'GENERAL', x, o);\n\n\t\t\t\t\tx = null;\n\t\t\t\t} else\n\t\t\t\t\tw.setTimeout(ready, 10);\n\t\t\t};\n\n\t\t\t// Syncronous request\n\t\t\tif (!o.async)\n\t\t\t\treturn ready();\n\n\t\t\t// Wait for response, onReadyStateChange can not be used since it leaks memory in IE\n\t\t\tt = w.setTimeout(ready, 10);\n\t\t}\n\t}\n});\n","Magento_Tinymce3/tiny_mce/classes/util/Cookie.js":"/**\n * Cookie.js\n *\n * Copyright 2009, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function() {\n\tvar each = tinymce.each;\n\n\t/**\n\t * This class contains simple cookie manangement functions.\n\t *\n\t * @class tinymce.util.Cookie\n\t * @static\n\t * @example\n\t * // Gets a cookie from the browser\n\t * console.debug(tinymce.util.Cookie.get('mycookie'));\n\t *\n\t * // Gets a hash table cookie from the browser and takes out the x parameter from it\n\t * console.debug(tinymce.util.Cookie.getHash('mycookie').x);\n\t *\n\t * // Sets a hash table cookie to the browser\n\t * tinymce.util.Cookie.setHash({x : '1', y : '2'});\n\t */\n\ttinymce.create('static tinymce.util.Cookie', {\n\t\t/**\n\t\t * Parses the specified query string into an name/value object.\n\t\t *\n\t\t * @method getHash\n\t\t * @param {String} n String to parse into a n Hashtable object.\n\t\t * @return {Object} Name/Value object with items parsed from querystring.\n\t\t */\n\t\tgetHash : function(n) {\n\t\t\tvar v = this.get(n), h;\n\n\t\t\tif (v) {\n\t\t\t\teach(v.split('&'), function(v) {\n\t\t\t\t\tv = v.split('=');\n\t\t\t\t\th = h || {};\n\t\t\t\t\th[unescape(v[0])] = unescape(v[1]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn h;\n\t\t},\n\n\t\t/**\n\t\t * Sets a hashtable name/value object to a cookie.\n\t\t *\n\t\t * @method setHash\n\t\t * @param {String} n Name of the cookie.\n\t\t * @param {Object} v Hashtable object to set as cookie.\n\t\t * @param {Date} e Optional date object for the expiration of the cookie.\n\t\t * @param {String} p Optional path to restrict the cookie to.\n\t\t * @param {String} d Optional domain to restrict the cookie to.\n\t\t * @param {String} s Is the cookie secure or not.\n\t\t */\n\t\tsetHash : function(n, v, e, p, d, s) {\n\t\t\tvar o = '';\n\n\t\t\teach(v, function(v, k) {\n\t\t\t\to += (!o ? '' : '&') + escape(k) + '=' + escape(v);\n\t\t\t});\n\n\t\t\tthis.set(n, o, e, p, d, s);\n\t\t},\n\n\t\t/**\n\t\t * Gets the raw data of a cookie by name.\n\t\t *\n\t\t * @method get\n\t\t * @param {String} n Name of cookie to retrieve.\n\t\t * @return {String} Cookie data string.\n\t\t */\n\t\tget : function(n) {\n\t\t\tvar c = document.cookie, e, p = n + \"=\", b;\n\n\t\t\t// Strict mode\n\t\t\tif (!c)\n\t\t\t\treturn;\n\n\t\t\tb = c.indexOf(\"; \" + p);\n\n\t\t\tif (b == -1) {\n\t\t\t\tb = c.indexOf(p);\n\n\t\t\t\tif (b != 0)\n\t\t\t\t\treturn null;\n\t\t\t} else\n\t\t\t\tb += 2;\n\n\t\t\te = c.indexOf(\";\", b);\n\n\t\t\tif (e == -1)\n\t\t\t\te = c.length;\n\n\t\t\treturn unescape(c.substring(b + p.length, e));\n\t\t},\n\n\t\t/**\n\t\t * Sets a raw cookie string.\n\t\t *\n\t\t * @method set\n\t\t * @param {String} n Name of the cookie.\n\t\t * @param {String} v Raw cookie data.\n\t\t * @param {Date} e Optional date object for the expiration of the cookie.\n\t\t * @param {String} p Optional path to restrict the cookie to.\n\t\t * @param {String} d Optional domain to restrict the cookie to.\n\t\t * @param {String} s Is the cookie secure or not.\n\t\t */\n\t\tset : function(n, v, e, p, d, s) {\n\t\t\tdocument.cookie = n + \"=\" + escape(v) +\n\t\t\t\t((e) ? \"; expires=\" + e.toUTCString() : \"\") +\n\t\t\t\t((p) ? \"; path=\" + escape(p) : \"\") +\n\t\t\t\t((d) ? \"; domain=\" + d : \"\") +\n\t\t\t\t((s) ? \"; secure\" : \"\");\n\t\t},\n\n\t\t/**\n\t\t * Removes/deletes a cookie by name.\n\t\t *\n\t\t * @method remove\n\t\t * @param {String} n Cookie name to remove/delete.\n\t\t * @param {Strong} p Optional path to remove the cookie from.\n\t\t */\n\t\tremove : function(n, p) {\n\t\t\tvar d = new Date();\n\n\t\t\td.setTime(d.getTime() - 1000);\n\n\t\t\tthis.set(n, '', d, p, d);\n\t\t}\n\t});\n})();\n","Magento_Tinymce3/tiny_mce/classes/html/Schema.js":"/**\n * Schema.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\tvar transitional = {}, boolAttrMap, blockElementsMap, shortEndedElementsMap, nonEmptyElementsMap, customElementsMap = {},\n\t\tdefaultWhiteSpaceElementsMap, selfClosingElementsMap, makeMap = tinymce.makeMap, each = tinymce.each;\n\n\tfunction split(str, delim) {\n\t\treturn str.split(delim || ',');\n\t};\n\n\t/**\n\t * Unpacks the specified lookup and string data it will also parse it into an object\n\t * map with sub object for it's children. This will later also include the attributes.\n\t */\n\tfunction unpack(lookup, data) {\n\t\tvar key, elements = {};\n\n\t\tfunction replace(value) {\n\t\t\treturn value.replace(/[A-Z]+/g, function(key) {\n\t\t\t\treturn replace(lookup[key]);\n\t\t\t});\n\t\t};\n\n\t\t// Unpack lookup\n\t\tfor (key in lookup) {\n\t\t\tif (lookup.hasOwnProperty(key))\n\t\t\t\tlookup[key] = replace(lookup[key]);\n\t\t}\n\n\t\t// Unpack and parse data into object map\n\t\treplace(data).replace(/#/g, '#text').replace(/(\\w+)\\[([^\\]]+)\\]\\[([^\\]]*)\\]/g, function(str, name, attributes, children) {\n\t\t\tattributes = split(attributes, '|');\n\n\t\t\telements[name] = {\n\t\t\t\tattributes : makeMap(attributes),\n\t\t\t\tattributesOrder : attributes,\n\t\t\t\tchildren : makeMap(children, '|', {'#comment' : {}})\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t};\n\n\t// Build a lookup table for block elements both lowercase and uppercase\n\tblockElementsMap = 'h1,h2,h3,h4,h5,h6,hr,p,div,address,pre,form,table,tbody,thead,tfoot,' + \n\t\t\t\t\t\t'th,tr,td,li,ol,ul,caption,blockquote,center,dl,dt,dd,dir,fieldset,' + \n\t\t\t\t\t\t'noscript,menu,isindex,samp,header,footer,article,section,hgroup';\n\tblockElementsMap = makeMap(blockElementsMap, ',', makeMap(blockElementsMap.toUpperCase()));\n\n\t// This is the XHTML 1.0 transitional elements with it's attributes and children packed to reduce it's size\n\ttransitional = unpack({\n\t\tZ : 'H|K|N|O|P',\n\t\tY : 'X|form|R|Q',\n\t\tZG : 'E|span|width|align|char|charoff|valign',\n\t\tX : 'p|T|div|U|W|isindex|fieldset|table',\n\t\tZF : 'E|align|char|charoff|valign',\n\t\tW : 'pre|hr|blockquote|address|center|noframes',\n\t\tZE : 'abbr|axis|headers|scope|rowspan|colspan|align|char|charoff|valign|nowrap|bgcolor|width|height',\n\t\tZD : '[E][S]',\n\t\tU : 'ul|ol|dl|menu|dir',\n\t\tZC : 'p|Y|div|U|W|table|br|span|bdo|object|applet|img|map|K|N|Q',\n\t\tT : 'h1|h2|h3|h4|h5|h6',\n\t\tZB : 'X|S|Q',\n\t\tS : 'R|P',\n\t\tZA : 'a|G|J|M|O|P',\n\t\tR : 'a|H|K|N|O',\n\t\tQ : 'noscript|P',\n\t\tP : 'ins|del|script',\n\t\tO : 'input|select|textarea|label|button',\n\t\tN : 'M|L',\n\t\tM : 'em|strong|dfn|code|q|samp|kbd|var|cite|abbr|acronym',\n\t\tL : 'sub|sup',\n\t\tK : 'J|I',\n\t\tJ : 'tt|i|b|u|s|strike',\n\t\tI : 'big|small|font|basefont',\n\t\tH : 'G|F',\n\t\tG : 'br|span|bdo',\n\t\tF : 'object|applet|img|map|iframe',\n\t\tE : 'A|B|C',\n\t\tD : 'accesskey|tabindex|onfocus|onblur',\n\t\tC : 'onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup',\n\t\tB : 'lang|xml:lang|dir',\n\t\tA : 'id|class|style|title'\n\t}, 'script[id|charset|type|language|src|defer|xml:space][]' + \n\t\t'style[B|id|type|media|title|xml:space][]' + \n\t\t'object[E|declare|classid|codebase|data|type|codetype|archive|standby|width|height|usemap|name|tabindex|align|border|hspace|vspace][#|param|Y]' + \n\t\t'param[id|name|value|valuetype|type][]' + \n\t\t'p[E|align][#|S]' + \n\t\t'a[E|D|charset|type|name|href|hreflang|rel|rev|shape|coords|target][#|Z]' + \n\t\t'br[A|clear][]' + \n\t\t'span[E][#|S]' + \n\t\t'bdo[A|C|B][#|S]' + \n\t\t'applet[A|codebase|archive|code|object|alt|name|width|height|align|hspace|vspace][#|param|Y]' + \n\t\t'h1[E|align][#|S]' + \n\t\t'img[E|src|alt|name|longdesc|width|height|usemap|ismap|align|border|hspace|vspace][]' + \n\t\t'map[B|C|A|name][X|form|Q|area]' + \n\t\t'h2[E|align][#|S]' + \n\t\t'iframe[A|longdesc|name|src|frameborder|marginwidth|marginheight|scrolling|align|width|height][#|Y]' + \n\t\t'h3[E|align][#|S]' + \n\t\t'tt[E][#|S]' + \n\t\t'i[E][#|S]' + \n\t\t'b[E][#|S]' + \n\t\t'u[E][#|S]' + \n\t\t's[E][#|S]' + \n\t\t'strike[E][#|S]' + \n\t\t'big[E][#|S]' + \n\t\t'small[E][#|S]' + \n\t\t'font[A|B|size|color|face][#|S]' + \n\t\t'basefont[id|size|color|face][]' + \n\t\t'em[E][#|S]' + \n\t\t'strong[E][#|S]' + \n\t\t'dfn[E][#|S]' + \n\t\t'code[E][#|S]' + \n\t\t'q[E|cite][#|S]' + \n\t\t'samp[E][#|S]' + \n\t\t'kbd[E][#|S]' + \n\t\t'var[E][#|S]' + \n\t\t'cite[E][#|S]' + \n\t\t'abbr[E][#|S]' + \n\t\t'acronym[E][#|S]' + \n\t\t'sub[E][#|S]' + \n\t\t'sup[E][#|S]' + \n\t\t'input[E|D|type|name|value|checked|disabled|readonly|size|maxlength|src|alt|usemap|onselect|onchange|accept|align][]' + \n\t\t'select[E|name|size|multiple|disabled|tabindex|onfocus|onblur|onchange][optgroup|option]' + \n\t\t'optgroup[E|disabled|label][option]' + \n\t\t'option[E|selected|disabled|label|value][]' + \n\t\t'textarea[E|D|name|rows|cols|disabled|readonly|onselect|onchange][]' + \n\t\t'label[E|for|accesskey|onfocus|onblur][#|S]' + \n\t\t'button[E|D|name|value|type|disabled][#|p|T|div|U|W|table|G|object|applet|img|map|K|N|Q]' + \n\t\t'h4[E|align][#|S]' + \n\t\t'ins[E|cite|datetime][#|Y]' + \n\t\t'h5[E|align][#|S]' + \n\t\t'del[E|cite|datetime][#|Y]' + \n\t\t'h6[E|align][#|S]' + \n\t\t'div[E|align][#|Y]' + \n\t\t'ul[E|type|compact][li]' + \n\t\t'li[E|type|value][#|Y]' + \n\t\t'ol[E|type|compact|start][li]' + \n\t\t'dl[E|compact][dt|dd]' + \n\t\t'dt[E][#|S]' + \n\t\t'dd[E][#|Y]' + \n\t\t'menu[E|compact][li]' + \n\t\t'dir[E|compact][li]' + \n\t\t'pre[E|width|xml:space][#|ZA]' + \n\t\t'hr[E|align|noshade|size|width][]' + \n\t\t'blockquote[E|cite][#|Y]' + \n\t\t'address[E][#|S|p]' + \n\t\t'center[E][#|Y]' + \n\t\t'noframes[E][#|Y]' + \n\t\t'isindex[A|B|prompt][]' + \n\t\t'fieldset[E][#|legend|Y]' + \n\t\t'legend[E|accesskey|align][#|S]' + \n\t\t'table[E|summary|width|border|frame|rules|cellspacing|cellpadding|align|bgcolor][caption|col|colgroup|thead|tfoot|tbody|tr]' + \n\t\t'caption[E|align][#|S]' + \n\t\t'col[ZG][]' + \n\t\t'colgroup[ZG][col]' + \n\t\t'thead[ZF][tr]' + \n\t\t'tr[ZF|bgcolor][th|td]' + \n\t\t'th[E|ZE][#|Y]' + \n\t\t'form[E|action|method|name|enctype|onsubmit|onreset|accept|accept-charset|target][#|X|R|Q]' + \n\t\t'noscript[E][#|Y]' + \n\t\t'td[E|ZE][#|Y]' + \n\t\t'tfoot[ZF][tr]' + \n\t\t'tbody[ZF][tr]' + \n\t\t'area[E|D|shape|coords|href|nohref|alt|target][]' + \n\t\t'base[id|href|target][]' + \n\t\t'body[E|onload|onunload|background|bgcolor|text|link|vlink|alink][#|Y]'\n\t);\n\n\tboolAttrMap = makeMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected,autoplay,loop,controls');\n\tshortEndedElementsMap = makeMap('area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed,source');\n\tnonEmptyElementsMap = tinymce.extend(makeMap('td,th,iframe,video,audio,object'), shortEndedElementsMap);\n\tdefaultWhiteSpaceElementsMap = makeMap('pre,script,style,textarea');\n\tselfClosingElementsMap = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');\n\n\t/**\n\t * Schema validator class.\n\t *\n\t * @class tinymce.html.Schema\n\t * @example\n\t *  if (tinymce.activeEditor.schema.isValidChild('p', 'span'))\n\t *    alert('span is valid child of p.');\n\t *\n\t *  if (tinymce.activeEditor.schema.getElementRule('p'))\n\t *    alert('P is a valid element.');\n\t *\n\t * @class tinymce.html.Schema\n\t * @version 3.4\n\t */\n\n\t/**\n\t * Constructs a new Schema instance.\n\t *\n\t * @constructor\n\t * @method Schema\n\t * @param {Object} settings Name/value settings object.\n\t */\n\ttinymce.html.Schema = function(settings) {\n\t\tvar self = this, elements = {}, children = {}, patternElements = [], validStyles, whiteSpaceElementsMap;\n\n\t\tsettings = settings || {};\n\n\t\t// Allow all elements and attributes if verify_html is set to false\n\t\tif (settings.verify_html === false)\n\t\t\tsettings.valid_elements = '*[*]';\n\n\t\t// Build styles list\n\t\tif (settings.valid_styles) {\n\t\t\tvalidStyles = {};\n\n\t\t\t// Convert styles into a rule list\n\t\t\teach(settings.valid_styles, function(value, key) {\n\t\t\t\tvalidStyles[key] = tinymce.explode(value);\n\t\t\t});\n\t\t}\n\n\t\twhiteSpaceElementsMap = settings.whitespace_elements ? makeMap(settings.whitespace_elements) : defaultWhiteSpaceElementsMap;\n\n\t\t// Converts a wildcard expression string to a regexp for example *a will become /.*a/.\n\t\tfunction patternToRegExp(str) {\n\t\t\treturn new RegExp('^' + str.replace(/([?+*])/g, '.$1') + '$');\n\t\t};\n\n\t\t// Parses the specified valid_elements string and adds to the current rules\n\t\t// This function is a bit hard to read since it's heavily optimized for speed\n\t\tfunction addValidElements(valid_elements) {\n\t\t\tvar ei, el, ai, al, yl, matches, element, attr, attrData, elementName, attrName, attrType, attributes, attributesOrder,\n\t\t\t\tprefix, outputName, globalAttributes, globalAttributesOrder, transElement, key, childKey, value,\n\t\t\t\telementRuleRegExp = /^([#+-])?([^\\[\\/]+)(?:\\/([^\\[]+))?(?:\\[([^\\]]+)\\])?$/,\n\t\t\t\tattrRuleRegExp = /^([!\\-])?(\\w+::\\w+|[^=:<]+)?(?:([=:<])(.*))?$/,\n\t\t\t\thasPatternsRegExp = /[*?+]/;\n\n\t\t\tif (valid_elements) {\n\t\t\t\t// Split valid elements into an array with rules\n\t\t\t\tvalid_elements = split(valid_elements);\n\n\t\t\t\tif (elements['@']) {\n\t\t\t\t\tglobalAttributes = elements['@'].attributes;\n\t\t\t\t\tglobalAttributesOrder = elements['@'].attributesOrder;\n\t\t\t\t}\n\n\t\t\t\t// Loop all rules\n\t\t\t\tfor (ei = 0, el = valid_elements.length; ei < el; ei++) {\n\t\t\t\t\t// Parse element rule\n\t\t\t\t\tmatches = elementRuleRegExp.exec(valid_elements[ei]);\n\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t// Setup local names for matches\n\t\t\t\t\t\tprefix = matches[1];\n\t\t\t\t\t\telementName = matches[2];\n\t\t\t\t\t\toutputName = matches[3];\n\t\t\t\t\t\tattrData = matches[4];\n\n\t\t\t\t\t\t// Create new attributes and attributesOrder\n\t\t\t\t\t\tattributes = {};\n\t\t\t\t\t\tattributesOrder = [];\n\n\t\t\t\t\t\t// Create the new element\n\t\t\t\t\t\telement = {\n\t\t\t\t\t\t\tattributes : attributes,\n\t\t\t\t\t\t\tattributesOrder : attributesOrder\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Padd empty elements prefix\n\t\t\t\t\t\tif (prefix === '#')\n\t\t\t\t\t\t\telement.paddEmpty = true;\n\n\t\t\t\t\t\t// Remove empty elements prefix\n\t\t\t\t\t\tif (prefix === '-')\n\t\t\t\t\t\t\telement.removeEmpty = true;\n\n\t\t\t\t\t\t// Copy attributes from global rule into current rule\n\t\t\t\t\t\tif (globalAttributes) {\n\t\t\t\t\t\t\tfor (key in globalAttributes)\n\t\t\t\t\t\t\t\tattributes[key] = globalAttributes[key];\n\n\t\t\t\t\t\t\tattributesOrder.push.apply(attributesOrder, globalAttributesOrder);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Attributes defined\n\t\t\t\t\t\tif (attrData) {\n\t\t\t\t\t\t\tattrData = split(attrData, '|');\n\t\t\t\t\t\t\tfor (ai = 0, al = attrData.length; ai < al; ai++) {\n\t\t\t\t\t\t\t\tmatches = attrRuleRegExp.exec(attrData[ai]);\n\t\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\t\tattr = {};\n\t\t\t\t\t\t\t\t\tattrType = matches[1];\n\t\t\t\t\t\t\t\t\tattrName = matches[2].replace(/::/g, ':');\n\t\t\t\t\t\t\t\t\tprefix = matches[3];\n\t\t\t\t\t\t\t\t\tvalue = matches[4];\n\n\t\t\t\t\t\t\t\t\t// Required\n\t\t\t\t\t\t\t\t\tif (attrType === '!') {\n\t\t\t\t\t\t\t\t\t\telement.attributesRequired = element.attributesRequired || [];\n\t\t\t\t\t\t\t\t\t\telement.attributesRequired.push(attrName);\n\t\t\t\t\t\t\t\t\t\tattr.required = true;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Denied from global\n\t\t\t\t\t\t\t\t\tif (attrType === '-') {\n\t\t\t\t\t\t\t\t\t\tdelete attributes[attrName];\n\t\t\t\t\t\t\t\t\t\tattributesOrder.splice(tinymce.inArray(attributesOrder, attrName), 1);\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Default value\n\t\t\t\t\t\t\t\t\tif (prefix) {\n\t\t\t\t\t\t\t\t\t\t// Default value\n\t\t\t\t\t\t\t\t\t\tif (prefix === '=') {\n\t\t\t\t\t\t\t\t\t\t\telement.attributesDefault = element.attributesDefault || [];\n\t\t\t\t\t\t\t\t\t\t\telement.attributesDefault.push({name: attrName, value: value});\n\t\t\t\t\t\t\t\t\t\t\tattr.defaultValue = value;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Forced value\n\t\t\t\t\t\t\t\t\t\tif (prefix === ':') {\n\t\t\t\t\t\t\t\t\t\t\telement.attributesForced = element.attributesForced || [];\n\t\t\t\t\t\t\t\t\t\t\telement.attributesForced.push({name: attrName, value: value});\n\t\t\t\t\t\t\t\t\t\t\tattr.forcedValue = value;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Required values\n\t\t\t\t\t\t\t\t\t\tif (prefix === '<')\n\t\t\t\t\t\t\t\t\t\t\tattr.validValues = makeMap(value, '?');\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Check for attribute patterns\n\t\t\t\t\t\t\t\t\tif (hasPatternsRegExp.test(attrName)) {\n\t\t\t\t\t\t\t\t\t\telement.attributePatterns = element.attributePatterns || [];\n\t\t\t\t\t\t\t\t\t\tattr.pattern = patternToRegExp(attrName);\n\t\t\t\t\t\t\t\t\t\telement.attributePatterns.push(attr);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Add attribute to order list if it doesn't already exist\n\t\t\t\t\t\t\t\t\t\tif (!attributes[attrName])\n\t\t\t\t\t\t\t\t\t\t\tattributesOrder.push(attrName);\n\n\t\t\t\t\t\t\t\t\t\tattributes[attrName] = attr;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Global rule, store away these for later usage\n\t\t\t\t\t\tif (!globalAttributes && elementName == '@') {\n\t\t\t\t\t\t\tglobalAttributes = attributes;\n\t\t\t\t\t\t\tglobalAttributesOrder = attributesOrder;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Handle substitute elements such as b/strong\n\t\t\t\t\t\tif (outputName) {\n\t\t\t\t\t\t\telement.outputName = elementName;\n\t\t\t\t\t\t\telements[outputName] = element;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add pattern or exact element\n\t\t\t\t\t\tif (hasPatternsRegExp.test(elementName)) {\n\t\t\t\t\t\t\telement.pattern = patternToRegExp(elementName);\n\t\t\t\t\t\t\tpatternElements.push(element);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\telements[elementName] = element;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfunction setValidElements(valid_elements) {\n\t\t\telements = {};\n\t\t\tpatternElements = [];\n\n\t\t\taddValidElements(valid_elements);\n\n\t\t\teach(transitional, function(element, name) {\n\t\t\t\tchildren[name] = element.children;\n\t\t\t});\n\t\t};\n\n\t\t// Adds custom non HTML elements to the schema\n\t\tfunction addCustomElements(custom_elements) {\n\t\t\tvar customElementRegExp = /^(~)?(.+)$/;\n\n\t\t\tif (custom_elements) {\n\t\t\t\teach(split(custom_elements), function(rule) {\n\t\t\t\t\tvar matches = customElementRegExp.exec(rule),\n\t\t\t\t\t\tinline = matches[1] === '~',\n\t\t\t\t\t\tcloneName = inline ? 'span' : 'div',\n\t\t\t\t\t\tname = matches[2];\n\n\t\t\t\t\tchildren[name] = children[cloneName];\n\t\t\t\t\tcustomElementsMap[name] = cloneName;\n\n\t\t\t\t\t// If it's not marked as inline then add it to valid block elements\n\t\t\t\t\tif (!inline)\n\t\t\t\t\t\tblockElementsMap[name] = {};\n\n\t\t\t\t\t// Add custom elements at span/div positions\n\t\t\t\t\teach(children, function(element, child) {\n\t\t\t\t\t\tif (element[cloneName])\n\t\t\t\t\t\t\telement[name] = element[cloneName];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Adds valid children to the schema object\n\t\tfunction addValidChildren(valid_children) {\n\t\t\tvar childRuleRegExp = /^([+\\-]?)(\\w+)\\[([^\\]]+)\\]$/;\n\n\t\t\tif (valid_children) {\n\t\t\t\teach(split(valid_children), function(rule) {\n\t\t\t\t\tvar matches = childRuleRegExp.exec(rule), parent, prefix;\n\n\t\t\t\t\tif (matches) {\n\t\t\t\t\t\tprefix = matches[1];\n\n\t\t\t\t\t\t// Add/remove items from default\n\t\t\t\t\t\tif (prefix)\n\t\t\t\t\t\t\tparent = children[matches[2]];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tparent = children[matches[2]] = {'#comment' : {}};\n\n\t\t\t\t\t\tparent = children[matches[2]];\n\n\t\t\t\t\t\teach(split(matches[3], '|'), function(child) {\n\t\t\t\t\t\t\tif (prefix === '-')\n\t\t\t\t\t\t\t\tdelete parent[child];\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tparent[child] = {};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction getElementRule(name) {\n\t\t\tvar element = elements[name], i;\n\n\t\t\t// Exact match found\n\t\t\tif (element)\n\t\t\t\treturn element;\n\n\t\t\t// No exact match then try the patterns\n\t\t\ti = patternElements.length;\n\t\t\twhile (i--) {\n\t\t\t\telement = patternElements[i];\n\n\t\t\t\tif (element.pattern.test(name))\n\t\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\n\t\tif (!settings.valid_elements) {\n\t\t\t// No valid elements defined then clone the elements from the transitional spec\n\t\t\teach(transitional, function(element, name) {\n\t\t\t\telements[name] = {\n\t\t\t\t\tattributes : element.attributes,\n\t\t\t\t\tattributesOrder : element.attributesOrder\n\t\t\t\t};\n\n\t\t\t\tchildren[name] = element.children;\n\t\t\t});\n\n\t\t\t// Switch these\n\t\t\teach(split('strong/b,em/i'), function(item) {\n\t\t\t\titem = split(item, '/');\n\t\t\t\telements[item[1]].outputName = item[0];\n\t\t\t});\n\n\t\t\t// Add default alt attribute for images\n\t\t\telements.img.attributesDefault = [{name: 'alt', value: ''}];\n\n\t\t\t// Remove these if they are empty by default\n\t\t\teach(split('ol,ul,sub,sup,blockquote,span,font,a,table,tbody,tr'), function(name) {\n\t\t\t\telements[name].removeEmpty = true;\n\t\t\t});\n\n\t\t\t// Padd these by default\n\t\t\teach(split('p,h1,h2,h3,h4,h5,h6,th,td,pre,div,address,caption'), function(name) {\n\t\t\t\telements[name].paddEmpty = true;\n\t\t\t});\n\t\t} else\n\t\t\tsetValidElements(settings.valid_elements);\n\n\t\taddCustomElements(settings.custom_elements);\n\t\taddValidChildren(settings.valid_children);\n\t\taddValidElements(settings.extended_valid_elements);\n\n\t\t// Todo: Remove this when we fix list handling to be valid\n\t\taddValidChildren('+ol[ul|ol],+ul[ul|ol]');\n\n\t\t// If the user didn't allow span only allow internal spans\n\t\tif (!getElementRule('span'))\n\t\t\taddValidElements('span[!data-mce-type|*]');\n\n\t\t// Delete invalid elements\n\t\tif (settings.invalid_elements) {\n\t\t\ttinymce.each(tinymce.explode(settings.invalid_elements), function(item) {\n\t\t\t\tif (elements[item])\n\t\t\t\t\tdelete elements[item];\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Name/value map object with valid parents and children to those parents.\n\t\t *\n\t\t * @example\n\t\t * children = {\n\t\t *    div:{p:{}, h1:{}}\n\t\t * };\n\t\t * @field children\n\t\t * @type {Object}\n\t\t */\n\t\tself.children = children;\n\n\t\t/**\n\t\t * Name/value map object with valid styles for each element.\n\t\t *\n\t\t * @field styles\n\t\t * @type {Object}\n\t\t */\n\t\tself.styles = validStyles;\n\n\t\t/**\n\t\t * Returns a map with boolean attributes.\n\t\t *\n\t\t * @method getBoolAttrs\n\t\t * @return {Object} Name/value lookup map for boolean attributes.\n\t\t */\n\t\tself.getBoolAttrs = function() {\n\t\t\treturn boolAttrMap;\n\t\t};\n\n\t\t/**\n\t\t * Returns a map with block elements.\n\t\t *\n\t\t * @method getBoolAttrs\n\t\t * @return {Object} Name/value lookup map for block elements.\n\t\t */\n\t\tself.getBlockElements = function() {\n\t\t\treturn blockElementsMap;\n\t\t};\n\n\t\t/**\n\t\t * Returns a map with short ended elements such as BR or IMG.\n\t\t *\n\t\t * @method getShortEndedElements\n\t\t * @return {Object} Name/value lookup map for short ended elements.\n\t\t */\n\t\tself.getShortEndedElements = function() {\n\t\t\treturn shortEndedElementsMap;\n\t\t};\n\n\t\t/**\n\t\t * Returns a map with self closing tags such as <li>.\n\t\t *\n\t\t * @method getSelfClosingElements\n\t\t * @return {Object} Name/value lookup map for self closing tags elements.\n\t\t */\n\t\tself.getSelfClosingElements = function() {\n\t\t\treturn selfClosingElementsMap;\n\t\t};\n\n\t\t/**\n\t\t * Returns a map with elements that should be treated as contents regardless if it has text\n\t\t * content in them or not such as TD, VIDEO or IMG.\n\t\t *\n\t\t * @method getNonEmptyElements\n\t\t * @return {Object} Name/value lookup map for non empty elements.\n\t\t */\n\t\tself.getNonEmptyElements = function() {\n\t\t\treturn nonEmptyElementsMap;\n\t\t};\n\n\t\t/**\n\t\t * Returns a map with elements where white space is to be preserved like PRE or SCRIPT.\n\t\t *\n\t\t * @method getWhiteSpaceElements\n\t\t * @return {Object} Name/value lookup map for white space elements.\n\t\t */\n\t\tself.getWhiteSpaceElements = function() {\n\t\t\treturn whiteSpaceElementsMap;\n\t\t};\n\n\t\t/**\n\t\t * Returns true/false if the specified element and it's child is valid or not\n\t\t * according to the schema.\n\t\t *\n\t\t * @method isValidChild\n\t\t * @param {String} name Element name to check for.\n\t\t * @param {String} child Element child to verify.\n\t\t * @return {Boolean} True/false if the element is a valid child of the specified parent.\n\t\t */\n\t\tself.isValidChild = function(name, child) {\n\t\t\tvar parent = children[name];\n\n\t\t\treturn !!(parent && parent[child]);\n\t\t};\n\n\t\t/**\n\t\t * Returns true/false if the specified element is valid or not\n\t\t * according to the schema.\n\t\t *\n\t\t * @method getElementRule\n\t\t * @param {String} name Element name to check for.\n\t\t * @return {Object} Element object or undefined if the element isn't valid.\n\t\t */\n\t\tself.getElementRule = getElementRule;\n\n\t\t/**\n\t\t * Returns an map object of all custom elements.\n\t\t *\n\t\t * @method getCustomElements\n\t\t * @return {Object} Name/value map object of all custom elements.\n\t\t */\n\t\tself.getCustomElements = function() {\n\t\t\treturn customElementsMap;\n\t\t};\n\n\t\t/**\n\t\t * Parses a valid elements string and adds it to the schema. The valid elements format is for example \"element[attr=default|otherattr]\".\n\t\t * Existing rules will be replaced with the ones specified, so this extends the schema.\n\t\t *\n\t\t * @method addValidElements\n\t\t * @param {String} valid_elements String in the valid elements format to be parsed.\n\t\t */\n\t\tself.addValidElements = addValidElements;\n\n\t\t/**\n\t\t * Parses a valid elements string and sets it to the schema. The valid elements format is for example \"element[attr=default|otherattr]\".\n\t\t * Existing rules will be replaced with the ones specified, so this extends the schema.\n\t\t *\n\t\t * @method setValidElements\n\t\t * @param {String} valid_elements String in the valid elements format to be parsed.\n\t\t */\n\t\tself.setValidElements = setValidElements;\n\n\t\t/**\n\t\t * Adds custom non HTML elements to the schema.\n\t\t *\n\t\t * @method addCustomElements\n\t\t * @param {String} custom_elements Comma separated list of custom elements to add.\n\t\t */\n\t\tself.addCustomElements = addCustomElements;\n\n\t\t/**\n\t\t * Parses a valid children string and adds them to the schema structure. The valid children format is for example: \"element[child1|child2]\".\n\t\t *\n\t\t * @method addValidChildren\n\t\t * @param {String} valid_children Valid children elements string to parse\n\t\t */\n\t\tself.addValidChildren = addValidChildren;\n\t};\n\n\t// Expose boolMap and blockElementMap as static properties for usage in DOMUtils\n\ttinymce.html.Schema.boolAttrMap = boolAttrMap;\n\ttinymce.html.Schema.blockElementsMap = blockElementsMap;\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/html/Entities.js":"/**\n * Entities.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\tvar namedEntities, baseEntities, reverseEntities,\n\t\tattrsCharsRegExp = /[&<>\\\"\\u007E-\\uD7FF\\uE000-\\uFFEF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n\t\ttextCharsRegExp = /[<>&\\u007E-\\uD7FF\\uE000-\\uFFEF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n\t\trawCharsRegExp = /[<>&\\\"\\']/g,\n\t\tentityRegExp = /&(#x|#)?([\\w]+);/g,\n\t\tasciiMap = {\n\t\t\t\t128 : \"\\u20AC\", 130 : \"\\u201A\", 131 : \"\\u0192\", 132 : \"\\u201E\", 133 : \"\\u2026\", 134 : \"\\u2020\",\n\t\t\t\t135 : \"\\u2021\", 136 : \"\\u02C6\", 137 : \"\\u2030\", 138 : \"\\u0160\", 139 : \"\\u2039\", 140 : \"\\u0152\",\n\t\t\t\t142 : \"\\u017D\", 145 : \"\\u2018\", 146 : \"\\u2019\", 147 : \"\\u201C\", 148 : \"\\u201D\", 149 : \"\\u2022\",\n\t\t\t\t150 : \"\\u2013\", 151 : \"\\u2014\", 152 : \"\\u02DC\", 153 : \"\\u2122\", 154 : \"\\u0161\", 155 : \"\\u203A\",\n\t\t\t\t156 : \"\\u0153\", 158 : \"\\u017E\", 159 : \"\\u0178\"\n\t\t};\n\n\t// Raw entities\n\tbaseEntities = {\n\t\t'\\\"' : '&quot;', // Needs to be escaped since the YUI compressor would otherwise break the code\n\t\t\"'\" : '&#39;',\n\t\t'<' : '&lt;',\n\t\t'>' : '&gt;',\n\t\t'&' : '&amp;'\n\t};\n\n\t// Reverse lookup table for raw entities\n\treverseEntities = {\n\t\t'&lt;' : '<',\n\t\t'&gt;' : '>',\n\t\t'&amp;' : '&',\n\t\t'&quot;' : '\"',\n\t\t'&apos;' : \"'\"\n\t};\n\n\t// Decodes text by using the browser\n\tfunction nativeDecode(text) {\n\t\tvar elm;\n\n\t\telm = document.createElement(\"div\");\n\t\telm.innerHTML = text;\n\n\t\treturn elm.textContent || elm.innerText || text;\n\t};\n\n\t// Build a two way lookup table for the entities\n\tfunction buildEntitiesLookup(items, radix) {\n\t\tvar i, chr, entity, lookup = {};\n\n\t\tif (items) {\n\t\t\titems = items.split(',');\n\t\t\tradix = radix || 10;\n\n\t\t\t// Build entities lookup table\n\t\t\tfor (i = 0; i < items.length; i += 2) {\n\t\t\t\tchr = String.fromCharCode(parseInt(items[i], radix));\n\n\t\t\t\t// Only add non base entities\n\t\t\t\tif (!baseEntities[chr]) {\n\t\t\t\t\tentity = '&' + items[i + 1] + ';';\n\t\t\t\t\tlookup[chr] = entity;\n\t\t\t\t\tlookup[entity] = chr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lookup;\n\t\t}\n\t};\n\n\t// Unpack entities lookup where the numbers are in radix 32 to reduce the size\n\tnamedEntities = buildEntitiesLookup(\n\t\t'50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,' +\n\t\t'5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,' +\n\t\t'5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,' +\n\t\t'5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,' +\n\t\t'68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,' +\n\t\t'6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,' +\n\t\t'6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,' +\n\t\t'75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,' +\n\t\t'7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,' +\n\t\t'7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,' +\n\t\t'sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,' +\n\t\t'st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,' +\n\t\t't9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,' +\n\t\t'tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,' +\n\t\t'u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,' +\n\t\t'81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,' +\n\t\t'8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,' +\n\t\t'8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,' +\n\t\t'8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,' +\n\t\t'8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,' +\n\t\t'nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,' +\n\t\t'rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,' +\n\t\t'Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,' +\n\t\t'80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,' +\n\t\t'811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro'\n\t, 32);\n\n\ttinymce.html = tinymce.html || {};\n\n\t/**\n\t * Entity encoder class.\n\t *\n\t * @class tinymce.html.SaxParser\n\t * @static\n\t * @version 3.4\n\t */\n\ttinymce.html.Entities = {\n\t\t/**\n\t\t * Encodes the specified string using raw entities. This means only the required XML base entities will be endoded.\n\t\t *\n\t\t * @method encodeRaw\n\t\t * @param {String} text Text to encode.\n\t\t * @param {Boolean} attr Optional flag to specify if the text is attribute contents.\n\t\t * @return {String} Entity encoded text.\n\t\t */\n\t\tencodeRaw : function(text, attr) {\n\t\t\treturn text.replace(attr ? attrsCharsRegExp : textCharsRegExp, function(chr) {\n\t\t\t\treturn baseEntities[chr] || chr;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Encoded the specified text with both the attributes and text entities. This function will produce larger text contents\n\t\t * since it doesn't know if the context is within a attribute or text node. This was added for compatibility\n\t\t * and is exposed as the DOMUtils.encode function.\n\t\t *\n\t\t * @method encodeAllRaw\n\t\t * @param {String} text Text to encode.\n\t\t * @return {String} Entity encoded text.\n\t\t */\n\t\tencodeAllRaw : function(text) {\n\t\t\treturn ('' + text).replace(rawCharsRegExp, function(chr) {\n\t\t\t\treturn baseEntities[chr] || chr;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Encodes the specified string using numeric entities. The core entities will be encoded as named ones but all non lower ascii characters\n\t\t * will be encoded into numeric entities.\n\t\t *\n\t\t * @method encodeNumeric\n\t\t * @param {String} text Text to encode.\n\t\t * @param {Boolean} attr Optional flag to specify if the text is attribute contents.\n\t\t * @return {String} Entity encoded text.\n\t\t */\n\t\tencodeNumeric : function(text, attr) {\n\t\t\treturn text.replace(attr ? attrsCharsRegExp : textCharsRegExp, function(chr) {\n\t\t\t\t// Multi byte sequence convert it to a single entity\n\t\t\t\tif (chr.length > 1)\n\t\t\t\t\treturn '&#' + (((chr.charCodeAt(0) - 0xD800) * 0x400) + (chr.charCodeAt(1) - 0xDC00) + 0x10000) + ';';\n\n\t\t\t\treturn baseEntities[chr] || '&#' + chr.charCodeAt(0) + ';';\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Encodes the specified string using named entities. The core entities will be encoded as named ones but all non lower ascii characters\n\t\t * will be encoded into named entities.\n\t\t *\n\t\t * @method encodeNamed\n\t\t * @param {String} text Text to encode.\n\t\t * @param {Boolean} attr Optional flag to specify if the text is attribute contents.\n\t\t * @param {Object} entities Optional parameter with entities to use.\n\t\t * @return {String} Entity encoded text.\n\t\t */\n\t\tencodeNamed : function(text, attr, entities) {\n\t\t\tentities = entities || namedEntities;\n\n\t\t\treturn text.replace(attr ? attrsCharsRegExp : textCharsRegExp, function(chr) {\n\t\t\t\treturn baseEntities[chr] || entities[chr] || chr;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Returns an encode function based on the name(s) and it's optional entities.\n\t\t *\n\t\t * @method getEncodeFunc\n\t\t * @param {String} name Comma separated list of encoders for example named,numeric.\n\t\t * @param {String} entities Optional parameter with entities to use instead of the built in set.\n\t\t * @return {function} Encode function to be used.\n\t\t */\n\t\tgetEncodeFunc : function(name, entities) {\n\t\t\tvar Entities = tinymce.html.Entities;\n\n\t\t\tentities = buildEntitiesLookup(entities) || namedEntities;\n\n\t\t\tfunction encodeNamedAndNumeric(text, attr) {\n\t\t\t\treturn text.replace(attr ? attrsCharsRegExp : textCharsRegExp, function(chr) {\n\t\t\t\t\treturn baseEntities[chr] || entities[chr] || '&#' + chr.charCodeAt(0) + ';' || chr;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tfunction encodeCustomNamed(text, attr) {\n\t\t\t\treturn Entities.encodeNamed(text, attr, entities);\n\t\t\t};\n\n\t\t\t// Replace + with , to be compatible with previous TinyMCE versions\n\t\t\tname = tinymce.makeMap(name.replace(/\\+/g, ','));\n\n\t\t\t// Named and numeric encoder\n\t\t\tif (name.named && name.numeric)\n\t\t\t\treturn encodeNamedAndNumeric;\n\n\t\t\t// Named encoder\n\t\t\tif (name.named) {\n\t\t\t\t// Custom names\n\t\t\t\tif (entities)\n\t\t\t\t\treturn encodeCustomNamed;\n\n\t\t\t\treturn Entities.encodeNamed;\n\t\t\t}\n\n\t\t\t// Numeric\n\t\t\tif (name.numeric)\n\t\t\t\treturn Entities.encodeNumeric;\n\n\t\t\t// Raw encoder\n\t\t\treturn Entities.encodeRaw;\n\t\t},\n\n\t\t/**\n\t\t * Decodes the specified string, this will replace entities with raw UTF characters.\n\t\t *\n\t\t * @param {String} text Text to entity decode.\n\t\t * @return {String} Entity decoded string.\n\t\t */\n\t\tdecode : function(text) {\n\t\t\treturn text.replace(entityRegExp, function(all, numeric, value) {\n\t\t\t\tif (numeric) {\n\t\t\t\t\tvalue = parseInt(value, numeric.length === 2 ? 16 : 10);\n\n\t\t\t\t\t// Support upper UTF\n\t\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\t\tvalue -= 0x10000;\n\n\t\t\t\t\t\treturn String.fromCharCode(0xD800 + (value >> 10), 0xDC00 + (value & 0x3FF));\n\t\t\t\t\t} else\n\t\t\t\t\t\treturn asciiMap[value] || String.fromCharCode(value);\n\t\t\t\t}\n\n\t\t\t\treturn reverseEntities[all] || namedEntities[all] || nativeDecode(all);\n\t\t\t});\n\t\t}\n\t};\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/html/SaxParser.js":"/**\n * SaxParser.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\t/**\n\t * This class parses HTML code using pure JavaScript and executes various events for each item it finds. It will\n\t * always execute the events in the right order for tag soup code like <b><p></b></p>. It will also remove elements\n\t * and attributes that doesn't fit the schema if the validate setting is enabled.\n\t *\n\t * @example\n\t * var parser = new tinymce.html.SaxParser({\n\t *     validate: true,\n\t *\n\t *     comment: function(text) {\n\t *         console.log('Comment:', text);\n\t *     },\n\t *\n\t *     cdata: function(text) {\n\t *         console.log('CDATA:', text);\n\t *     },\n\t *\n\t *     text: function(text, raw) {\n\t *         console.log('Text:', text, 'Raw:', raw);\n\t *     },\n\t *\n\t *     start: function(name, attrs, empty) {\n\t *         console.log('Start:', name, attrs, empty);\n\t *     },\n\t *\n\t *     end: function(name) {\n\t *         console.log('End:', name);\n\t *     },\n\t *\n\t *     pi: function(name, text) {\n\t *         console.log('PI:', name, text);\n\t *     },\n\t *\n\t *     doctype: function(text) {\n\t *         console.log('DocType:', text);\n\t *     }\n\t * }, schema);\n\t * @class tinymce.html.SaxParser\n\t * @version 3.4\n\t */\n\n\t/**\n\t * Constructs a new SaxParser instance.\n\t *\n\t * @constructor\n\t * @method SaxParser\n\t * @param {Object} settings Name/value collection of settings. comment, cdata, text, start and end are callbacks.\n\t * @param {tinymce.html.Schema} schema HTML Schema class to use when parsing.\n\t */\n\ttinymce.html.SaxParser = function(settings, schema) {\n\t\tvar self = this, noop = function() {};\n\n\t\tsettings = settings || {};\n\t\tself.schema = schema = schema || new tinymce.html.Schema();\n\n\t\tif (settings.fix_self_closing !== false)\n\t\t\tsettings.fix_self_closing = true;\n\n\t\t// Add handler functions from settings and setup default handlers\n\t\ttinymce.each('comment cdata text start end pi doctype'.split(' '), function(name) {\n\t\t\tif (name)\n\t\t\t\tself[name] = settings[name] || noop;\n\t\t});\n\n\t\t/**\n\t\t * Parses the specified HTML string and executes the callbacks for each item it finds.\n\t\t *\n\t\t * @example\n\t\t * new SaxParser({...}).parse('<b>text</b>');\n\t\t * @method parse\n\t\t * @param {String} html Html string to sax parse.\n\t\t */\n\t\tself.parse = function(html) {\n\t\t\tvar self = this, matches, index = 0, value, endRegExp, stack = [], attrList, i, text, name, isInternalElement, removeInternalElements,\n\t\t\t\tshortEndedElements, fillAttrsMap, isShortEnded, validate, elementRule, isValidElement, attr, attribsValue, invalidPrefixRegExp,\n\t\t\t\tvalidAttributesMap, validAttributePatterns, attributesRequired, attributesDefault, attributesForced, selfClosing,\n\t\t\t\ttokenRegExp, attrRegExp, specialElements, attrValue, idCount = 0, decode = tinymce.html.Entities.decode, fixSelfClosing, isIE;\n\n\t\t\tfunction processEndTag(name) {\n\t\t\t\tvar pos, i;\n\n\t\t\t\t// Find position of parent of the same type\n\t\t\t\tpos = stack.length;\n\t\t\t\twhile (pos--) {\n\t\t\t\t\tif (stack[pos].name === name)\n\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t// Found parent\n\t\t\t\tif (pos >= 0) {\n\t\t\t\t\t// Close all the open elements\n\t\t\t\t\tfor (i = stack.length - 1; i >= pos; i--) {\n\t\t\t\t\t\tname = stack[i];\n\n\t\t\t\t\t\tif (name.valid)\n\t\t\t\t\t\t\tself.end(name.name);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove the open elements from the stack\n\t\t\t\t\tstack.length = pos;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Precompile RegExps and map objects\n\t\t\ttokenRegExp = new RegExp('<(?:' +\n\t\t\t\t'(?:!--([\\\\w\\\\W]*?)-->)|' + // Comment\n\t\t\t\t'(?:!\\\\[CDATA\\\\[([\\\\w\\\\W]*?)\\\\]\\\\]>)|' + // CDATA\n\t\t\t\t'(?:!DOCTYPE([\\\\w\\\\W]*?)>)|' + // DOCTYPE\n\t\t\t\t'(?:\\\\?([^\\\\s\\\\/<>]+) ?([\\\\w\\\\W]*?)[?/]>)|' + // PI\n\t\t\t\t'(?:\\\\/([^>]+)>)|' + // End element\n\t\t\t\t'(?:([^\\\\s\\\\/<>]+)((?:\\\\s+[^\"\\'>]+(?:(?:\"[^\"]*\")|(?:\\'[^\\']*\\')|[^>]*))*|\\\\/)>)' + // Start element\n\t\t\t')', 'g');\n\n\t\t\tattrRegExp = /([\\w:\\-]+)(?:\\s*=\\s*(?:(?:\\\"((?:\\\\.|[^\\\"])*)\\\")|(?:\\'((?:\\\\.|[^\\'])*)\\')|([^>\\s]+)))?/g;\n\t\t\tspecialElements = {\n\t\t\t\t'script' : /<\\/script[^>]*>/gi,\n\t\t\t\t'style' : /<\\/style[^>]*>/gi,\n\t\t\t\t'noscript' : /<\\/noscript[^>]*>/gi\n\t\t\t};\n\n\t\t\t// Setup lookup tables for empty elements and boolean attributes\n\t\t\tshortEndedElements = schema.getShortEndedElements();\n\t\t\tselfClosing = schema.getSelfClosingElements();\n\t\t\tfillAttrsMap = schema.getBoolAttrs();\n\t\t\tvalidate = settings.validate;\n\t\t\tremoveInternalElements = settings.remove_internals;\n\t\t\tfixSelfClosing = settings.fix_self_closing;\n\t\t\tisIE = tinymce.isIE;\n\t\t\tinvalidPrefixRegExp = /^:/;\n\n\t\t\twhile (matches = tokenRegExp.exec(html)) {\n\t\t\t\t// Text\n\t\t\t\tif (index < matches.index)\n\t\t\t\t\tself.text(decode(html.substr(index, matches.index - index)));\n\n\t\t\t\tif (value = matches[6]) { // End element\n\t\t\t\t\tvalue = value.toLowerCase();\n\n\t\t\t\t\t// IE will add a \":\" in front of elements it doesn't understand like custom elements or HTML5 elements\n\t\t\t\t\tif (isIE && invalidPrefixRegExp.test(value))\n\t\t\t\t\t\tvalue = value.substr(1);\n\n\t\t\t\t\tprocessEndTag(value);\n\t\t\t\t} else if (value = matches[7]) { // Start element\n\t\t\t\t\tvalue = value.toLowerCase();\n\n\t\t\t\t\t// IE will add a \":\" in front of elements it doesn't understand like custom elements or HTML5 elements\n\t\t\t\t\tif (isIE && invalidPrefixRegExp.test(value))\n\t\t\t\t\t\tvalue = value.substr(1);\n\n\t\t\t\t\tisShortEnded = value in shortEndedElements;\n\n\t\t\t\t\t// Is self closing tag for example an <li> after an open <li>\n\t\t\t\t\tif (fixSelfClosing && selfClosing[value] && stack.length > 0 && stack[stack.length - 1].name === value)\n\t\t\t\t\t\tprocessEndTag(value);\n\n\t\t\t\t\t// Validate element\n\t\t\t\t\tif (!validate || (elementRule = schema.getElementRule(value))) {\n\t\t\t\t\t\tisValidElement = true;\n\n\t\t\t\t\t\t// Grab attributes map and patters when validation is enabled\n\t\t\t\t\t\tif (validate) {\n\t\t\t\t\t\t\tvalidAttributesMap = elementRule.attributes;\n\t\t\t\t\t\t\tvalidAttributePatterns = elementRule.attributePatterns;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Parse attributes\n\t\t\t\t\t\tif (attribsValue = matches[8]) {\n\t\t\t\t\t\t\tisInternalElement = attribsValue.indexOf('data-mce-type') !== -1; // Check if the element is an internal element\n\n\t\t\t\t\t\t\t// If the element has internal attributes then remove it if we are told to do so\n\t\t\t\t\t\t\tif (isInternalElement && removeInternalElements)\n\t\t\t\t\t\t\t\tisValidElement = false;\n\n\t\t\t\t\t\t\tattrList = [];\n\t\t\t\t\t\t\tattrList.map = {};\n\n\t\t\t\t\t\t\tattribsValue.replace(attrRegExp, function(match, name, value, val2, val3) {\n\t\t\t\t\t\t\t\tvar attrRule, i;\n\n\t\t\t\t\t\t\t\tname = name.toLowerCase();\n\t\t\t\t\t\t\t\tvalue = name in fillAttrsMap ? name : decode(value || val2 || val3 || ''); // Handle boolean attribute than value attribute\n\n\t\t\t\t\t\t\t\t// Validate name and value\n\t\t\t\t\t\t\t\tif (validate && !isInternalElement && name.indexOf('data-') !== 0) {\n\t\t\t\t\t\t\t\t\tattrRule = validAttributesMap[name];\n\n\t\t\t\t\t\t\t\t\t// Find rule by pattern matching\n\t\t\t\t\t\t\t\t\tif (!attrRule && validAttributePatterns) {\n\t\t\t\t\t\t\t\t\t\ti = validAttributePatterns.length;\n\t\t\t\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\t\t\t\tattrRule = validAttributePatterns[i];\n\t\t\t\t\t\t\t\t\t\t\tif (attrRule.pattern.test(name))\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// No rule matched\n\t\t\t\t\t\t\t\t\t\tif (i === -1)\n\t\t\t\t\t\t\t\t\t\t\tattrRule = null;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// No attribute rule found\n\t\t\t\t\t\t\t\t\tif (!attrRule)\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t// Validate value\n\t\t\t\t\t\t\t\t\tif (attrRule.validValues && !(value in attrRule.validValues))\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Add attribute to list and map\n\t\t\t\t\t\t\t\tattrList.map[name] = value;\n\t\t\t\t\t\t\t\tattrList.push({\n\t\t\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\t\t\tvalue: value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tattrList = [];\n\t\t\t\t\t\t\tattrList.map = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Process attributes if validation is enabled\n\t\t\t\t\t\tif (validate && !isInternalElement) {\n\t\t\t\t\t\t\tattributesRequired = elementRule.attributesRequired;\n\t\t\t\t\t\t\tattributesDefault = elementRule.attributesDefault;\n\t\t\t\t\t\t\tattributesForced = elementRule.attributesForced;\n\n\t\t\t\t\t\t\t// Handle forced attributes\n\t\t\t\t\t\t\tif (attributesForced) {\n\t\t\t\t\t\t\t\ti = attributesForced.length;\n\t\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\t\tattr = attributesForced[i];\n\t\t\t\t\t\t\t\t\tname = attr.name;\n\t\t\t\t\t\t\t\t\tattrValue = attr.value;\n\n\t\t\t\t\t\t\t\t\tif (attrValue === '{$uid}')\n\t\t\t\t\t\t\t\t\t\tattrValue = 'mce_' + idCount++;\n\n\t\t\t\t\t\t\t\t\tattrList.map[name] = attrValue;\n\t\t\t\t\t\t\t\t\tattrList.push({name: name, value: attrValue});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Handle default attributes\n\t\t\t\t\t\t\tif (attributesDefault) {\n\t\t\t\t\t\t\t\ti = attributesDefault.length;\n\t\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\t\tattr = attributesDefault[i];\n\t\t\t\t\t\t\t\t\tname = attr.name;\n\n\t\t\t\t\t\t\t\t\tif (!(name in attrList.map)) {\n\t\t\t\t\t\t\t\t\t\tattrValue = attr.value;\n\n\t\t\t\t\t\t\t\t\t\tif (attrValue === '{$uid}')\n\t\t\t\t\t\t\t\t\t\t\tattrValue = 'mce_' + idCount++;\n\n\t\t\t\t\t\t\t\t\t\tattrList.map[name] = attrValue;\n\t\t\t\t\t\t\t\t\t\tattrList.push({name: name, value: attrValue});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Handle required attributes\n\t\t\t\t\t\t\tif (attributesRequired) {\n\t\t\t\t\t\t\t\ti = attributesRequired.length;\n\t\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\t\tif (attributesRequired[i] in attrList.map)\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// None of the required attributes where found\n\t\t\t\t\t\t\t\tif (i === -1)\n\t\t\t\t\t\t\t\t\tisValidElement = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Invalidate element if it's marked as bogus\n\t\t\t\t\t\t\tif (attrList.map['data-mce-bogus'])\n\t\t\t\t\t\t\t\tisValidElement = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isValidElement)\n\t\t\t\t\t\t\tself.start(value, attrList, isShortEnded);\n\t\t\t\t\t} else\n\t\t\t\t\t\tisValidElement = false;\n\n\t\t\t\t\t// Treat script, noscript and style a bit different since they may include code that looks like elements\n\t\t\t\t\tif (endRegExp = specialElements[value]) {\n\t\t\t\t\t\tendRegExp.lastIndex = index = matches.index + matches[0].length;\n\n\t\t\t\t\t\tif (matches = endRegExp.exec(html)) {\n\t\t\t\t\t\t\tif (isValidElement)\n\t\t\t\t\t\t\t\ttext = html.substr(index, matches.index - index);\n\n\t\t\t\t\t\t\tindex = matches.index + matches[0].length;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttext = html.substr(index);\n\t\t\t\t\t\t\tindex = html.length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isValidElement && text.length > 0)\n\t\t\t\t\t\t\tself.text(text, true);\n\n\t\t\t\t\t\tif (isValidElement)\n\t\t\t\t\t\t\tself.end(value);\n\n\t\t\t\t\t\ttokenRegExp.lastIndex = index;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Push value on to stack\n\t\t\t\t\tif (!isShortEnded) {\n\t\t\t\t\t\tif (!attribsValue || attribsValue.indexOf('/') != attribsValue.length - 1)\n\t\t\t\t\t\t\tstack.push({name: value, valid: isValidElement});\n\t\t\t\t\t\telse if (isValidElement)\n\t\t\t\t\t\t\tself.end(value);\n\t\t\t\t\t}\n\t\t\t\t} else if (value = matches[1]) { // Comment\n\t\t\t\t\tself.comment(value);\n\t\t\t\t} else if (value = matches[2]) { // CDATA\n\t\t\t\t\tself.cdata(value);\n\t\t\t\t} else if (value = matches[3]) { // DOCTYPE\n\t\t\t\t\tself.doctype(value);\n\t\t\t\t} else if (value = matches[4]) { // PI\n\t\t\t\t\tself.pi(value, matches[5]);\n\t\t\t\t}\n\n\t\t\t\tindex = matches.index + matches[0].length;\n\t\t\t}\n\n\t\t\t// Text\n\t\t\tif (index < html.length)\n\t\t\t\tself.text(decode(html.substr(index)));\n\n\t\t\t// Close any open elements\n\t\t\tfor (i = stack.length - 1; i >= 0; i--) {\n\t\t\t\tvalue = stack[i];\n\n\t\t\t\tif (value.valid)\n\t\t\t\t\tself.end(value.name);\n\t\t\t}\n\t\t};\n\t}\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/html/Styles.js":"/**\n * Styles.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n/**\n * This class is used to parse CSS styles it also compresses styles to reduce the output size.\n *\n * @example\n * var Styles = new tinymce.html.Styles({\n *    url_converter: function(url) {\n *       return url;\n *    }\n * });\n *\n * styles = Styles.parse('border: 1px solid red');\n * styles.color = 'red';\n *\n * console.log(new tinymce.html.StyleSerializer().serialize(styles));\n *\n * @class tinymce.html.Styles\n * @version 3.4\n */\ntinymce.html.Styles = function(settings, schema) {\n\tvar rgbRegExp = /rgb\\s*\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)/gi,\n\t\turlOrStrRegExp = /(?:url(?:(?:\\(\\s*\\\"([^\\\"]+)\\\"\\s*\\))|(?:\\(\\s*\\'([^\\']+)\\'\\s*\\))|(?:\\(\\s*([^)\\s]+)\\s*\\))))|(?:\\'([^\\']+)\\')|(?:\\\"([^\\\"]+)\\\")/gi,\n\t\tstyleRegExp = /\\s*([^:]+):\\s*([^;]+);?/g,\n\t\ttrimRightRegExp = /\\s+$/,\n\t\turlColorRegExp = /rgb/,\n\t\tundef, i, encodingLookup = {}, encodingItems;\n\n\tsettings = settings || {};\n\n\tencodingItems = '\\\\\" \\\\\\' \\\\; \\\\: ; : \\uFEFF'.split(' ');\n\tfor (i = 0; i < encodingItems.length; i++) {\n\t\tencodingLookup[encodingItems[i]] = '\\uFEFF' + i;\n\t\tencodingLookup['\\uFEFF' + i] = encodingItems[i];\n\t}\n\n\tfunction toHex(match, r, g, b) {\n\t\tfunction hex(val) {\n\t\t\tval = parseInt(val).toString(16);\n\n\t\t\treturn val.length > 1 ? val : '0' + val; // 0 -> 00\n\t\t};\n\n\t\treturn '#' + hex(r) + hex(g) + hex(b);\n\t};\n\n\treturn {\n\t\t/**\n\t\t * Parses the specified RGB color value and returns a hex version of that color.\n\t\t *\n\t\t * @method toHex\n\t\t * @param {String} color RGB string value like rgb(1,2,3)\n\t\t * @return {String} Hex version of that RGB value like #FF00FF.\n\t\t */\n\t\ttoHex : function(color) {\n\t\t\treturn color.replace(rgbRegExp, toHex);\n\t\t},\n\n\t\t/**\n\t\t * Parses the specified style value into an object collection. This parser will also\n\t\t * merge and remove any redundant items that browsers might have added. It will also convert non hex\n\t\t * colors to hex values. Urls inside the styles will also be converted to absolute/relative based on settings.\n\t\t *\n\t\t * @method parse\n\t\t * @param {String} css Style value to parse for example: border:1px solid red;.\n\t\t * @return {Object} Object representation of that style like {border : '1px solid red'}\n\t\t */\n\t\tparse : function(css) {\n\t\t\tvar styles = {}, matches, name, value, isEncoded, urlConverter = settings.url_converter, urlConverterScope = settings.url_converter_scope || this;\n\n\t\t\tfunction compress(prefix, suffix) {\n\t\t\t\tvar top, right, bottom, left;\n\n\t\t\t\t// Get values and check it needs compressing\n\t\t\t\ttop = styles[prefix + '-top' + suffix];\n\t\t\t\tif (!top)\n\t\t\t\t\treturn;\n\n\t\t\t\tright = styles[prefix + '-right' + suffix];\n\t\t\t\tif (top != right)\n\t\t\t\t\treturn;\n\n\t\t\t\tbottom = styles[prefix + '-bottom' + suffix];\n\t\t\t\tif (right != bottom)\n\t\t\t\t\treturn;\n\n\t\t\t\tleft = styles[prefix + '-left' + suffix];\n\t\t\t\tif (bottom != left)\n\t\t\t\t\treturn;\n\n\t\t\t\t// Compress\n\t\t\t\tstyles[prefix + suffix] = left;\n\t\t\t\tdelete styles[prefix + '-top' + suffix];\n\t\t\t\tdelete styles[prefix + '-right' + suffix];\n\t\t\t\tdelete styles[prefix + '-bottom' + suffix];\n\t\t\t\tdelete styles[prefix + '-left' + suffix];\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Checks if the specific style can be compressed in other words if all border-width are equal.\n\t\t\t */\n\t\t\tfunction canCompress(key) {\n\t\t\t\tvar value = styles[key], i;\n\n\t\t\t\tif (!value || value.indexOf(' ') < 0)\n\t\t\t\t\treturn;\n\n\t\t\t\tvalue = value.split(' ');\n\t\t\t\ti = value.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (value[i] !== value[0])\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tstyles[key] = value[0];\n\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Compresses multiple styles into one style.\n\t\t\t */\n\t\t\tfunction compress2(target, a, b, c) {\n\t\t\t\tif (!canCompress(a))\n\t\t\t\t\treturn;\n\n\t\t\t\tif (!canCompress(b))\n\t\t\t\t\treturn;\n\n\t\t\t\tif (!canCompress(c))\n\t\t\t\t\treturn;\n\n\t\t\t\t// Compress\n\t\t\t\tstyles[target] = styles[a] + ' ' + styles[b] + ' ' + styles[c];\n\t\t\t\tdelete styles[a];\n\t\t\t\tdelete styles[b];\n\t\t\t\tdelete styles[c];\n\t\t\t};\n\n\t\t\t// Encodes the specified string by replacing all \\\" \\' ; : with _<num>\n\t\t\tfunction encode(str) {\n\t\t\t\tisEncoded = true;\n\n\t\t\t\treturn encodingLookup[str];\n\t\t\t};\n\n\t\t\t// Decodes the specified string by replacing all _<num> with it's original value \\\" \\' etc\n\t\t\t// It will also decode the \\\" \\' if keep_slashes is set to fale or omitted\n\t\t\tfunction decode(str, keep_slashes) {\n\t\t\t\tif (isEncoded) {\n\t\t\t\t\tstr = str.replace(/\\uFEFF[0-9]/g, function(str) {\n\t\t\t\t\t\treturn encodingLookup[str];\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (!keep_slashes)\n\t\t\t\t\tstr = str.replace(/\\\\([\\'\\\";:])/g, \"$1\");\n\n\t\t\t\treturn str;\n\t\t\t}\n\n\t\t\tif (css) {\n\t\t\t\t// Encode \\\" \\' % and ; and : inside strings so they don't interfere with the style parsing\n\t\t\t\tcss = css.replace(/\\\\[\\\"\\';:\\uFEFF]/g, encode).replace(/\\\"[^\\\"]+\\\"|\\'[^\\']+\\'/g, function(str) {\n\t\t\t\t\treturn str.replace(/[;:]/g, encode);\n\t\t\t\t});\n\n\t\t\t\t// Parse styles\n\t\t\t\twhile (matches = styleRegExp.exec(css)) {\n\t\t\t\t\tname = matches[1].replace(trimRightRegExp, '').toLowerCase();\n\t\t\t\t\tvalue = matches[2].replace(trimRightRegExp, '');\n\n\t\t\t\t\tif (name && value.length > 0) {\n\t\t\t\t\t\t// Opera will produce 700 instead of bold in their style values\n\t\t\t\t\t\tif (name === 'font-weight' && value === '700')\n\t\t\t\t\t\t\tvalue = 'bold';\n\t\t\t\t\t\telse if (name === 'color' || name === 'background-color') // Lowercase colors like RED\n\t\t\t\t\t\t\tvalue = value.toLowerCase();\t\t\n\n\t\t\t\t\t\t// Convert RGB colors to HEX\n\t\t\t\t\t\tvalue = value.replace(rgbRegExp, toHex);\n\n\t\t\t\t\t\t// Convert URLs and force them into url('value') format\n\t\t\t\t\t\tvalue = value.replace(urlOrStrRegExp, function(match, url, url2, url3, str, str2) {\n\t\t\t\t\t\t\tstr = str || str2;\n\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr = decode(str);\n\n\t\t\t\t\t\t\t\t// Force strings into single quote format\n\t\t\t\t\t\t\t\treturn \"'\" + str.replace(/\\'/g, \"\\\\'\") + \"'\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\turl = decode(url || url2 || url3);\n\n\t\t\t\t\t\t\t// Convert the URL to relative/absolute depending on config\n\t\t\t\t\t\t\tif (urlConverter)\n\t\t\t\t\t\t\t\turl = urlConverter.call(urlConverterScope, url, 'style');\n\n\t\t\t\t\t\t\t// Output new URL format\n\t\t\t\t\t\t\treturn \"url('\" + url.replace(/\\'/g, \"\\\\'\") + \"')\";\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tstyles[name] = isEncoded ? decode(value, true) : value;\n\t\t\t\t\t}\n\n\t\t\t\t\tstyleRegExp.lastIndex = matches.index + matches[0].length;\n\t\t\t\t}\n\n\t\t\t\t// Compress the styles to reduce it's size for example IE will expand styles\n\t\t\t\tcompress(\"border\", \"\");\n\t\t\t\tcompress(\"border\", \"-width\");\n\t\t\t\tcompress(\"border\", \"-color\");\n\t\t\t\tcompress(\"border\", \"-style\");\n\t\t\t\tcompress(\"padding\", \"\");\n\t\t\t\tcompress(\"margin\", \"\");\n\t\t\t\tcompress2('border', 'border-width', 'border-style', 'border-color');\n\n\t\t\t\t// Remove pointless border, IE produces these\n\t\t\t\tif (styles.border === 'medium none')\n\t\t\t\t\tdelete styles.border;\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t},\n\n\t\t/**\n\t\t * Serializes the specified style object into a string.\n\t\t *\n\t\t * @method serialize\n\t\t * @param {Object} styles Object to serialize as string for example: {border : '1px solid red'}\n\t\t * @param {String} element_name Optional element name, if specified only the styles that matches the schema will be serialized.\n\t\t * @return {String} String representation of the style object for example: border: 1px solid red.\n\t\t */\n\t\tserialize : function(styles, element_name) {\n\t\t\tvar css = '', name, value;\n\n\t\t\tfunction serializeStyles(name) {\n\t\t\t\tvar styleList, i, l, value;\n\n\t\t\t\tstyleList = schema.styles[name];\n\t\t\t\tif (styleList) {\n\t\t\t\t\tfor (i = 0, l = styleList.length; i < l; i++) {\n\t\t\t\t\t\tname = styleList[i];\n\t\t\t\t\t\tvalue = styles[name];\n\n\t\t\t\t\t\tif (value !== undef && value.length > 0)\n\t\t\t\t\t\t\tcss += (css.length > 0 ? ' ' : '') + name + ': ' + value + ';';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Serialize styles according to schema\n\t\t\tif (element_name && schema && schema.styles) {\n\t\t\t\t// Serialize global styles and element specific styles\n\t\t\t\tserializeStyles('*');\n\t\t\t\tserializeStyles(element_name);\n\t\t\t} else {\n\t\t\t\t// Output the styles in the order they are inside the object\n\t\t\t\tfor (name in styles) {\n\t\t\t\t\tvalue = styles[name];\n\n\t\t\t\t\tif (value !== undef && value.length > 0)\n\t\t\t\t\t\tcss += (css.length > 0 ? ' ' : '') + name + ': ' + value + ';';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn css;\n\t\t}\n\t};\n};\n","Magento_Tinymce3/tiny_mce/classes/html/DomParser.js":"/**\n * DomParser.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\tvar Node = tinymce.html.Node;\n\n\t/**\n\t * This class parses HTML code into a DOM like structure of nodes it will remove redundant whitespace and make\n\t * sure that the node tree is valid according to the specified schema. So for example: <p>a<p>b</p>c</p> will become <p>a</p><p>b</p><p>c</p>\n\t *\n\t * @example\n\t * var parser = new tinymce.html.DomParser({validate: true}, schema);\n\t * var rootNode = parser.parse('<h1>content</h1>');\n\t *\n\t * @class tinymce.html.DomParser\n\t * @version 3.4\n\t */\n\n\t/**\n\t * Constructs a new DomParser instance.\n\t *\n\t * @constructor\n\t * @method DomParser\n\t * @param {Object} settings Name/value collection of settings. comment, cdata, text, start and end are callbacks.\n\t * @param {tinymce.html.Schema} schema HTML Schema class to use when parsing.\n\t */\n\ttinymce.html.DomParser = function(settings, schema) {\n\t\tvar self = this, nodeFilters = {}, attributeFilters = [], matchedNodes = {}, matchedAttributes = {};\n\n\t\tsettings = settings || {};\n\t\tsettings.validate = \"validate\" in settings ? settings.validate : true;\n\t\tsettings.root_name = settings.root_name || 'body';\n\t\tself.schema = schema = schema || new tinymce.html.Schema();\n\n\t\tfunction fixInvalidChildren(nodes) {\n\t\t\tvar ni, node, parent, parents, newParent, currentNode, tempNode, childNode, i,\n\t\t\t\tchildClone, nonEmptyElements, nonSplitableElements, sibling, nextNode;\n\n\t\t\tnonSplitableElements = tinymce.makeMap('tr,td,th,tbody,thead,tfoot,table');\n\t\t\tnonEmptyElements = schema.getNonEmptyElements();\n\n\t\t\tfor (ni = 0; ni < nodes.length; ni++) {\n\t\t\t\tnode = nodes[ni];\n\n\t\t\t\t// Already removed\n\t\t\t\tif (!node.parent)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Get list of all parent nodes until we find a valid parent to stick the child into\n\t\t\t\tparents = [node];\n\t\t\t\tfor (parent = node.parent; parent && !schema.isValidChild(parent.name, node.name) && !nonSplitableElements[parent.name]; parent = parent.parent)\n\t\t\t\t\tparents.push(parent);\n\n\t\t\t\t// Found a suitable parent\n\t\t\t\tif (parent && parents.length > 1) {\n\t\t\t\t\t// Reverse the array since it makes looping easier\n\t\t\t\t\tparents.reverse();\n\n\t\t\t\t\t// Clone the related parent and insert that after the moved node\n\t\t\t\t\tnewParent = currentNode = self.filterNode(parents[0].clone());\n\n\t\t\t\t\t// Start cloning and moving children on the left side of the target node\n\t\t\t\t\tfor (i = 0; i < parents.length - 1; i++) {\n\t\t\t\t\t\tif (schema.isValidChild(currentNode.name, parents[i].name)) {\n\t\t\t\t\t\t\ttempNode = self.filterNode(parents[i].clone());\n\t\t\t\t\t\t\tcurrentNode.append(tempNode);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\ttempNode = currentNode;\n\n\t\t\t\t\t\tfor (childNode = parents[i].firstChild; childNode && childNode != parents[i + 1]; ) {\n\t\t\t\t\t\t\tnextNode = childNode.next;\n\t\t\t\t\t\t\ttempNode.append(childNode);\n\t\t\t\t\t\t\tchildNode = nextNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentNode = tempNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!newParent.isEmpty(nonEmptyElements)) {\n\t\t\t\t\t\tparent.insert(newParent, parents[0], true);\n\t\t\t\t\t\tparent.insert(node, newParent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparent.insert(node, parents[0], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the element is empty by looking through it's contents and special treatment for <p><br /></p>\n\t\t\t\t\tparent = parents[0];\n\t\t\t\t\tif (parent.isEmpty(nonEmptyElements) || parent.firstChild === parent.lastChild && parent.firstChild.name === 'br') {\n\t\t\t\t\t\tparent.empty().remove();\n\t\t\t\t\t}\n\t\t\t\t} else if (node.parent) {\n\t\t\t\t\t// If it's an LI try to find a UL/OL for it or wrap it\n\t\t\t\t\tif (node.name === 'li') {\n\t\t\t\t\t\tsibling = node.prev;\n\t\t\t\t\t\tif (sibling && (sibling.name === 'ul' || sibling.name === 'ul')) {\n\t\t\t\t\t\t\tsibling.append(node);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsibling = node.next;\n\t\t\t\t\t\tif (sibling && (sibling.name === 'ul' || sibling.name === 'ul')) {\n\t\t\t\t\t\t\tsibling.insert(node, sibling.firstChild, true);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnode.wrap(self.filterNode(new Node('ul', 1)));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Try wrapping the element in a DIV\n\t\t\t\t\tif (schema.isValidChild(node.parent.name, 'div') && schema.isValidChild('div', node.name)) {\n\t\t\t\t\t\tnode.wrap(self.filterNode(new Node('div', 1)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We failed wrapping it, then remove or unwrap it\n\t\t\t\t\t\tif (node.name === 'style' || node.name === 'script')\n\t\t\t\t\t\t\tnode.empty().remove();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnode.unwrap();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Runs the specified node though the element and attributes filters.\n\t\t *\n\t\t * @param {tinymce.html.Node} Node the node to run filters on.\n\t\t * @return {tinymce.html.Node} The passed in node.\n\t\t */\n\t\tself.filterNode = function(node) {\n\t\t\tvar i, name, list;\n\n\t\t\t// Run element filters\n\t\t\tif (name in nodeFilters) {\n\t\t\t\tlist = matchedNodes[name];\n\n\t\t\t\tif (list)\n\t\t\t\t\tlist.push(node);\n\t\t\t\telse\n\t\t\t\t\tmatchedNodes[name] = [node];\n\t\t\t}\n\n\t\t\t// Run attribute filters\n\t\t\ti = attributeFilters.length;\n\t\t\twhile (i--) {\n\t\t\t\tname = attributeFilters[i].name;\n\n\t\t\t\tif (name in node.attributes.map) {\n\t\t\t\t\tlist = matchedAttributes[name];\n\n\t\t\t\t\tif (list)\n\t\t\t\t\t\tlist.push(node);\n\t\t\t\t\telse\n\t\t\t\t\t\tmatchedAttributes[name] = [node];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t};\n\n\t\t/**\n\t\t * Adds a node filter function to the parser, the parser will collect the specified nodes by name\n\t\t * and then execute the callback ones it has finished parsing the document.\n\t\t *\n\t\t * @example\n\t\t * parser.addNodeFilter('p,h1', function(nodes, name) {\n\t\t *\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t *\t\t\tconsole.log(nodes[i].name);\n\t\t *\t\t}\n\t\t * });\n\t\t * @method addNodeFilter\n\t\t * @method {String} name Comma separated list of nodes to collect.\n\t\t * @param {function} callback Callback function to execute once it has collected nodes.\n\t\t */\n\t\tself.addNodeFilter = function(name, callback) {\n\t\t\ttinymce.each(tinymce.explode(name), function(name) {\n\t\t\t\tvar list = nodeFilters[name];\n\n\t\t\t\tif (!list)\n\t\t\t\t\tnodeFilters[name] = list = [];\n\n\t\t\t\tlist.push(callback);\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Adds a attribute filter function to the parser, the parser will collect nodes that has the specified attributes\n\t\t * and then execute the callback ones it has finished parsing the document.\n\t\t *\n\t\t * @example\n\t\t * parser.addAttributeFilter('src,href', function(nodes, name) {\n\t\t *\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t *\t\t\tconsole.log(nodes[i].name);\n\t\t *\t\t}\n\t\t * });\n\t\t * @method addAttributeFilter\n\t\t * @method {String} name Comma separated list of nodes to collect.\n\t\t * @param {function} callback Callback function to execute once it has collected nodes.\n\t\t */\n\t\tself.addAttributeFilter = function(name, callback) {\n\t\t\ttinymce.each(tinymce.explode(name), function(name) {\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < attributeFilters.length; i++) {\n\t\t\t\t\tif (attributeFilters[i].name === name) {\n\t\t\t\t\t\tattributeFilters[i].callbacks.push(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tattributeFilters.push({name: name, callbacks: [callback]});\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Parses the specified HTML string into a DOM like node tree and returns the result.\n\t\t *\n\t\t * @example\n\t\t * var rootNode = new DomParser({...}).parse('<b>text</b>');\n\t\t * @method parse\n\t\t * @param {String} html Html string to sax parse.\n\t\t * @param {Object} args Optional args object that gets passed to all filter functions.\n\t\t * @return {tinymce.html.Node} Root node containing the tree.\n\t\t */\n\t\tself.parse = function(html, args) {\n\t\t\tvar parser, rootNode, node, nodes, i, l, fi, fl, list, name, validate,\n\t\t\t\tblockElements, startWhiteSpaceRegExp, invalidChildren = [],\n\t\t\t\tendWhiteSpaceRegExp, allWhiteSpaceRegExp, whiteSpaceElements, children, nonEmptyElements, rootBlockName;\n\n\t\t\targs = args || {};\n\t\t\tmatchedNodes = {};\n\t\t\tmatchedAttributes = {};\n\t\t\tblockElements = tinymce.extend(tinymce.makeMap('script,style,head,html,body,title,meta,param'), schema.getBlockElements());\n\t\t\tnonEmptyElements = schema.getNonEmptyElements();\n\t\t\tchildren = schema.children;\n\t\t\tvalidate = settings.validate;\n\t\t\trootBlockName = \"forced_root_block\" in args ? args.forced_root_block : settings.forced_root_block;\n\n\t\t\twhiteSpaceElements = schema.getWhiteSpaceElements();\n\t\t\tstartWhiteSpaceRegExp = /^[ \\t\\r\\n]+/;\n\t\t\tendWhiteSpaceRegExp = /[ \\t\\r\\n]+$/;\n\t\t\tallWhiteSpaceRegExp = /[ \\t\\r\\n]+/g;\n\n\t\t\tfunction addRootBlocks() {\n\t\t\t\tvar node = rootNode.firstChild, next, rootBlockNode;\n\n\t\t\t\twhile (node) {\n\t\t\t\t\tnext = node.next;\n\n\t\t\t\t\tif (node.type == 3 || (node.type == 1 && node.name !== 'p' && !blockElements[node.name] && !node.attr('data-mce-type'))) {\n\t\t\t\t\t\tif (!rootBlockNode) {\n\t\t\t\t\t\t\t// Create a new root block element\n\t\t\t\t\t\t\trootBlockNode = createNode(rootBlockName, 1);\n\t\t\t\t\t\t\trootNode.insert(rootBlockNode, node);\n\t\t\t\t\t\t\trootBlockNode.append(node);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\trootBlockNode.append(node);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootBlockNode = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tnode = next;\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tfunction createNode(name, type) {\n\t\t\t\tvar node = new Node(name, type), list;\n\n\t\t\t\tif (name in nodeFilters) {\n\t\t\t\t\tlist = matchedNodes[name];\n\n\t\t\t\t\tif (list)\n\t\t\t\t\t\tlist.push(node);\n\t\t\t\t\telse\n\t\t\t\t\t\tmatchedNodes[name] = [node];\n\t\t\t\t}\n\n\t\t\t\treturn node;\n\t\t\t};\n\n\t\t\tfunction removeWhitespaceBefore(node) {\n\t\t\t\tvar textNode, textVal, sibling;\n\n\t\t\t\tfor (textNode = node.prev; textNode && textNode.type === 3; ) {\n\t\t\t\t\ttextVal = textNode.value.replace(endWhiteSpaceRegExp, '');\n\n\t\t\t\t\tif (textVal.length > 0) {\n\t\t\t\t\t\ttextNode.value = textVal;\n\t\t\t\t\t\ttextNode = textNode.prev;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsibling = textNode.prev;\n\t\t\t\t\t\ttextNode.remove();\n\t\t\t\t\t\ttextNode = sibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tparser = new tinymce.html.SaxParser({\n\t\t\t\tvalidate : validate,\n\t\t\t\tfix_self_closing : !validate, // Let the DOM parser handle <li> in <li> or <p> in <p> for better results\n\n\t\t\t\tcdata: function(text) {\n\t\t\t\t\tnode.append(createNode('#cdata', 4)).value = text;\n\t\t\t\t},\n\n\t\t\t\ttext: function(text, raw) {\n\t\t\t\t\tvar textNode;\n\n\t\t\t\t\t// Trim all redundant whitespace on non white space elements\n\t\t\t\t\tif (!whiteSpaceElements[node.name]) {\n\t\t\t\t\t\ttext = text.replace(allWhiteSpaceRegExp, ' ');\n\n\t\t\t\t\t\tif (node.lastChild && blockElements[node.lastChild.name])\n\t\t\t\t\t\t\ttext = text.replace(startWhiteSpaceRegExp, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do we need to create the node\n\t\t\t\t\tif (text.length !== 0) {\n\t\t\t\t\t\ttextNode = createNode('#text', 3);\n\t\t\t\t\t\ttextNode.raw = !!raw;\n\t\t\t\t\t\tnode.append(textNode).value = text;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tcomment: function(text) {\n\t\t\t\t\tnode.append(createNode('#comment', 8)).value = text;\n\t\t\t\t},\n\n\t\t\t\tpi: function(name, text) {\n\t\t\t\t\tnode.append(createNode(name, 7)).value = text;\n\t\t\t\t\tremoveWhitespaceBefore(node);\n\t\t\t\t},\n\n\t\t\t\tdoctype: function(text) {\n\t\t\t\t\tvar newNode;\n\t\t\n\t\t\t\t\tnewNode = node.append(createNode('#doctype', 10));\n\t\t\t\t\tnewNode.value = text;\n\t\t\t\t\tremoveWhitespaceBefore(node);\n\t\t\t\t},\n\n\t\t\t\tstart: function(name, attrs, empty) {\n\t\t\t\t\tvar newNode, attrFiltersLen, elementRule, textNode, attrName, text, sibling, parent;\n\n\t\t\t\t\telementRule = validate ? schema.getElementRule(name) : {};\n\t\t\t\t\tif (elementRule) {\n\t\t\t\t\t\tnewNode = createNode(elementRule.outputName || name, 1);\n\t\t\t\t\t\tnewNode.attributes = attrs;\n\t\t\t\t\t\tnewNode.shortEnded = empty;\n\n\t\t\t\t\t\tnode.append(newNode);\n\n\t\t\t\t\t\t// Check if node is valid child of the parent node is the child is\n\t\t\t\t\t\t// unknown we don't collect it since it's probably a custom element\n\t\t\t\t\t\tparent = children[node.name];\n\t\t\t\t\t\tif (parent && children[newNode.name] && !parent[newNode.name])\n\t\t\t\t\t\t\tinvalidChildren.push(newNode);\n\n\t\t\t\t\t\tattrFiltersLen = attributeFilters.length;\n\t\t\t\t\t\twhile (attrFiltersLen--) {\n\t\t\t\t\t\t\tattrName = attributeFilters[attrFiltersLen].name;\n\n\t\t\t\t\t\t\tif (attrName in attrs.map) {\n\t\t\t\t\t\t\t\tlist = matchedAttributes[attrName];\n\n\t\t\t\t\t\t\t\tif (list)\n\t\t\t\t\t\t\t\t\tlist.push(newNode);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tmatchedAttributes[attrName] = [newNode];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Trim whitespace before block\n\t\t\t\t\t\tif (blockElements[name])\n\t\t\t\t\t\t\tremoveWhitespaceBefore(newNode);\n\n\t\t\t\t\t\t// Change current node if the element wasn't empty i.e not <br /> or <img />\n\t\t\t\t\t\tif (!empty)\n\t\t\t\t\t\t\tnode = newNode;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tend: function(name) {\n\t\t\t\t\tvar textNode, elementRule, text, sibling, tempNode;\n\n\t\t\t\t\telementRule = validate ? schema.getElementRule(name) : {};\n\t\t\t\t\tif (elementRule) {\n\t\t\t\t\t\tif (blockElements[name]) {\n\t\t\t\t\t\t\tif (!whiteSpaceElements[node.name]) {\n\t\t\t\t\t\t\t\t// Trim whitespace at beginning of block\n\t\t\t\t\t\t\t\tfor (textNode = node.firstChild; textNode && textNode.type === 3; ) {\n\t\t\t\t\t\t\t\t\ttext = textNode.value.replace(startWhiteSpaceRegExp, '');\n\n\t\t\t\t\t\t\t\t\tif (text.length > 0) {\n\t\t\t\t\t\t\t\t\t\ttextNode.value = text;\n\t\t\t\t\t\t\t\t\t\ttextNode = textNode.next;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsibling = textNode.next;\n\t\t\t\t\t\t\t\t\t\ttextNode.remove();\n\t\t\t\t\t\t\t\t\t\ttextNode = sibling;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Trim whitespace at end of block\n\t\t\t\t\t\t\t\tfor (textNode = node.lastChild; textNode && textNode.type === 3; ) {\n\t\t\t\t\t\t\t\t\ttext = textNode.value.replace(endWhiteSpaceRegExp, '');\n\n\t\t\t\t\t\t\t\t\tif (text.length > 0) {\n\t\t\t\t\t\t\t\t\t\ttextNode.value = text;\n\t\t\t\t\t\t\t\t\t\ttextNode = textNode.prev;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsibling = textNode.prev;\n\t\t\t\t\t\t\t\t\t\ttextNode.remove();\n\t\t\t\t\t\t\t\t\t\ttextNode = sibling;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Trim start white space\n\t\t\t\t\t\t\ttextNode = node.prev;\n\t\t\t\t\t\t\tif (textNode && textNode.type === 3) {\n\t\t\t\t\t\t\t\ttext = textNode.value.replace(startWhiteSpaceRegExp, '');\n\n\t\t\t\t\t\t\t\tif (text.length > 0)\n\t\t\t\t\t\t\t\t\ttextNode.value = text;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\ttextNode.remove();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Handle empty nodes\n\t\t\t\t\t\tif (elementRule.removeEmpty || elementRule.paddEmpty) {\n\t\t\t\t\t\t\tif (node.isEmpty(nonEmptyElements)) {\n\t\t\t\t\t\t\t\tif (elementRule.paddEmpty)\n\t\t\t\t\t\t\t\t\tnode.empty().append(new Node('#text', '3')).value = '\\u00a0';\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// Leave nodes that have a name like <a name=\"name\">\n\t\t\t\t\t\t\t\t\tif (!node.attributes.map.name) {\n\t\t\t\t\t\t\t\t\t\ttempNode = node.parent;\n\t\t\t\t\t\t\t\t\t\tnode.empty().remove();\n\t\t\t\t\t\t\t\t\t\tnode = tempNode;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnode = node.parent;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, schema);\n\n\t\t\trootNode = node = new Node(args.context || settings.root_name, 11);\n\n\t\t\tparser.parse(html);\n\n\t\t\t// Fix invalid children or report invalid children in a contextual parsing\n\t\t\tif (validate && invalidChildren.length) {\n\t\t\t\tif (!args.context)\n\t\t\t\t\tfixInvalidChildren(invalidChildren);\n\t\t\t\telse\n\t\t\t\t\targs.invalid = true;\n\t\t\t}\n\n\t\t\t// Wrap nodes in the root into block elements if the root is body\n\t\t\tif (rootBlockName && rootNode.name == 'body')\n\t\t\t\taddRootBlocks();\n\n\t\t\t// Run filters only when the contents is valid\n\t\t\tif (!args.invalid) {\n\t\t\t\t// Run node filters\n\t\t\t\tfor (name in matchedNodes) {\n\t\t\t\t\tlist = nodeFilters[name];\n\t\t\t\t\tnodes = matchedNodes[name];\n\n\t\t\t\t\t// Remove already removed children\n\t\t\t\t\tfi = nodes.length;\n\t\t\t\t\twhile (fi--) {\n\t\t\t\t\t\tif (!nodes[fi].parent)\n\t\t\t\t\t\t\tnodes.splice(fi, 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0, l = list.length; i < l; i++)\n\t\t\t\t\t\tlist[i](nodes, name, args);\n\t\t\t\t}\n\n\t\t\t\t// Run attribute filters\n\t\t\t\tfor (i = 0, l = attributeFilters.length; i < l; i++) {\n\t\t\t\t\tlist = attributeFilters[i];\n\n\t\t\t\t\tif (list.name in matchedAttributes) {\n\t\t\t\t\t\tnodes = matchedAttributes[list.name];\n\n\t\t\t\t\t\t// Remove already removed children\n\t\t\t\t\t\tfi = nodes.length;\n\t\t\t\t\t\twhile (fi--) {\n\t\t\t\t\t\t\tif (!nodes[fi].parent)\n\t\t\t\t\t\t\t\tnodes.splice(fi, 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (fi = 0, fl = list.callbacks.length; fi < fl; fi++)\n\t\t\t\t\t\t\tlist.callbacks[fi](nodes, list.name, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn rootNode;\n\t\t};\n\n\t\t// Remove <br> at end of block elements Gecko and WebKit injects BR elements to\n\t\t// make it possible to place the caret inside empty blocks. This logic tries to remove\n\t\t// these elements and keep br elements that where intended to be there intact\n\t\tif (settings.remove_trailing_brs) {\n\t\t\tself.addNodeFilter('br', function(nodes, name) {\n\t\t\t\tvar i, l = nodes.length, node, blockElements = schema.getBlockElements(),\n\t\t\t\t\tnonEmptyElements = schema.getNonEmptyElements(), parent, prev, prevName;\n\n\t\t\t\t// Remove brs from body element as well\n\t\t\t\tblockElements.body = 1;\n\n\t\t\t\t// Must loop forwards since it will otherwise remove all brs in <p>a<br><br><br></p>\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tnode = nodes[i];\n\t\t\t\t\tparent = node.parent;\n\n\t\t\t\t\tif (blockElements[node.parent.name] && node === parent.lastChild) {\n\t\t\t\t\t\t// Loop all nodes to the right of the current node and check for other BR elements\n\t\t\t\t\t\t// excluding bookmarks since they are invisible\n\t\t\t\t\t\tprev = node.prev;\n\t\t\t\t\t\twhile (prev) {\n\t\t\t\t\t\t\tprevName = prev.name;\n\n\t\t\t\t\t\t\t// Ignore bookmarks\n\t\t\t\t\t\t\tif (prevName !== \"span\" || prev.attr('data-mce-type') !== 'bookmark') {\n\t\t\t\t\t\t\t\t// Found a non BR element\n\t\t\t\t\t\t\t\tif (prevName !== \"br\")\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// Found another br it's a <br><br> structure then don't remove anything\n\t\t\t\t\t\t\t\tif (prevName === 'br') {\n\t\t\t\t\t\t\t\t\tnode = null;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprev = prev.prev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\tnode.remove();\n\n\t\t\t\t\t\t\t// Is the parent to be considered empty after we removed the BR\n\t\t\t\t\t\t\tif (parent.isEmpty(nonEmptyElements)) {\n\t\t\t\t\t\t\t\telementRule = schema.getElementRule(parent.name);\n\n\t\t\t\t\t\t\t\t// Remove or padd the element depending on schema rule\n\t\t\t\t\t\t\t\tif (elementRule) {\n\t\t\t\t\t\t\t\t  if (elementRule.removeEmpty)\n\t\t\t\t\t\t\t\t\t  parent.remove();\n\t\t\t\t\t\t\t\t  else if (elementRule.paddEmpty)\n\t\t\t\t\t\t\t\t\t  parent.empty().append(new tinymce.html.Node('#text', 3)).value = '\\u00a0';\n\t\t\t\t\t\t\t  }\n              }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/html/Writer.js":"/**\n * Writer.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n/**\n * This class is used to write HTML tags out it can be used with the Serializer or the SaxParser.\n *\n * @class tinymce.html.Writer\n * @example\n * var writer = new tinymce.html.Writer({indent : true});\n * var parser = new tinymce.html.SaxParser(writer).parse('<p><br></p>');\n * console.log(writer.getContent());\n *\n * @class tinymce.html.Writer\n * @version 3.4\n */\n\n/**\n * Constructs a new Writer instance.\n *\n * @constructor\n * @method Writer\n * @param {Object} settings Name/value settings object.\n */\ntinymce.html.Writer = function(settings) {\n\tvar html = [], indent, indentBefore, indentAfter, encode, htmlOutput;\n\n\tsettings = settings || {};\n\tindent = settings.indent;\n\tindentBefore = tinymce.makeMap(settings.indent_before || '');\n\tindentAfter = tinymce.makeMap(settings.indent_after || '');\n\tencode = tinymce.html.Entities.getEncodeFunc(settings.entity_encoding || 'raw', settings.entities);\n\thtmlOutput = settings.element_format == \"html\";\n\n\treturn {\n\t\t/**\n\t\t * Writes the a start element such as <p id=\"a\">.\n\t\t *\n\t\t * @method start\n\t\t * @param {String} name Name of the element.\n\t\t * @param {Array} attrs Optional attribute array or undefined if it hasn't any.\n\t\t * @param {Boolean} empty Optional empty state if the tag should end like <br />.\n\t\t */\n\t\tstart: function(name, attrs, empty) {\n\t\t\tvar i, l, attr, value;\n\n\t\t\tif (indent && indentBefore[name] && html.length > 0) {\n\t\t\t\tvalue = html[html.length - 1];\n\n\t\t\t\tif (value.length > 0 && value !== '\\n')\n\t\t\t\t\thtml.push('\\n');\n\t\t\t}\n\n\t\t\thtml.push('<', name);\n\n\t\t\tif (attrs) {\n\t\t\t\tfor (i = 0, l = attrs.length; i < l; i++) {\n\t\t\t\t\tattr = attrs[i];\n\t\t\t\t\thtml.push(' ', attr.name, '=\"', encode(attr.value, true), '\"');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!empty || htmlOutput)\n\t\t\t\thtml[html.length] = '>';\n\t\t\telse\n\t\t\t\thtml[html.length] = ' />';\n\n\t\t\tif (empty && indent && indentAfter[name] && html.length > 0) {\n\t\t\t\tvalue = html[html.length - 1];\n\n\t\t\t\tif (value.length > 0 && value !== '\\n')\n\t\t\t\t\thtml.push('\\n');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Writes the a end element such as </p>.\n\t\t *\n\t\t * @method end\n\t\t * @param {String} name Name of the element.\n\t\t */\n\t\tend: function(name) {\n\t\t\tvar value;\n\n\t\t\t/*if (indent && indentBefore[name] && html.length > 0) {\n\t\t\t\tvalue = html[html.length - 1];\n\n\t\t\t\tif (value.length > 0 && value !== '\\n')\n\t\t\t\t\thtml.push('\\n');\n\t\t\t}*/\n\n\t\t\thtml.push('</', name, '>');\n\n\t\t\tif (indent && indentAfter[name] && html.length > 0) {\n\t\t\t\tvalue = html[html.length - 1];\n\n\t\t\t\tif (value.length > 0 && value !== '\\n')\n\t\t\t\t\thtml.push('\\n');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Writes a text node.\n\t\t *\n\t\t * @method text\n\t\t * @param {String} text String to write out.\n\t\t * @param {Boolean} raw Optional raw state if true the contents won't get encoded.\n\t\t */\n\t\ttext: function(text, raw) {\n\t\t\tif (text.length > 0)\n\t\t\t\thtml[html.length] = raw ? text : encode(text);\n\t\t},\n\n\t\t/**\n\t\t * Writes a cdata node such as <![CDATA[data]]>.\n\t\t *\n\t\t * @method cdata\n\t\t * @param {String} text String to write out inside the cdata.\n\t\t */\n\t\tcdata: function(text) {\n\t\t\thtml.push('<![CDATA[', text, ']]>');\n\t\t},\n\n\t\t/**\n\t\t * Writes a comment node such as <!-- Comment -->.\n\t\t *\n\t\t * @method cdata\n\t\t * @param {String} text String to write out inside the comment.\n\t\t */\n\t\tcomment: function(text) {\n\t\t\thtml.push('<!--', text, '-->');\n\t\t},\n\n\t\t/**\n\t\t * Writes a PI node such as <?xml attr=\"value\" ?>.\n\t\t *\n\t\t * @method pi\n\t\t * @param {String} name Name of the pi.\n\t\t * @param {String} text String to write out inside the pi.\n\t\t */\n\t\tpi: function(name, text) {\n\t\t\tif (text)\n\t\t\t\thtml.push('<?', name, ' ', text, '?>');\n\t\t\telse\n\t\t\t\thtml.push('<?', name, '?>');\n\n\t\t\tif (indent)\n\t\t\t\thtml.push('\\n');\n\t\t},\n\n\t\t/**\n\t\t * Writes a doctype node such as <!DOCTYPE data>.\n\t\t *\n\t\t * @method doctype\n\t\t * @param {String} text String to write out inside the doctype.\n\t\t */\n\t\tdoctype: function(text) {\n\t\t\thtml.push('<!DOCTYPE', text, '>', indent ? '\\n' : '');\n\t\t},\n\n\t\t/**\n\t\t * Resets the internal buffer if one wants to reuse the writer.\n\t\t *\n\t\t * @method reset\n\t\t */\n\t\treset: function() {\n\t\t\thtml.length = 0;\n\t\t},\n\n\t\t/**\n\t\t * Returns the contents that got serialized.\n\t\t *\n\t\t * @method getContent\n\t\t * @return {String} HTML contents that got written down.\n\t\t */\n\t\tgetContent: function() {\n\t\t\treturn html.join('').replace(/\\n$/, '');\n\t\t}\n\t};\n};\n","Magento_Tinymce3/tiny_mce/classes/html/Serializer.js":"/**\n * Serializer.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\t/**\n\t * This class is used to serialize down the DOM tree into a string using a Writer instance.\n\t *\n\t *\n\t * @example\n\t * new tinymce.html.Serializer().serialize(new tinymce.html.DomParser().parse('<p>text</p>'));\n\t * @class tinymce.html.Serializer\n\t * @version 3.4\n\t */\n\n\t/**\n\t * Constructs a new Serializer instance.\n\t *\n\t * @constructor\n\t * @method Serializer\n\t * @param {Object} settings Name/value settings object.\n\t * @param {tinymce.html.Schema} schema Schema instance to use.\n\t */\n\ttinymce.html.Serializer = function(settings, schema) {\n\t\tvar self = this, writer = new tinymce.html.Writer(settings);\n\n\t\tsettings = settings || {};\n\t\tsettings.validate = \"validate\" in settings ? settings.validate : true;\n\n\t\tself.schema = schema = schema || new tinymce.html.Schema();\n\t\tself.writer = writer;\n\n\t\t/**\n\t\t * Serializes the specified node into a string.\n\t\t *\n\t\t * @example\n\t\t * new tinymce.html.Serializer().serialize(new tinymce.html.DomParser().parse('<p>text</p>'));\n\t\t * @method serialize\n\t\t * @param {tinymce.html.Node} node Node instance to serialize.\n\t\t * @return {String} String with HTML based on DOM tree.\n\t\t */\n\t\tself.serialize = function(node) {\n\t\t\tvar handlers, validate;\n\n\t\t\tvalidate = settings.validate;\n\n\t\t\thandlers = {\n\t\t\t\t// #text\n\t\t\t\t3: function(node, raw) {\n\t\t\t\t\twriter.text(node.value, node.raw);\n\t\t\t\t},\n\n\t\t\t\t// #comment\n\t\t\t\t8: function(node) {\n\t\t\t\t\twriter.comment(node.value);\n\t\t\t\t},\n\n\t\t\t\t// Processing instruction\n\t\t\t\t7: function(node) {\n\t\t\t\t\twriter.pi(node.name, node.value);\n\t\t\t\t},\n\n\t\t\t\t// Doctype\n\t\t\t\t10: function(node) {\n\t\t\t\t\twriter.doctype(node.value);\n\t\t\t\t},\n\n\t\t\t\t// CDATA\n\t\t\t\t4: function(node) {\n\t\t\t\t\twriter.cdata(node.value);\n\t\t\t\t},\n\n \t\t\t\t// Document fragment\n\t\t\t\t11: function(node) {\n\t\t\t\t\tif ((node = node.firstChild)) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\twalk(node);\n\t\t\t\t\t\t} while (node = node.next);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twriter.reset();\n\n\t\t\tfunction walk(node) {\n\t\t\t\tvar handler = handlers[node.type], name, isEmpty, attrs, attrName, attrValue, sortedAttrs, i, l, elementRule;\n\n\t\t\t\tif (!handler) {\n\t\t\t\t\tname = node.name;\n\t\t\t\t\tisEmpty = node.shortEnded;\n\t\t\t\t\tattrs = node.attributes;\n\n\t\t\t\t\t// Sort attributes\n\t\t\t\t\tif (validate && attrs && attrs.length > 1) {\n\t\t\t\t\t\tsortedAttrs = [];\n\t\t\t\t\t\tsortedAttrs.map = {};\n\n\t\t\t\t\t\telementRule = schema.getElementRule(node.name);\n\t\t\t\t\t\tfor (i = 0, l = elementRule.attributesOrder.length; i < l; i++) {\n\t\t\t\t\t\t\tattrName = elementRule.attributesOrder[i];\n\n\t\t\t\t\t\t\tif (attrName in attrs.map) {\n\t\t\t\t\t\t\t\tattrValue = attrs.map[attrName];\n\t\t\t\t\t\t\t\tsortedAttrs.map[attrName] = attrValue;\n\t\t\t\t\t\t\t\tsortedAttrs.push({name: attrName, value: attrValue});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (i = 0, l = attrs.length; i < l; i++) {\n\t\t\t\t\t\t\tattrName = attrs[i].name;\n\n\t\t\t\t\t\t\tif (!(attrName in sortedAttrs.map)) {\n\t\t\t\t\t\t\t\tattrValue = attrs.map[attrName];\n\t\t\t\t\t\t\t\tsortedAttrs.map[attrName] = attrValue;\n\t\t\t\t\t\t\t\tsortedAttrs.push({name: attrName, value: attrValue});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tattrs = sortedAttrs;\n\t\t\t\t\t}\n\n\t\t\t\t\twriter.start(node.name, attrs, isEmpty);\n\n\t\t\t\t\tif (!isEmpty) {\n\t\t\t\t\t\tif ((node = node.firstChild)) {\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\twalk(node);\n\t\t\t\t\t\t\t} while (node = node.next);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twriter.end(name);\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\thandler(node);\n\t\t\t}\n\n\t\t\t// Serialize element and treat all non elements as fragments\n\t\t\tif (node.type == 1 && !settings.inner)\n\t\t\t\twalk(node);\n\t\t\telse\n\t\t\t\thandlers[11](node);\n\n\t\t\treturn writer.getContent();\n\t\t};\n\t}\n})(tinymce);\n","Magento_Tinymce3/tiny_mce/classes/html/Node.js":"/**\n * Node.js\n *\n * Copyright 2010, Moxiecode Systems AB\n * Released under LGPL License.\n *\n * License: http://tinymce.moxiecode.com/license\n * Contributing: http://tinymce.moxiecode.com/contributing\n */\n\n(function(tinymce) {\n\tvar whiteSpaceRegExp = /^[ \\t\\r\\n]*$/, typeLookup = {\n\t\t'#text' : 3,\n\t\t'#comment' : 8,\n\t\t'#cdata' : 4,\n\t\t'#pi' : 7,\n\t\t'#doctype' : 10,\n\t\t'#document-fragment' : 11\n\t};\n\n\t// Walks the tree left/right\n\tfunction walk(node, root_node, prev) {\n\t\tvar sibling, parent, startName = prev ? 'lastChild' : 'firstChild', siblingName = prev ? 'prev' : 'next';\n\n\t\t// Walk into nodes if it has a start\n\t\tif (node[startName])\n\t\t\treturn node[startName];\n\n\t\t// Return the sibling if it has one\n\t\tif (node !== root_node) {\n\t\t\tsibling = node[siblingName];\n\n\t\t\tif (sibling)\n\t\t\t\treturn sibling;\n\n\t\t\t// Walk up the parents to look for siblings\n\t\t\tfor (parent = node.parent; parent && parent !== root_node; parent = parent.parent) {\n\t\t\t\tsibling = parent[siblingName];\n\n\t\t\t\tif (sibling)\n\t\t\t\t\treturn sibling;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * This class is a minimalistic implementation of a DOM like node used by the DomParser class.\n\t *\n\t * @example\n\t * var node = new tinymce.html.Node('strong', 1);\n\t * someRoot.append(node);\n\t *\n\t * @class tinymce.html.Node\n\t * @version 3.4\n\t */\n\n\t/**\n\t * Constructs a new Node instance.\n\t *\n\t * @constructor\n\t * @method Node\n\t * @param {String} name Name of the node type.\n\t * @param {Number} type Numeric type representing the node.\n\t */\n\tfunction Node(name, type) {\n\t\tthis.name = name;\n\t\tthis.type = type;\n\n\t\tif (type === 1) {\n\t\t\tthis.attributes = [];\n\t\t\tthis.attributes.map = {};\n\t\t}\n\t}\n\n\ttinymce.extend(Node.prototype, {\n\t\t/**\n\t\t * Replaces the current node with the specified one.\n\t\t *\n\t\t * @example\n\t\t * someNode.replace(someNewNode);\n\t\t *\n\t\t * @method replace\n\t\t * @param {tinymce.html.Node} node Node to replace the current node with.\n\t\t * @return {tinymce.html.Node} The old node that got replaced.\n\t\t */\n\t\treplace : function(node) {\n\t\t\tvar self = this;\n\n\t\t\tif (node.parent)\n\t\t\t\tnode.remove();\n\n\t\t\tself.insert(node, self);\n\t\t\tself.remove();\n\n\t\t\treturn self;\n\t\t},\n\n\t\t/**\n\t\t * Gets/sets or removes an attribute by name.\n\t\t *\n\t\t * @example\n\t\t * someNode.attr(\"name\", \"value\"); // Sets an attribute\n\t\t * console.log(someNode.attr(\"name\")); // Gets an attribute\n\t\t * someNode.attr(\"name\", null); // Removes an attribute\n\t\t *\n\t\t * @method attr\n\t\t * @param {String} name Attribute name to set or get.\n\t\t * @param {String} value Optional value to set.\n\t\t * @return {String/tinymce.html.Node} String or undefined on a get operation or the current node on a set operation.\n\t\t */\n\t\tattr : function(name, value) {\n\t\t\tvar self = this, attrs, i, undef;\n\n\t\t\tif (typeof name !== \"string\") {\n\t\t\t\tfor (i in name)\n\t\t\t\t\tself.attr(i, name[i]);\n\n\t\t\t\treturn self;\n\t\t\t}\n\n\t\t\tif (attrs = self.attributes) {\n\t\t\t\tif (value !== undef) {\n\t\t\t\t\t// Remove attribute\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tif (name in attrs.map) {\n\t\t\t\t\t\t\tdelete attrs.map[name];\n\n\t\t\t\t\t\t\ti = attrs.length;\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\tif (attrs[i].name === name) {\n\t\t\t\t\t\t\t\t\tattrs = attrs.splice(i, 1);\n\t\t\t\t\t\t\t\t\treturn self;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn self;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set attribute\n\t\t\t\t\tif (name in attrs.map) {\n\t\t\t\t\t\t// Set attribute\n\t\t\t\t\t\ti = attrs.length;\n\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\tif (attrs[i].name === name) {\n\t\t\t\t\t\t\t\tattrs[i].value = value;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tattrs.push({name: name, value: value});\n\n\t\t\t\t\tattrs.map[name] = value;\n\n\t\t\t\t\treturn self;\n\t\t\t\t} else {\n\t\t\t\t\treturn attrs.map[name];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Does a shallow clones the node into a new node. It will also exclude id attributes since\n\t\t * there should only be one id per document.\n\t\t *\n\t\t * @example\n\t\t * var clonedNode = node.clone();\n\t\t *\n\t\t * @method clone\n\t\t * @return {tinymce.html.Node} New copy of the original node.\n\t\t */\n\t\tclone : function() {\n\t\t\tvar self = this, clone = new Node(self.name, self.type), i, l, selfAttrs, selfAttr, cloneAttrs;\n\n\t\t\t// Clone element attributes\n\t\t\tif (selfAttrs = self.attributes) {\n\t\t\t\tcloneAttrs = [];\n\t\t\t\tcloneAttrs.map = {};\n\n\t\t\t\tfor (i = 0, l = selfAttrs.length; i < l; i++) {\n\t\t\t\t\tselfAttr = selfAttrs[i];\n\n\t\t\t\t\t// Clone everything except id\n\t\t\t\t\tif (selfAttr.name !== 'id') {\n\t\t\t\t\t\tcloneAttrs[cloneAttrs.length] = {name: selfAttr.name, value: selfAttr.value};\n\t\t\t\t\t\tcloneAttrs.map[selfAttr.name] = selfAttr.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclone.attributes = cloneAttrs;\n\t\t\t}\n\n\t\t\tclone.value = self.value;\n\t\t\tclone.shortEnded = self.shortEnded;\n\n\t\t\treturn clone;\n\t\t},\n\n\t\t/**\n\t\t * Wraps the node in in another node.\n\t\t *\n\t\t * @example\n\t\t * node.wrap(wrapperNode);\n\t\t *\n\t\t * @method wrap\n\t\t */\n\t\twrap : function(wrapper) {\n\t\t\tvar self = this;\n\n\t\t\tself.parent.insert(wrapper, self);\n\t\t\twrapper.append(self);\n\n\t\t\treturn self;\n\t\t},\n\n\t\t/**\n\t\t * Unwraps the node in other words it removes the node but keeps the children.\n\t\t *\n\t\t * @example\n\t\t * node.unwrap();\n\t\t *\n\t\t * @method unwrap\n\t\t */\n\t\tunwrap : function() {\n\t\t\tvar self = this, node, next;\n\n\t\t\tfor (node = self.firstChild; node; ) {\n\t\t\t\tnext = node.next;\n\t\t\t\tself.insert(node, self, true);\n\t\t\t\tnode = next;\n\t\t\t}\n\n\t\t\tself.remove();\n\t\t},\n\n\t\t/**\n\t\t * Removes the node from it's parent.\n\t\t *\n\t\t * @example\n\t\t * node.remove();\n\t\t *\n\t\t * @method remove\n\t\t * @return {tinymce.html.Node} Current node that got removed.\n\t\t */\n\t\tremove : function() {\n\t\t\tvar self = this, parent = self.parent, next = self.next, prev = self.prev;\n\n\t\t\tif (parent) {\n\t\t\t\tif (parent.firstChild === self) {\n\t\t\t\t\tparent.firstChild = next;\n\n\t\t\t\t\tif (next)\n\t\t\t\t\t\tnext.prev = null;\n\t\t\t\t} else {\n\t\t\t\t\tprev.next = next;\n\t\t\t\t}\n\n\t\t\t\tif (parent.lastChild === self) {\n\t\t\t\t\tparent.lastChild = prev;\n\n\t\t\t\t\tif (prev)\n\t\t\t\t\t\tprev.next = null;\n\t\t\t\t} else {\n\t\t\t\t\tnext.prev = prev;\n\t\t\t\t}\n\n\t\t\t\tself.parent = self.next = self.prev = null;\n\t\t\t}\n\n\t\t\treturn self;\n\t\t},\n\n\t\t/**\n\t\t * Appends a new node as a child of the current node.\n\t\t *\n\t\t * @example\n\t\t * node.append(someNode);\n\t\t *\n\t\t * @method append\n\t\t * @param {tinymce.html.Node} node Node to append as a child of the current one.\n\t\t * @return {tinymce.html.Node} The node that got appended.\n\t\t */\n\t\tappend : function(node) {\n\t\t\tvar self = this, last;\n\n\t\t\tif (node.parent)\n\t\t\t\tnode.remove();\n\n\t\t\tlast = self.lastChild;\n\t\t\tif (last) {\n\t\t\t\tlast.next = node;\n\t\t\t\tnode.prev = last;\n\t\t\t\tself.lastChild = node;\n\t\t\t} else\n\t\t\t\tself.lastChild = self.firstChild = node;\n\n\t\t\tnode.parent = self;\n\n\t\t\treturn node;\n\t\t},\n\n\t\t/**\n\t\t * Inserts a node at a specific position as a child of the current node.\n\t\t *\n\t\t * @example\n\t\t * parentNode.insert(newChildNode, oldChildNode);\n\t\t *\n\t\t * @method insert\n\t\t * @param {tinymce.html.Node} node Node to insert as a child of the current node.\n\t\t * @param {tinymce.html.Node} ref_node Reference node to set node before/after.\n\t\t * @param {Boolean} before Optional state to insert the node before the reference node.\n\t\t * @return {tinymce.html.Node} The node that got inserted.\n\t\t */\n\t\tinsert : function(node, ref_node, before) {\n\t\t\tvar parent;\n\n\t\t\tif (node.parent)\n\t\t\t\tnode.remove();\n\n\t\t\tparent = ref_node.parent || this;\n\n\t\t\tif (before) {\n\t\t\t\tif (ref_node === parent.firstChild)\n\t\t\t\t\tparent.firstChild = node;\n\t\t\t\telse\n\t\t\t\t\tref_node.prev.next = node;\n\n\t\t\t\tnode.prev = ref_node.prev;\n\t\t\t\tnode.next = ref_node;\n\t\t\t\tref_node.prev = node;\n\t\t\t} else {\n\t\t\t\tif (ref_node === parent.lastChild)\n\t\t\t\t\tparent.lastChild = node;\n\t\t\t\telse\n\t\t\t\t\tref_node.next.prev = node;\n\n\t\t\t\tnode.next = ref_node.next;\n\t\t\t\tnode.prev = ref_node;\n\t\t\t\tref_node.next = node;\n\t\t\t}\n\n\t\t\tnode.parent = parent;\n\n\t\t\treturn node;\n\t\t},\n\n\t\t/**\n\t\t * Get all children by name.\n\t\t *\n\t\t * @method getAll\n\t\t * @param {String} name Name of the child nodes to collect.\n\t\t * @return {Array} Array with child nodes matchin the specified name.\n\t\t */\n\t\tgetAll : function(name) {\n\t\t\tvar self = this, node, collection = [];\n\n\t\t\tfor (node = self.firstChild; node; node = walk(node, self)) {\n\t\t\t\tif (node.name === name)\n\t\t\t\t\tcollection.push(node);\n\t\t\t}\n\n\t\t\treturn collection;\n\t\t},\n\n\t\t/**\n\t\t * Removes all children of the current node.\n\t\t *\n\t\t * @method empty\n\t\t * @return {tinymce.html.Node} The current node that got cleared.\n\t\t */\n\t\tempty : function() {\n\t\t\tvar self = this, nodes, i, node;\n\n\t\t\t// Remove all children\n\t\t\tif (self.firstChild) {\n\t\t\t\tnodes = [];\n\n\t\t\t\t// Collect the children\n\t\t\t\tfor (node = self.firstChild; node; node = walk(node, self))\n\t\t\t\t\tnodes.push(node);\n\n\t\t\t\t// Remove the children\n\t\t\t\ti = nodes.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tnode = nodes[i];\n\t\t\t\t\tnode.parent = node.firstChild = node.lastChild = node.next = node.prev = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.firstChild = self.lastChild = null;\n\n\t\t\treturn self;\n\t\t},\n\n\t\t/**\n\t\t * Returns true/false if the node is to be considered empty or not.\n\t\t *\n\t\t * @example\n\t\t * node.isEmpty({img : true});\n\t\t * @method isEmpty\n\t\t * @param {Object} elements Name/value object with elements that are automatically treated as non empty elements.\n\t\t * @return {Boolean} true/false if the node is empty or not.\n\t\t */\n\t\tisEmpty : function(elements) {\n\t\t\tvar self = this, node = self.firstChild, i, name;\n\n\t\t\tif (node) {\n\t\t\t\tdo {\n\t\t\t\t\tif (node.type === 1) {\n\t\t\t\t\t\t// Ignore bogus elements\n\t\t\t\t\t\tif (node.attributes.map['data-mce-bogus'])\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t// Keep empty elements like <img />\n\t\t\t\t\t\tif (elements[node.name])\n\t\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t\t// Keep elements with data attributes or name attribute like <a name=\"1\"></a>\n\t\t\t\t\t\ti = node.attributes.length;\n\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\tname = node.attributes[i].name;\n\t\t\t\t\t\t\tif (name === \"name\" || name.indexOf('data-') === 0)\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Keep non whitespace text nodes\n\t\t\t\t\tif ((node.type === 3 && !whiteSpaceRegExp.test(node.value)))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} while (node = walk(node, self));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Walks to the next or previous node and returns that node or null if it wasn't found.\n\t\t *\n\t\t * @method walk\n\t\t * @param {Boolean} prev Optional previous node state defaults to false.\n\t\t * @return {tinymce.html.Node} Node that is next to or previous of the current node.\n\t\t */\n\t\twalk : function(prev) {\n\t\t\treturn walk(this, null, prev);\n\t\t}\n\t});\n\n\ttinymce.extend(Node, {\n\t\t/**\n\t\t * Creates a node of a specific type.\n\t\t *\n\t\t * @static\n\t\t * @method create\n\t\t * @param {String} name Name of the node type to create for example \"b\" or \"#text\".\n\t\t * @param {Object} attrs Name/value collection of attributes that will be applied to elements.\n\t\t */\n\t\tcreate : function(name, attrs) {\n\t\t\tvar node, attrName;\n\n\t\t\t// Create node\n\t\t\tnode = new Node(name, typeLookup[name] || 1);\n\n\t\t\t// Add attributes if needed\n\t\t\tif (attrs) {\n\t\t\t\tfor (attrName in attrs)\n\t\t\t\t\tnode.attr(attrName, attrs[attrName]);\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t});\n\n\ttinymce.html.Node = Node;\n})(tinymce);\n","Magento_Review/js/error-placement.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'mage/mage'\n], function ($) {\n    'use strict';\n\n    return function (config, element) {\n        $(element).mage('validation', {\n            /** @inheritdoc */\n            errorPlacement: function (error, el) {\n\n                if (el.parents('#product-review-table').length) {\n                    $('#product-review-table').siblings(this.errorElement + '.' + this.errorClass).remove();\n                    $('#product-review-table').after(error);\n                } else {\n                    el.after(error);\n                }\n            }\n        });\n    };\n});\n","Magento_Review/js/process-reviews.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * @param {String} url\n     * @param {*} fromPages\n     */\n    function processReviews(url, fromPages) {\n        $.ajax({\n            url: url,\n            cache: true,\n            dataType: 'html',\n            showLoader: false,\n            loaderContext: $('.product.data.items')\n        }).done(function (data) {\n            $('#product-review-container').html(data).trigger('contentUpdated');\n            $('[data-role=\"product-review\"] .pages a').each(function (index, element) {\n                $(element).click(function (event) { //eslint-disable-line max-nested-callbacks\n                    processReviews($(element).attr('href'), true);\n                    event.preventDefault();\n                });\n            });\n        }).complete(function () {\n            if (fromPages == true) { //eslint-disable-line eqeqeq\n                $('html, body').animate({\n                    scrollTop: $('#reviews').offset().top - 50\n                }, 300);\n            }\n        });\n    }\n\n    return function (config) {\n        var reviewTab = $(config.reviewsTabSelector),\n            requiredReviewTabRole = 'tab';\n\n        if (reviewTab.attr('role') === requiredReviewTabRole && reviewTab.hasClass('active')) {\n            processReviews(config.productReviewUrl);\n        } else {\n            reviewTab.one('beforeOpen', function () {\n                processReviews(config.productReviewUrl);\n            });\n        }\n\n        $(function () {\n            $('.product-info-main .reviews-actions a').click(function (event) {\n                var anchor;\n\n                event.preventDefault();\n                anchor = $(this).attr('href').replace(/^.*?(#|$)/, '');\n                $('.product.data.items [data-role=\"content\"]').each(function (index) { //eslint-disable-line\n                    if (this.id == 'reviews') { //eslint-disable-line eqeqeq\n                        $('.product.data.items').tabs('activate', index);\n                        $('html, body').animate({\n                            scrollTop: $('#' + anchor).offset().top - 50\n                        }, 300);\n                    }\n                });\n            });\n        });\n    };\n});\n","Magento_Review/js/validate-review.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/ui',\n    'jquery/validate',\n    'mage/translate'\n], function ($) {\n    'use strict';\n\n    $.validator.addMethod(\n        'rating-required', function (value) {\n            return value !== undefined;\n        }, $.mage.__('Please select one of each of the ratings above.'));\n});\n","Magento_Review/js/view/review.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data',\n    'Magento_Customer/js/view/customer'\n], function (Component, customerData) {\n    'use strict';\n\n    return Component.extend({\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n\n            this.review = customerData.get('review').extend({\n                disposableCustomerData: 'review'\n            });\n        },\n\n        /**\n         * @return {*}\n         */\n        nickname: function () {\n            return this.review().nickname || customerData.get('customer')().firstname;\n        }\n    });\n});\n","Magento_InstantPurchase/js/view/instant-purchase.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'jquery',\n    'underscore',\n    'uiComponent',\n    'Magento_Ui/js/modal/confirm',\n    'Magento_Customer/js/customer-data',\n    'mage/url',\n    'mage/template',\n    'mage/translate',\n    'text!Magento_InstantPurchase/template/confirmation.html',\n    'mage/validation'\n], function (ko, $, _, Component, confirm, customerData, urlBuilder, mageTemplate, $t, confirmationTemplate) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_InstantPurchase/instant-purchase',\n            buttonText: $t('Instant Purchase'),\n            purchaseUrl: urlBuilder.build('instantpurchase/button/placeOrder'),\n            showButton: false,\n            paymentToken: null,\n            shippingAddress: null,\n            billingAddress: null,\n            shippingMethod: null,\n            productFormSelector: '#product_addtocart_form',\n            confirmationTitle: $t('Instant Purchase Confirmation'),\n            confirmationData: {\n                message: $t('Are you sure you want to place order and pay?'),\n                shippingAddressTitle: $t('Shipping Address'),\n                billingAddressTitle: $t('Billing Address'),\n                paymentMethodTitle: $t('Payment Method'),\n                shippingMethodTitle: $t('Shipping Method')\n            }\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            var instantPurchase = customerData.get('instant-purchase');\n\n            this._super();\n\n            this.setPurchaseData(instantPurchase());\n            instantPurchase.subscribe(this.setPurchaseData, this);\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super()\n                .observe('showButton paymentToken shippingAddress billingAddress shippingMethod');\n\n            return this;\n        },\n\n        /**\n         * Set data from customerData.\n         *\n         * @param {Object} data\n         */\n        setPurchaseData: function (data) {\n            this.showButton(data.available);\n            this.paymentToken(data.paymentToken);\n            this.shippingAddress(data.shippingAddress);\n            this.billingAddress(data.billingAddress);\n            this.shippingMethod(data.shippingMethod);\n        },\n\n        /**\n         * Confirmation method\n         */\n        instantPurchase: function () {\n            var form = $(this.productFormSelector),\n                confirmTemplate = mageTemplate(confirmationTemplate),\n                confirmData = _.extend({}, this.confirmationData, {\n                    paymentToken: this.paymentToken().summary,\n                    shippingAddress: this.shippingAddress().summary,\n                    billingAddress: this.billingAddress().summary,\n                    shippingMethod: this.shippingMethod().summary\n                });\n\n            if (!(form.validation() && form.validation('isValid'))) {\n                return;\n            }\n\n            confirm({\n                title: this.confirmationTitle,\n                content: confirmTemplate({\n                    data: confirmData\n                }),\n                actions: {\n                    /** @inheritdoc */\n                    confirm: function () {\n                        $.ajax({\n                            url: this.purchaseUrl,\n                            data: form.serialize(),\n                            type: 'post',\n                            dataType: 'json',\n\n                            /** Show loader before send */\n                            beforeSend: function () {\n                                $('body').trigger('processStart');\n                            }\n                        }).always(function () {\n                            $('body').trigger('processStop');\n                        });\n                    }.bind(this)\n                }\n            });\n        }\n    });\n});\n","Vertex_Tax/js/view/checkout/summary/tax-messages.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'underscore',\n    'ko',\n    'uiComponent',\n    'Magento_Checkout/js/model/totals'\n], function (_, ko, Component, totals) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            messages: []\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n            this.subscribeTotals();\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe('messages');\n            this.getMessages();\n\n            return this;\n        },\n\n        /**\n         * Retrieve messages\n         */\n        getMessages: function () {\n            var taxSegment = totals.getSegment('tax');\n\n            this.messages([]);\n\n            if (taxSegment && taxSegment['extension_attributes']) {\n                this.messages(taxSegment['extension_attributes']['vertex_tax_calculation_messages']);\n            }\n        },\n\n        /**\n         * Subscribe totals observer\n         */\n        subscribeTotals: function () {\n            var self = this;\n\n            totals.totals.subscribe(\n                function () {\n                    self.getMessages();\n                },\n                null,\n                'change'\n            );\n        }\n    });\n});\n","Vertex_Tax/js/model/set-checkout-messages.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine(\n    [\n        'underscore',\n        'Magento_Customer/js/customer-data',\n        'Magento_Ui/js/model/messageList'\n    ],\n    function (_, customerData, messageContainer) {\n        'use strict';\n\n        /**\n         * A utility for observing message updates in session storage. It is designed to subscribe to\n         * customer data updates and forward messages to the appropriate messageList model.\n         */\n        return function () {\n            var typeMap = {\n                    'success': 'addSuccessMessage',\n                    'warning': 'addErrorMessage',\n                    'error': 'addErrorMessage'\n                },\n\n                /**\n                 * Observe message section data changes and forward to the error processor.\n                 * @param {Object} data - The observable payload.\n                 * @return void\n                 */\n                messageSubscriptionCallback = function (data) {\n                    if ('messages' in data) {\n                        _.each(data.messages, function (message) {\n                            if (message.type in typeMap) {\n                                messageContainer[typeMap[message.type]]({\n                                    'message': message.text\n                                });\n                            }\n                        });\n                    }\n                };\n\n            customerData.get('messages').subscribe(messageSubscriptionCallback);\n        };\n    }\n);\n"}
}});
